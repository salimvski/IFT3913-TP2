Found a 182 line (998 tokens) duplication in the following files: 
Starting at line 1050 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 881 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

            position = getNegativeItemLabelPosition(row, column);
        }

        // work out the label anchor point...
        Point2D anchorPoint = calculateLabelAnchorPoint(
                position.getItemLabelAnchor(), bar, plot.getOrientation());

        if (isInternalAnchor(position.getItemLabelAnchor())) {
            Shape bounds = TextUtils.calculateRotatedStringBounds(label,
                    g2, (float) anchorPoint.getX(), (float) anchorPoint.getY(),
                    position.getTextAnchor(), position.getAngle(),
                    position.getRotationAnchor());

            if (bounds != null) {
                if (!bar.contains(bounds.getBounds2D())) {
                    if (!negative) {
                        position = getPositiveItemLabelPositionFallback();
                    }
                    else {
                        position = getNegativeItemLabelPositionFallback();
                    }
                    if (position != null) {
                        anchorPoint = calculateLabelAnchorPoint(
                                position.getItemLabelAnchor(), bar,
                                plot.getOrientation());
                    }
                }
            }

        }

        if (position != null) {
            TextUtils.drawRotatedString(label, g2,
                    (float) anchorPoint.getX(), (float) anchorPoint.getY(),
                    position.getTextAnchor(), position.getAngle(),
                    position.getRotationAnchor());
        }
    }

    /**
     * Calculates the item label anchor point.
     *
     * @param anchor  the anchor.
     * @param bar  the bar.
     * @param orientation  the plot orientation.
     *
     * @return The anchor point.
     */
    private Point2D calculateLabelAnchorPoint(ItemLabelAnchor anchor,
                                              Rectangle2D bar,
                                              PlotOrientation orientation) {

        Point2D result = null;
        double offset = getItemLabelAnchorOffset();
        double x0 = bar.getX() - offset;
        double x1 = bar.getX();
        double x2 = bar.getX() + offset;
        double x3 = bar.getCenterX();
        double x4 = bar.getMaxX() - offset;
        double x5 = bar.getMaxX();
        double x6 = bar.getMaxX() + offset;

        double y0 = bar.getMaxY() + offset;
        double y1 = bar.getMaxY();
        double y2 = bar.getMaxY() - offset;
        double y3 = bar.getCenterY();
        double y4 = bar.getMinY() + offset;
        double y5 = bar.getMinY();
        double y6 = bar.getMinY() - offset;

        if (anchor == ItemLabelAnchor.CENTER) {
            result = new Point2D.Double(x3, y3);
        }
        else if (anchor == ItemLabelAnchor.INSIDE1) {
            result = new Point2D.Double(x4, y4);
        }
        else if (anchor == ItemLabelAnchor.INSIDE2) {
            result = new Point2D.Double(x4, y4);
        }
        else if (anchor == ItemLabelAnchor.INSIDE3) {
            result = new Point2D.Double(x4, y3);
        }
        else if (anchor == ItemLabelAnchor.INSIDE4) {
            result = new Point2D.Double(x4, y2);
        }
        else if (anchor == ItemLabelAnchor.INSIDE5) {
            result = new Point2D.Double(x4, y2);
        }
        else if (anchor == ItemLabelAnchor.INSIDE6) {
            result = new Point2D.Double(x3, y2);
        }
        else if (anchor == ItemLabelAnchor.INSIDE7) {
            result = new Point2D.Double(x2, y2);
        }
        else if (anchor == ItemLabelAnchor.INSIDE8) {
            result = new Point2D.Double(x2, y2);
        }
        else if (anchor == ItemLabelAnchor.INSIDE9) {
            result = new Point2D.Double(x2, y3);
        }
        else if (anchor == ItemLabelAnchor.INSIDE10) {
            result = new Point2D.Double(x2, y4);
        }
        else if (anchor == ItemLabelAnchor.INSIDE11) {
            result = new Point2D.Double(x2, y4);
        }
        else if (anchor == ItemLabelAnchor.INSIDE12) {
            result = new Point2D.Double(x3, y4);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE1) {
            result = new Point2D.Double(x5, y6);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE2) {
            result = new Point2D.Double(x6, y5);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE3) {
            result = new Point2D.Double(x6, y3);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE4) {
            result = new Point2D.Double(x6, y1);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE5) {
            result = new Point2D.Double(x5, y0);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE6) {
            result = new Point2D.Double(x3, y0);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE7) {
            result = new Point2D.Double(x1, y0);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE8) {
            result = new Point2D.Double(x0, y1);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE9) {
            result = new Point2D.Double(x0, y3);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE10) {
            result = new Point2D.Double(x0, y5);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE11) {
            result = new Point2D.Double(x1, y6);
        }
        else if (anchor == ItemLabelAnchor.OUTSIDE12) {
            result = new Point2D.Double(x3, y6);
        }

        return result;

    }

    /**
     * Returns {@code true} if the specified anchor point is inside a bar.
     *
     * @param anchor  the anchor point.
     *
     * @return A boolean.
     */
    private boolean isInternalAnchor(ItemLabelAnchor anchor) {
        return anchor == ItemLabelAnchor.CENTER
               || anchor == ItemLabelAnchor.INSIDE1
               || anchor == ItemLabelAnchor.INSIDE2
               || anchor == ItemLabelAnchor.INSIDE3
               || anchor == ItemLabelAnchor.INSIDE4
               || anchor == ItemLabelAnchor.INSIDE5
               || anchor == ItemLabelAnchor.INSIDE6
               || anchor == ItemLabelAnchor.INSIDE7
               || anchor == ItemLabelAnchor.INSIDE8
               || anchor == ItemLabelAnchor.INSIDE9
               || anchor == ItemLabelAnchor.INSIDE10
               || anchor == ItemLabelAnchor.INSIDE11
               || anchor == ItemLabelAnchor.INSIDE12;
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
=====================================================================
Found a 128 line (662 tokens) duplication in the following files: 
Starting at line 216 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

        g2.setPaint(renderer.getShadowPaint());
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }

    /**
     * Splits a bar into subregions (elsewhere, these subregions will have
     * different gradients applied to them).
     *
     * @param bar  the bar shape.
     * @param a  the first division.
     * @param b  the second division.
     * @param c  the third division.
     *
     * @return An array containing four subregions.
     */
    private Rectangle2D[] splitVerticalBar(RectangularShape bar, double a,
            double b, double c) {
        Rectangle2D[] result = new Rectangle2D[4];
        double x0 = bar.getMinX();
        double x1 = Math.rint(x0 + (bar.getWidth() * a));
        double x2 = Math.rint(x0 + (bar.getWidth() * b));
        double x3 = Math.rint(x0 + (bar.getWidth() * c));
        result[0] = new Rectangle2D.Double(bar.getMinX(), bar.getMinY(),
                x1 - x0, bar.getHeight());
        result[1] = new Rectangle2D.Double(x1, bar.getMinY(), x2 - x1,
                bar.getHeight());
        result[2] = new Rectangle2D.Double(x2, bar.getMinY(), x3 - x2,
                bar.getHeight());
        result[3] = new Rectangle2D.Double(x3, bar.getMinY(),
                bar.getMaxX() - x3, bar.getHeight());
        return result;
    }

    /**
     * Splits a bar into subregions (elsewhere, these subregions will have
     * different gradients applied to them).
     *
     * @param bar  the bar shape.
     * @param a  the first division.
     * @param b  the second division.
     * @param c  the third division.
     *
     * @return An array containing four subregions.
     */
    private Rectangle2D[] splitHorizontalBar(RectangularShape bar, double a,
            double b, double c) {
        Rectangle2D[] result = new Rectangle2D[4];
        double y0 = bar.getMinY();
        double y1 = Math.rint(y0 + (bar.getHeight() * a));
        double y2 = Math.rint(y0 + (bar.getHeight() * b));
        double y3 = Math.rint(y0 + (bar.getHeight() * c));
        result[0] = new Rectangle2D.Double(bar.getMinX(), bar.getMinY(),
                bar.getWidth(), y1 - y0);
        result[1] = new Rectangle2D.Double(bar.getMinX(), y1, bar.getWidth(),
                y2 - y1);
        result[2] = new Rectangle2D.Double(bar.getMinX(), y2, bar.getWidth(),
                y3 - y2);
        result[3] = new Rectangle2D.Double(bar.getMinX(), y3, bar.getWidth(),
                bar.getMaxY() - y3);
        return result;
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the obj ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof GradientBarPainter)) {
=====================================================================
Found a 110 line (564 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainCategoryPlotTest.java
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeCategoryPlotTest.java

        CategoryPlot<String, String> subplot1 = plot.getSubplots().get(0);
        NumberAxis yAxis = (NumberAxis) subplot1.getRangeAxis();
        yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero());
        assertEquals(1, this.events.size());

        // a redraw should NOT trigger another change event
        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        this.events.clear();
        chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0));
        assertTrue(this.events.isEmpty());
    }

    /**
     * Creates a dataset.
     *
     * @return A dataset.
     */
    public CategoryDataset<String, String> createDataset1() {

        DefaultCategoryDataset<String, String> result = new DefaultCategoryDataset<>();

        // row keys...
        String series1 = "First";
        String series2 = "Second";

        // column keys...
        String type1 = "Type 1";
        String type2 = "Type 2";
        String type3 = "Type 3";
        String type4 = "Type 4";
        String type5 = "Type 5";
        String type6 = "Type 6";
        String type7 = "Type 7";
        String type8 = "Type 8";

        result.addValue(1.0, series1, type1);
        result.addValue(4.0, series1, type2);
        result.addValue(3.0, series1, type3);
        result.addValue(5.0, series1, type4);
        result.addValue(5.0, series1, type5);
        result.addValue(7.0, series1, type6);
        result.addValue(7.0, series1, type7);
        result.addValue(8.0, series1, type8);

        result.addValue(5.0, series2, type1);
        result.addValue(7.0, series2, type2);
        result.addValue(6.0, series2, type3);
        result.addValue(8.0, series2, type4);
        result.addValue(4.0, series2, type5);
        result.addValue(4.0, series2, type6);
        result.addValue(2.0, series2, type7);
        result.addValue(1.0, series2, type8);

        return result;

    }

    /**
     * Creates a dataset.
     *
     * @return A dataset.
     */
    public CategoryDataset<String, String> createDataset2() {

        DefaultCategoryDataset<String, String> result = new DefaultCategoryDataset<>();

        // row keys...
        String series1 = "Third";
        String series2 = "Fourth";

        // column keys...
        String type1 = "Type 1";
        String type2 = "Type 2";
        String type3 = "Type 3";
        String type4 = "Type 4";
        String type5 = "Type 5";
        String type6 = "Type 6";
        String type7 = "Type 7";
        String type8 = "Type 8";

        result.addValue(11.0, series1, type1);
        result.addValue(14.0, series1, type2);
        result.addValue(13.0, series1, type3);
        result.addValue(15.0, series1, type4);
        result.addValue(15.0, series1, type5);
        result.addValue(17.0, series1, type6);
        result.addValue(17.0, series1, type7);
        result.addValue(18.0, series1, type8);

        result.addValue(15.0, series2, type1);
        result.addValue(17.0, series2, type2);
        result.addValue(16.0, series2, type3);
        result.addValue(18.0, series2, type4);
        result.addValue(14.0, series2, type5);
        result.addValue(14.0, series2, type6);
        result.addValue(12.0, series2, type7);
        result.addValue(11.0, series2, type8);

        return result;

    }

    /**
     * Creates a sample plot.
     *
     * @return A sample plot.
     */
    private CombinedDomainCategoryPlot createPlot() {
=====================================================================
Found a 105 line (523 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalXYToolTipGenerator.java

    public IntervalXYItemLabelGenerator(String formatString,
            DateFormat xFormat, DateFormat yFormat) {

        super(formatString, xFormat, yFormat);
    }

    /**
     * Creates the array of items that can be passed to the
     * {@link MessageFormat} class for creating labels.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return An array of seven items from the dataset formatted as
     *         {@code String} objects (never {@code null}).
     */
    @Override
    protected Object[] createItemArray(XYDataset dataset, int series,
                                       int item) {

        IntervalXYDataset intervalDataset = null;
        if (dataset instanceof IntervalXYDataset) {
            intervalDataset = (IntervalXYDataset) dataset;
        }
        Object[] result = new Object[7];
        result[0] = dataset.getSeriesKey(series).toString();

        double x = dataset.getXValue(series, item);
        double xs = x;
        double xe = x;
        double y = dataset.getYValue(series, item);
        double ys = y;
        double ye = y;
        if (intervalDataset != null) {
            xs = intervalDataset.getStartXValue(series, item);
            xe = intervalDataset.getEndXValue(series, item);
            ys = intervalDataset.getStartYValue(series, item);
            ye = intervalDataset.getEndYValue(series, item);
        }

        DateFormat xdf = getXDateFormat();
        if (xdf != null) {
            result[1] = xdf.format(new Date((long) x));
            result[2] = xdf.format(new Date((long) xs));
            result[3] = xdf.format(new Date((long) xe));
        }
        else {
            NumberFormat xnf = getXFormat();
            result[1] = xnf.format(x);
            result[2] = xnf.format(xs);
            result[3] = xnf.format(xe);
        }

        NumberFormat ynf = getYFormat();
        DateFormat ydf = getYDateFormat();
        if (Double.isNaN(y) && dataset.getY(series, item) == null) {
            result[4] = getNullYString();
        }
        else {
            if (ydf != null) {
                result[4] = ydf.format(new Date((long) y));
            }
            else {
                result[4] = ynf.format(y);
            }
        }
        if (Double.isNaN(ys) && intervalDataset != null
                && intervalDataset.getStartY(series, item) == null) {
            result[5] = getNullYString();
        }
        else {
            if (ydf != null) {
                result[5] = ydf.format(new Date((long) ys));
            }
            else {
                result[5] = ynf.format(ys);
            }
        }
        if (Double.isNaN(ye) && intervalDataset != null
                && intervalDataset.getEndY(series, item) == null) {
            result[6] = getNullYString();
        }
        else {
            if (ydf != null) {
                result[6] = ydf.format(new Date((long) ye));
            }
            else {
                result[6] = ynf.format(ye);
            }
        }
        return result;
    }

    /**
     * Generates the item label text for an item in a dataset.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The label text (possibly {@code null}).
     */
    @Override
    public String generateLabel(XYDataset dataset, int series, int item) {
=====================================================================
Found a 95 line (523 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainXYPlotTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeXYPlotTest.java

        yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero());
        assertEquals(1, this.events.size());

        // a redraw should NOT trigger another change event
        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        this.events.clear();
        chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0));
        assertTrue(this.events.isEmpty());
    }

    /**
     * Creates a sample dataset.
     *
     * @return Series 1.
     */
    private XYDataset<String> createDataset1() {

        // create dataset 1...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 12353.3);
        series1.add(20.0, 13734.4);
        series1.add(30.0, 14525.3);
        series1.add(40.0, 13984.3);
        series1.add(50.0, 12999.4);
        series1.add(60.0, 14274.3);
        series1.add(70.0, 15943.5);
        series1.add(80.0, 14845.3);
        series1.add(90.0, 14645.4);
        series1.add(100.0, 16234.6);
        series1.add(110.0, 17232.3);
        series1.add(120.0, 14232.2);
        series1.add(130.0, 13102.2);
        series1.add(140.0, 14230.2);
        series1.add(150.0, 11235.2);

        XYSeries<String> series2 = new XYSeries<>("Series 2");
        series2.add(10.0, 15000.3);
        series2.add(20.0, 11000.4);
        series2.add(30.0, 17000.3);
        series2.add(40.0, 15000.3);
        series2.add(50.0, 14000.4);
        series2.add(60.0, 12000.3);
        series2.add(70.0, 11000.5);
        series2.add(80.0, 12000.3);
        series2.add(90.0, 13000.4);
        series2.add(100.0, 12000.6);
        series2.add(110.0, 13000.3);
        series2.add(120.0, 17000.2);
        series2.add(130.0, 18000.2);
        series2.add(140.0, 16000.2);
        series2.add(150.0, 17000.2);

        XYSeriesCollection<String> collection = new XYSeriesCollection<>();
        collection.addSeries(series1);
        collection.addSeries(series2);
        return collection;

    }

    /**
     * Creates a sample dataset.
     *
     * @return Series 2.
     */
    private XYDataset<String> createDataset2() {

        XYSeries<String> series2 = new XYSeries<>("Series 3");

        series2.add(10.0, 16853.2);
        series2.add(20.0, 19642.3);
        series2.add(30.0, 18253.5);
        series2.add(40.0, 15352.3);
        series2.add(50.0, 13532.0);
        series2.add(100.0, 12635.3);
        series2.add(110.0, 13998.2);
        series2.add(120.0, 11943.2);
        series2.add(130.0, 16943.9);
        series2.add(140.0, 17843.2);
        series2.add(150.0, 16495.3);
        series2.add(160.0, 17943.6);
        series2.add(170.0, 18500.7);
        series2.add(180.0, 19595.9);

        return new XYSeriesCollection<>(series2);

    }

    /**
     * Creates a sample plot.
     *
     * @return A sample plot.
     */
    private CombinedDomainXYPlot<String> createPlot() {
=====================================================================
Found a 67 line (471 tokens) duplication in the following files: 
Starting at line 1019 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1251 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            Paint p = marker.getPaint();
            if (p instanceof GradientPaint) {
                GradientPaint gp = (GradientPaint) p;
                GradientPaintTransformer t = im.getGradientPaintTransformer();
                if (t != null) {
                    gp = t.transform(gp, rect);
                }
                g2.setPaint(gp);
            }
            else {
                g2.setPaint(p);
            }
            g2.fill(rect);

            // now draw the outlines, if visible...
            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {
                if (orientation == PlotOrientation.VERTICAL) {
                    Line2D line = new Line2D.Double();
                    double x0 = dataArea.getMinX();
                    double x1 = dataArea.getMaxX();
                    g2.setPaint(im.getOutlinePaint());
                    g2.setStroke(im.getOutlineStroke());
                    if (range.contains(start)) {
                        line.setLine(x0, start2d, x1, start2d);
                        g2.draw(line);
                    }
                    if (range.contains(end)) {
                        line.setLine(x0, end2d, x1, end2d);
                        g2.draw(line);
                    }
                } else { // PlotOrientation.HORIZONTAL
                    Line2D line = new Line2D.Double();
                    double y0 = dataArea.getMinY();
                    double y1 = dataArea.getMaxY();
                    g2.setPaint(im.getOutlinePaint());
                    g2.setStroke(im.getOutlineStroke());
                    if (range.contains(start)) {
                        line.setLine(start2d, y0, start2d, y1);
                        g2.draw(line);
                    }
                    if (range.contains(end)) {
                        line.setLine(end2d, y0, end2d, y1);
                        g2.draw(line);
                    }
                }
            }

            String label = marker.getLabel();
            RectangleAnchor anchor = marker.getLabelAnchor();
            if (label != null) {
                Font labelFont = marker.getLabelFont();
                g2.setFont(labelFont);
                Point2D coords = calculateRangeMarkerTextAnchorPoint(
                        g2, orientation, dataArea, rect,
                        marker.getLabelOffset(), marker.getLabelOffsetType(),
                        anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(savedComposite);
=====================================================================
Found a 61 line (460 tokens) duplication in the following files: 
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 896 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 1);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
        psd = axis.previousStandardDate(d1, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d1.getTime());
        assertTrue(nsd.getTime() >= d1.getTime());

        // MIDDLE: check d1, d2 and d3
        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);

        axis.setRange(d1, end);
        psd = axis.previousStandardDate(d1, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d1.getTime());
        assertTrue(nsd.getTime() >= d1.getTime());

        axis.setRange(d2, end);
        psd = axis.previousStandardDate(d2, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d2.getTime());
        assertTrue(nsd.getTime() >= d2.getTime());

        axis.setRange(d3, end);
        psd = axis.previousStandardDate(d3, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d3.getTime());
        assertTrue(nsd.getTime() >= d3.getTime());

        // END: check d3 and d4
        axis.setTickMarkPosition(DateTickMarkPosition.END);

        axis.setRange(d3, end);
        psd = axis.previousStandardDate(d3, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d3.getTime());
        assertTrue(nsd.getTime() >= d3.getTime());

        axis.setRange(d4, end);
        psd = axis.previousStandardDate(d4, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d4.getTime());
        assertTrue(nsd.getTime() >= d4.getTime());
    }

    /**
     * A basic check for the testPreviousStandardDate() method when the
     * tick unit is 10 years (just for the sake of having a multiple).
     */
    @Test
    public void testPreviousStandardDateYearB() {
=====================================================================
Found a 61 line (458 tokens) duplication in the following files: 
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 526 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 674 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 822 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 896 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 970 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 1);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
        psd = axis.previousStandardDate(d1, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d1.getTime());
        assertTrue(nsd.getTime() >= d1.getTime());

        // MIDDLE: check d1, d2 and d3
        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);

        axis.setRange(d1, end);
        psd = axis.previousStandardDate(d1, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d1.getTime());
        assertTrue(nsd.getTime() >= d1.getTime());

        axis.setRange(d2, end);
        psd = axis.previousStandardDate(d2, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d2.getTime());
        assertTrue(nsd.getTime() >= d2.getTime());

        axis.setRange(d3, end);
        psd = axis.previousStandardDate(d3, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d3.getTime());
        assertTrue(nsd.getTime() >= d3.getTime());

        // END: check d3 and d4
        axis.setTickMarkPosition(DateTickMarkPosition.END);

        axis.setRange(d3, end);
        psd = axis.previousStandardDate(d3, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d3.getTime());
        assertTrue(nsd.getTime() >= d3.getTime());

        axis.setRange(d4, end);
        psd = axis.previousStandardDate(d4, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d4.getTime());
        assertTrue(nsd.getTime() >= d4.getTime());
    }

    /**
     * A basic check for the testPreviousStandardDate() method when the
     * tick unit is 10 years (just for the sake of having a multiple).
     */
    @Test
    public void testPreviousStandardDateYearB() {
=====================================================================
Found a 92 line (458 tokens) duplication in the following files: 
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java

public class StackedAreaChartTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("There should be no exception.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {
        Number[][] data = new Integer[][] {{-30, -20}, {-10, 10}, {20, 30}};
        CategoryDataset<String, String> newData = DatasetUtils.createCategoryDataset("S", "C", data);
        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        plot.setDataset(newData);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= -30, 
                "Expecting the lower bound of the range to be around -30: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
            = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1 = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }

    /**
     * Create a stacked bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        Number[][] data = new Integer[][] {{-3, -2}, {-1, 1}, {2, 3}};

        CategoryDataset<String, String> dataset = DatasetUtils.createCategoryDataset("S", "C", data);
        return ChartFactory.createStackedAreaChart("Stacked Area Chart", "Domain", "Range",
=====================================================================
Found a 55 line (430 tokens) duplication in the following files: 
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,
            int column, RectangularShape bar, RectangleEdge base) {

        Paint itemPaint = renderer.getItemPaint(row, column);

        Color c0, c1;
        if (itemPaint instanceof Color) {
            c0 = (Color) itemPaint;
            c1 = c0.brighter();
        }
        else if (itemPaint instanceof GradientPaint) {
            GradientPaint gp = (GradientPaint) itemPaint;
            c0 = gp.getColor1();
            c1 = gp.getColor2();
        }
        else {
            c0 = Color.BLUE;
            c1 = Color.BLUE.brighter();
        }

        // as a special case, if the bar colour has alpha == 0, we draw
        // nothing.
        if (c0.getAlpha() == 0) {
            return;
        }

        if (base == RectangleEdge.TOP || base == RectangleEdge.BOTTOM) {
            Rectangle2D[] regions = splitVerticalBar(bar, this.g1, this.g2,
                    this.g3);
            GradientPaint gp = new GradientPaint((float) regions[0].getMinX(),
                    0.0f, c0, (float) regions[0].getMaxX(), 0.0f, Color.WHITE);
            g2.setPaint(gp);
            g2.fill(regions[0]);

            gp = new GradientPaint((float) regions[1].getMinX(), 0.0f,
                    Color.WHITE, (float) regions[1].getMaxX(), 0.0f, c0);
            g2.setPaint(gp);
            g2.fill(regions[1]);

            gp = new GradientPaint((float) regions[2].getMinX(), 0.0f, c0,
                    (float) regions[2].getMaxX(), 0.0f, c1);
            g2.setPaint(gp);
            g2.fill(regions[2]);

            gp = new GradientPaint((float) regions[3].getMinX(), 0.0f, c1,
                     (float) regions[3].getMaxX(), 0.0f, c0);
            g2.setPaint(gp);
            g2.fill(regions[3]);
        }
        else if (base == RectangleEdge.LEFT || base == RectangleEdge.RIGHT) {
            Rectangle2D[] regions = splitHorizontalBar(bar, this.g1, this.g2,
                    this.g3);
            GradientPaint gp = new GradientPaint(0.0f,
                    (float) regions[0].getMinY(), c0, 0.0f,
                    (float) regions[0].getMaxY(), Color.WHITE);
=====================================================================
Found a 60 line (418 tokens) duplication in the following files: 
Starting at line 295 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java

            if (item == (dataset.getItemCount(series) - 1)) {
                // last item in series, draw the lot...
                // set up the alpha-transparency...
                Composite originalComposite = g2.getComposite();
                g2.setComposite(AlphaComposite.getInstance(
                        AlphaComposite.SRC_OVER, this.alpha));
                g2.setPaint(getItemFillPaint(series, item));
                GeneralPath area = new GeneralPath(GeneralPath.WIND_NON_ZERO,
                        drState.lowerCoordinates.size() 
                        + drState.upperCoordinates.size());
                double[] coords = (double[]) drState.lowerCoordinates.get(0);
                area.moveTo((float) coords[0], (float) coords[1]);
                for (int i = 1; i < drState.lowerCoordinates.size(); i++) {
                    coords = (double[]) drState.lowerCoordinates.get(i);
                    area.lineTo((float) coords[0], (float) coords[1]);
                }
                int count = drState.upperCoordinates.size();
                coords = (double[]) drState.upperCoordinates.get(count - 1);
                area.lineTo((float) coords[0], (float) coords[1]);
                for (int i = count - 2; i >= 0; i--) {
                    coords = (double[]) drState.upperCoordinates.get(i);
                    area.lineTo((float) coords[0], (float) coords[1]);
                }
                area.closePath();
                g2.fill(area);
                g2.setComposite(originalComposite);

                drState.lowerCoordinates.clear();
                drState.upperCoordinates.clear();
            }
        }
        if (isLinePass(pass)) {

            // the following code handles the line for the y-values...it's
            // all done by code in the super class
            if (item == 0) {
                State s = (State) state;
                s.seriesPath.reset();
                s.setLastPointGood(false);
            }

            if (getItemLineVisible(series, item)) {
                drawPrimaryLineAsPath(state, g2, plot, dataset, pass,
                        series, item, domainAxis, rangeAxis, dataArea);
            }
        }

        // second pass adds shapes where the items are ..
        else if (isItemPass(pass)) {

            // setup for collecting optional entity info...
            EntityCollection entities = null;
            if (info != null) {
                entities = info.getOwner().getEntityCollection();
            }

            drawSecondaryPass(g2, plot, dataset, pass, series, item,
                    domainAxis, dataArea, rangeAxis, crosshairState, entities);
        }
    }
=====================================================================
Found a 109 line (404 tokens) duplication in the following files: 
Starting at line 308 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 429 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));
        }

        List keys = dataset.getKeys();
        DefaultPieDataset series = null;
        if (showDifference) {
            series = new DefaultPieDataset();
        }

        double colorPerPercent = 255.0 / percentDiffForMaxScale;
        for (Iterator it = keys.iterator(); it.hasNext();) {
            Comparable key = (Comparable) it.next();
            Number newValue = dataset.getValue(key);
            Number oldValue = previousDataset.getValue(key);

            if (oldValue == null) {
                if (greenForIncrease) {
                    plot.setSectionPaint(key, Color.GREEN);
                }
                else {
                    plot.setSectionPaint(key, Color.RED);
                }
                if (showDifference) {
                    assert series != null; // suppresses compiler warning
                    series.setValue(key + " (+100%)", newValue);
                }
            }
            else {
                double percentChange = (newValue.doubleValue()
                        / oldValue.doubleValue() - 1.0) * 100.0;
                double shade
                    = (Math.abs(percentChange) >= percentDiffForMaxScale ? 255
                    : Math.abs(percentChange) * colorPerPercent);
                if (greenForIncrease
                        && newValue.doubleValue() > oldValue.doubleValue()
                        || !greenForIncrease && newValue.doubleValue()
                        < oldValue.doubleValue()) {
                    plot.setSectionPaint(key, new Color(0, (int) shade, 0));
                }
                else {
                    plot.setSectionPaint(key, new Color((int) shade, 0, 0));
                }
                if (showDifference) {
                    assert series != null; // suppresses compiler warning
                    series.setValue(key + " (" + (percentChange >= 0 ? "+" : "")
                            + NumberFormat.getPercentInstance().format(
                            percentChange / 100.0) + ")", newValue);
                }
            }
        }

        if (showDifference) {
            plot.setDataset(series);
        }

        JFreeChart chart =  new JFreeChart(title,
                JFreeChart.DEFAULT_TITLE_FONT, plot, legend);

        if (subTitle) {
            TextTitle subtitle = new TextTitle("Bright " + (greenForIncrease 
                    ? "red" : "green") + "=change >=-" + percentDiffForMaxScale
                    + "%, Bright " + (!greenForIncrease ? "red" : "green")
                    + "=change >=+" + percentDiffForMaxScale + "%",
                    new Font("SansSerif", Font.PLAIN, 10));
            chart.addSubtitle(subtitle);
        }
        currentTheme.apply(chart);
        return chart;
    }

    /**
     * Creates a pie chart with default settings that compares 2 datasets.
     * The colour of each section will be determined by the move from the value
     * for the same key in {@code previousDataset}. ie if value1 &gt; 
     * value2 then the section will be in green (unless 
     * {@code greenForIncrease} is {@code false}, in which case it 
     * would be {@code red}). Each section can have a shade of red or 
     * green as the difference can be tailored between 0% (black) and 
     * percentDiffForMaxScale% (bright red/green).
     * <p>
     * For instance if {@code percentDiffForMaxScale} is 10 (10%), a
     * difference of 5% will have a half shade of red/green, a difference of
     * 10% or more will have a maximum shade/brightness of red/green.
     * <P>
     * The chart object returned by this method uses a {@link PiePlot} instance
     * as the plot.
     * <p>
     * Written by <a href="mailto:opensource@objectlab.co.uk">Benoit
     * Xhenseval</a>.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     * @param previousDataset  the dataset for the last run, this will be used
     *                         to compare each key in the dataset
     * @param percentDiffForMaxScale scale goes from bright red/green to black,
     *                               percentDiffForMaxScale indicate the change
     *                               required to reach top scale.
     * @param greenForIncrease  an increase since previousDataset will be
     *                          displayed in green (decrease red) if true.
     * @param legend  a flag specifying whether or not a legend is required.
     * @param tooltips  configure chart to generate tool tips?
     * @param urls  configure chart to generate URLs?
     * @param subTitle displays a subtitle with colour scheme if true
     * @param showDifference  create a new dataset that will show the %
     *                        difference between the two datasets.
     *
     * @return A pie chart.
     */
    public static JFreeChart createPieChart(String title, PieDataset dataset,
=====================================================================
Found a 84 line (381 tokens) duplication in the following files: 
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java

        this.chart = createBarChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
        }
    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        Number[][] data = new Integer[][] {{-30, -20}, {-10, 10}, {20, 30}};

        CategoryDataset<String, String> newData 
                = DatasetUtils.createCategoryDataset("S", "C", data);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        plot.setDataset(newData);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= -30,
                "Expecting the lower bound of the range to be around -30: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
                = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }

    /**
     * Create a bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createBarChart() {
=====================================================================
Found a 85 line (380 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

public class TimeSeriesChartTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("No exception should be triggered.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);
        return ChartFactory.createTimeSeriesChart("XY Line Chart", 
=====================================================================
Found a 37 line (368 tokens) duplication in the following files: 
Starting at line 2742 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 2793 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java

        double targetX = anchorX - record.getGap();
        double targetY = record.getAllocatedY();

        if (this.labelLinksVisible) {
            double theta = record.getAngle();
            double linkX = state.getPieCenterX() + Math.cos(theta)
                    * state.getPieWRadius() * record.getLinkPercent();
            double linkY = state.getPieCenterY() - Math.sin(theta)
                    * state.getPieHRadius() * record.getLinkPercent();
            double elbowX = state.getPieCenterX() + Math.cos(theta)
                    * state.getLinkArea().getWidth() / 2.0;
            double elbowY = state.getPieCenterY() - Math.sin(theta)
                    * state.getLinkArea().getHeight() / 2.0;
            double anchorY = elbowY;
            g2.setPaint(this.labelLinkPaint);
            g2.setStroke(this.labelLinkStroke);
            PieLabelLinkStyle style = getLabelLinkStyle();
            if (style.equals(PieLabelLinkStyle.STANDARD)) {
                g2.draw(new Line2D.Double(linkX, linkY, elbowX, elbowY));
                g2.draw(new Line2D.Double(anchorX, anchorY, elbowX, elbowY));
                g2.draw(new Line2D.Double(anchorX, anchorY, targetX, targetY));
            }
            else if (style.equals(PieLabelLinkStyle.QUAD_CURVE)) {
                QuadCurve2D q = new QuadCurve2D.Float();
                q.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY);
                g2.draw(q);
                g2.draw(new Line2D.Double(elbowX, elbowY, linkX, linkY));
            }
            else if (style.equals(PieLabelLinkStyle.CUBIC_CURVE)) {
                CubicCurve2D c = new CubicCurve2D .Float();
                c.setCurve(targetX, targetY, anchorX, anchorY, elbowX, elbowY,
                        linkX, linkY);
                g2.draw(c);
            }
        }
        TextBox tb = record.getLabel();
        tb.draw(g2, (float) targetX, (float) targetY, RectangleAnchor.RIGHT);
=====================================================================
Found a 98 line (364 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java

        if (renderer.isDrawBarOutline()
            /*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
            int column, RectangularShape bar, RectangleEdge base,
            boolean pegShadow) {

        // handle a special case - if the bar colour has alpha == 0, it is
        // invisible so we shouldn't draw any shadow
        Paint itemPaint = renderer.getItemPaint(row, column);
        if (itemPaint instanceof Color) {
            Color c = (Color) itemPaint;
            if (c.getAlpha() == 0) {
                return;
            }
        }

        RectangularShape shadow = createShadow(bar, renderer.getShadowXOffset(),
                renderer.getShadowYOffset(), base, pegShadow);
        g2.setPaint(renderer.getShadowPaint());
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }
=====================================================================
Found a 83 line (364 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

public class TimeSeriesChartTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("No exception should be triggered.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
=====================================================================
Found a 97 line (362 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

        if (renderer.isDrawBarOutline()) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, XYBarRenderer renderer, int row,
            int column, RectangularShape bar, RectangleEdge base,
            boolean pegShadow) {

        // handle a special case - if the bar colour has alpha == 0, it is
        // invisible so we shouldn't draw any shadow
        Paint itemPaint = renderer.getItemPaint(row, column);
        if (itemPaint instanceof Color) {
            Color c = (Color) itemPaint;
            if (c.getAlpha() == 0) {
                return;
            }
        }

        RectangularShape shadow = createShadow(bar, renderer.getShadowXOffset(),
                renderer.getShadowYOffset(), base, pegShadow);
        g2.setPaint(Color.GRAY);
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }
=====================================================================
Found a 129 line (339 tokens) duplication in the following files: 
Starting at line 147 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 216 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

        return new Size2D((width - s.width) / 2.0, s.height);
    }

    /**
     * Arranges the blocks in the container with a fixed with and a range
     * constraint on the height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeFR(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        Size2D s = arrangeFN(container, g2, constraint);
        if (constraint.getHeightRange().contains(s.height)) {
            return s;
        }
        else {
            RectangleConstraint c = constraint.toFixedHeight(
                    constraint.getHeightRange().constrain(s.getHeight()));
            return arrangeFF(container, g2, c);
        }
    }

    /**
     * Arranges the blocks in the container with the overall height and width
     * specified as fixed constraints.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeFF(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        // TODO: implement this properly
        return arrangeFN(container, g2, constraint);
    }

    /**
     * Arranges the blocks with the overall width and height to fit within
     * specified ranges.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size after the arrangement.
     */
    protected Size2D arrangeRR(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        // first arrange without constraints, and see if this fits within
        // the required ranges...
        Size2D s1 = arrangeNN(container, g2);
        if (constraint.getWidthRange().contains(s1.width)) {
            return s1;  // TODO: we didn't check the height yet
        }
        else {
            RectangleConstraint c = constraint.toFixedWidth(
                    constraint.getWidthRange().getUpperBound());
            return arrangeFR(container, g2, c);
        }
    }

    /**
     * Arranges the blocks in the container with a range constraint on the
     * width and a fixed height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeRF(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        Size2D s = arrangeNF(container, g2, constraint);
        if (constraint.getWidthRange().contains(s.width)) {
            return s;
        }
        else {
            RectangleConstraint c = constraint.toFixedWidth(
                    constraint.getWidthRange().constrain(s.getWidth()));
            return arrangeFF(container, g2, c);
        }
    }

    /**
     * Arranges the block with a range constraint on the width, and no
     * constraint on the height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeRN(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {
        // first arrange without constraints, then see if the width fits
        // within the required range...if not, call arrangeFN() at max width
        Size2D s1 = arrangeNN(container, g2);
        if (constraint.getWidthRange().contains(s1.width)) {
            return s1;
        }
        else {
            RectangleConstraint c = constraint.toFixedWidth(
                    constraint.getWidthRange().getUpperBound());
            return arrangeFN(container, g2, c);
        }
    }

    /**
     * Arranges the blocks without any constraints.  This puts all blocks
     * into a single row.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     *
     * @return The size after the arrangement.
     */
    protected Size2D arrangeNN(BlockContainer container, Graphics2D g2) {
=====================================================================
Found a 36 line (319 tokens) duplication in the following files: 
Starting at line 372 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 372 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        double j2DY = rangeAxis.valueToJava2D(getValue(), dataArea, rangeEdge);
        if (orientation == PlotOrientation.HORIZONTAL) {
            double temp = j2DX;
            j2DX = j2DY;
            j2DY = temp;
        }
        double startX = j2DX + Math.cos(this.angle) * this.baseRadius;
        double startY = j2DY + Math.sin(this.angle) * this.baseRadius;

        double endX = j2DX + Math.cos(this.angle) * this.tipRadius;
        double endY = j2DY + Math.sin(this.angle) * this.tipRadius;

        double arrowBaseX = endX + Math.cos(this.angle) * this.arrowLength;
        double arrowBaseY = endY + Math.sin(this.angle) * this.arrowLength;

        double arrowLeftX = arrowBaseX
            + Math.cos(this.angle + Math.PI / 2.0) * this.arrowWidth;
        double arrowLeftY = arrowBaseY
            + Math.sin(this.angle + Math.PI / 2.0) * this.arrowWidth;

        double arrowRightX = arrowBaseX
            - Math.cos(this.angle + Math.PI / 2.0) * this.arrowWidth;
        double arrowRightY = arrowBaseY
            - Math.sin(this.angle + Math.PI / 2.0) * this.arrowWidth;

        GeneralPath arrow = new GeneralPath();
        arrow.moveTo((float) endX, (float) endY);
        arrow.lineTo((float) arrowLeftX, (float) arrowLeftY);
        arrow.lineTo((float) arrowRightX, (float) arrowRightY);
        arrow.closePath();

        g2.setStroke(this.arrowStroke);
        g2.setPaint(this.arrowPaint);
        Line2D line = new Line2D.Double(startX, startY, arrowBaseX, arrowBaseY);
        g2.draw(line);
        g2.fill(arrow);
=====================================================================
Found a 64 line (303 tokens) duplication in the following files: 
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 93 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java

    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        Number[][] data = new Integer[][] {{-30, -20}, {-10, 10}, {20, 30}};

        CategoryDataset<String, String> newData 
                = DatasetUtils.createCategoryDataset("S", "C", data);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        plot.setDataset(newData);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= -30,
                "Expecting the lower bound of the range to be around -30: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
                = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }

    /**
     * Create a bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createBarChart() {
=====================================================================
Found a 83 line (301 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultLogAxisEditor.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultNumberAxisEditor.java

        JPanel tickUnitPanel = super.createTickUnitPanel();

        tickUnitPanel.add(new JLabel(localizationResources.getString(
                "Manual_TickUnit_value")));
        this.manualTickUnit = new JTextField(Double.toString(
                this.manualTickUnitValue));
        this.manualTickUnit.setEnabled(!isAutoTickUnitSelection());
        this.manualTickUnit.setActionCommand("TickUnitValue");
        this.manualTickUnit.addActionListener(this);
        this.manualTickUnit.addFocusListener(this);
        tickUnitPanel.add(this.manualTickUnit);
        tickUnitPanel.add(new JPanel());

        return tickUnitPanel;
    }

    /**
     * Handles actions from within the property panel.
     * 
     * @param event an event.
     */
    @Override
    public void actionPerformed(ActionEvent event) {
        String command = event.getActionCommand();
        if (command.equals("TickUnitValue")) {
            validateTickUnit();
        }
        else {
            // pass to the super-class for handling
            super.actionPerformed(event);
        }
    }

    @Override
    public void focusLost(FocusEvent event) {
        super.focusLost(event);
        if (event.getSource() == this.manualTickUnit) {
            validateTickUnit();
        }
    }

    /**
     * Toggles the auto-tick-unit setting.
     */
    @Override
    public void toggleAutoTick() {
        super.toggleAutoTick();
        if (isAutoTickUnitSelection()) {
            this.manualTickUnit.setText(Double.toString(this.manualTickUnitValue));
            this.manualTickUnit.setEnabled(false);
        }
        else {
            this.manualTickUnit.setEnabled(true);
        }
    }

    /**
     * Validates the tick unit entered.
     */
    public void validateTickUnit() {
        double newTickUnit;
        try {
            newTickUnit = Double.parseDouble(this.manualTickUnit.getText());
        }
        catch (NumberFormatException e) {
            newTickUnit = this.manualTickUnitValue;
        }

        if (newTickUnit > 0.0) {
            this.manualTickUnitValue = newTickUnit;
        }
        this.manualTickUnit.setText(Double.toString(this.manualTickUnitValue));
    }

    /**
     * Sets the properties of the specified axis to match the properties
     * defined on this panel.
     *
     * @param axis  the axis.
     */
    @Override
    public void setAxisProperties(Axis axis) {
        super.setAxisProperties(axis);
=====================================================================
Found a 56 line (299 tokens) duplication in the following files: 
Starting at line 1450 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1566 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

    protected List<? extends Tick> refreshTicksHorizontal(Graphics2D g2,
                Rectangle2D dataArea, RectangleEdge edge) {

        List<DateTick> result = new ArrayList<>();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);

        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }

        DateTickUnit unit = getTickUnit();
        Date tickDate = calculateLowestVisibleTickValue(unit);
        Date upperDate = getMaximumDate();

        boolean hasRolled = false;
        while (tickDate.before(upperDate)) {
            // could add a flag to make the following correction optional...
            if (!hasRolled) {
                tickDate = correctTickDateForPosition(tickDate, unit,
                     this.tickMarkPosition);
            }

            long lowestTickTime = tickDate.getTime();
            long distance = unit.addToDate(tickDate, this.timeZone).getTime()
                    - lowestTickTime;
            int minorTickSpaces = getMinorTickCount();
            if (minorTickSpaces <= 0) {
                minorTickSpaces = unit.getMinorTickCount();
            }
            for (int minorTick = 1; minorTick < minorTickSpaces; minorTick++) {
                long minorTickTime = lowestTickTime - distance
                        * minorTick / minorTickSpaces;
                if (minorTickTime > 0 && getRange().contains(minorTickTime)
                        && (!isHiddenValue(minorTickTime))) {
                    result.add(new DateTick(TickType.MINOR,
                            new Date(minorTickTime), "", TextAnchor.TOP_CENTER,
                            TextAnchor.CENTER, 0.0));
                }
            }

            if (!isHiddenValue(tickDate.getTime())) {
                // work out the value, label and position
                String tickLabel;
                DateFormat formatter = getDateFormatOverride();
                if (formatter != null) {
                    tickLabel = formatter.format(tickDate);
                }
                else {
                    tickLabel = this.tickUnit.dateToString(tickDate);
                }
                TextAnchor anchor, rotationAnchor;
                double angle = 0.0;
                if (isVerticalTickLabels()) {
                    anchor = TextAnchor.CENTER_RIGHT;
=====================================================================
Found a 218 line (297 tokens) duplication in the following files: 
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        super(label, key, value);
        this.angle = angle;
        this.tipRadius = DEFAULT_TIP_RADIUS;
        this.baseRadius = DEFAULT_BASE_RADIUS;
        this.arrowLength = DEFAULT_ARROW_LENGTH;
        this.arrowWidth = DEFAULT_ARROW_WIDTH;
        this.labelOffset = DEFAULT_LABEL_OFFSET;
        this.arrowStroke = new BasicStroke(1.0f);
        this.arrowPaint = Color.BLACK;

    }

    /**
     * Returns the angle of the arrow.
     *
     * @return The angle (in radians).
     *
     * @see #setAngle(double)
     */
    public double getAngle() {
        return this.angle;
    }

    /**
     * Sets the angle of the arrow and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param angle  the angle (in radians).
     *
     * @see #getAngle()
     */
    public void setAngle(double angle) {
        this.angle = angle;
        fireAnnotationChanged();
    }

    /**
     * Returns the tip radius.
     *
     * @return The tip radius (in Java2D units).
     *
     * @see #setTipRadius(double)
     */
    public double getTipRadius() {
        return this.tipRadius;
    }

    /**
     * Sets the tip radius and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param radius  the radius (in Java2D units).
     *
     * @see #getTipRadius()
     */
    public void setTipRadius(double radius) {
        this.tipRadius = radius;
        fireAnnotationChanged();
    }

    /**
     * Returns the base radius.
     *
     * @return The base radius (in Java2D units).
     *
     * @see #setBaseRadius(double)
     */
    public double getBaseRadius() {
        return this.baseRadius;
    }

    /**
     * Sets the base radius and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param radius  the radius (in Java2D units).
     *
     * @see #getBaseRadius()
     */
    public void setBaseRadius(double radius) {
        this.baseRadius = radius;
        fireAnnotationChanged();
    }

    /**
     * Returns the label offset.
     *
     * @return The label offset (in Java2D units).
     *
     * @see #setLabelOffset(double)
     */
    public double getLabelOffset() {
        return this.labelOffset;
    }

    /**
     * Sets the label offset (from the arrow base, continuing in a straight
     * line, in Java2D units) and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param offset  the offset (in Java2D units).
     *
     * @see #getLabelOffset()
     */
    public void setLabelOffset(double offset) {
        this.labelOffset = offset;
        fireAnnotationChanged();
    }

    /**
     * Returns the arrow length.
     *
     * @return The arrow length.
     *
     * @see #setArrowLength(double)
     */
    public double getArrowLength() {
        return this.arrowLength;
    }

    /**
     * Sets the arrow length and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param length  the length.
     *
     * @see #getArrowLength()
     */
    public void setArrowLength(double length) {
        this.arrowLength = length;
        fireAnnotationChanged();
    }

    /**
     * Returns the arrow width.
     *
     * @return The arrow width (in Java2D units).
     *
     * @see #setArrowWidth(double)
     */
    public double getArrowWidth() {
        return this.arrowWidth;
    }

    /**
     * Sets the arrow width and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param width  the width (in Java2D units).
     *
     * @see #getArrowWidth()
     */
    public void setArrowWidth(double width) {
        this.arrowWidth = width;
        fireAnnotationChanged();
    }

    /**
     * Returns the stroke used to draw the arrow line.
     *
     * @return The arrow stroke (never {@code null}).
     *
     * @see #setArrowStroke(Stroke)
     */
    public Stroke getArrowStroke() {
        return this.arrowStroke;
    }

    /**
     * Sets the stroke used to draw the arrow line and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getArrowStroke()
     */
    public void setArrowStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.arrowStroke = stroke;
        fireAnnotationChanged();
    }

    /**
     * Returns the paint used for the arrow.
     *
     * @return The arrow paint (never {@code null}).
     *
     * @see #setArrowPaint(Paint)
     */
    public Paint getArrowPaint() {
        return this.arrowPaint;
    }

    /**
     * Sets the paint used for the arrow and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param paint  the arrow paint ({@code null} not permitted).
     *
     * @see #getArrowPaint()
     */
    public void setArrowPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.arrowPaint = paint;
        fireAnnotationChanged();
    }

    /**
     * Draws the annotation.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     */
    @Override
    public void draw(Graphics2D g2, CategoryPlot plot, Rectangle2D dataArea,
=====================================================================
Found a 33 line (287 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        assertNull(renderer.findDomainBounds(null));
    }

    /**
     * Creates a sample dataset for testing.
     *
     * @return A sample dataset.
     */
    public DefaultIntervalXYDataset<String> createSampleDataset1() {
        DefaultIntervalXYDataset<String> d = new DefaultIntervalXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        d.addSeries("S1", data1);

        double[] x2 = new double[] {11.0, 12.0, 13.0};
        double[] x2Start = new double[] {10.9, 11.9, 12.9};
        double[] x2End = new double[] {11.1, 12.1, 13.1};
        double[] y2 = new double[] {14.0, 15.0, 16.0};
        double[] y2Start = new double[] {11.09, 12.09, 13.09};
        double[] y2End = new double[] {11.11, 12.11, 13.11};
        double[][] data2 = new double[][] {x2, x2Start, x2End, y2, y2Start,
                y2End};
        d.addSeries("S2", data2);
        return d;
    }

}
=====================================================================
Found a 58 line (287 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

          fail("No exception should be thrown.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        
        @SuppressWarnings("unchecked")
        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);
        return ChartFactory.createScatterPlot("Scatter Plot", "Domain",
=====================================================================
Found a 47 line (278 tokens) duplication in the following files: 
Starting at line 291 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 439 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        double rectWidth = Math.abs(transY2 - transY1);

        Rectangle2D bar = new Rectangle2D.Double(rectX, rectY, rectWidth,
                rectHeight);
        Paint itemPaint = getItemPaint(row, column);
        GradientPaintTransformer t = getGradientPaintTransformer();
        if (t != null && itemPaint instanceof GradientPaint) {
            itemPaint = t.transform((GradientPaint) itemPaint, bar);
        }
        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

        // standard deviation lines
        Number n = dataset.getStdDevValue(row, column);
        if (n != null) {
            double valueDelta = n.doubleValue();
            double highVal = rangeAxis.valueToJava2D(meanValue.doubleValue()
                    + valueDelta, dataArea, yAxisLocation);
            double lowVal = rangeAxis.valueToJava2D(meanValue.doubleValue()
                    - valueDelta, dataArea, yAxisLocation);

            if (this.errorIndicatorPaint != null) {
                g2.setPaint(this.errorIndicatorPaint);
            }
            else {
                g2.setPaint(getItemOutlinePaint(row, column));
            }
            if (this.errorIndicatorStroke != null) {
                g2.setStroke(this.errorIndicatorStroke);
            }
            else {
                g2.setStroke(getItemOutlineStroke(row, column));
            }
            Line2D line;
            line = new Line2D.Double(lowVal, rectY + rectHeight / 2.0d,
=====================================================================
Found a 56 line (271 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java

          fail("No exception should be thrown.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        
        @SuppressWarnings("unchecked")
        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
=====================================================================
Found a 75 line (266 tokens) duplication in the following files: 
Starting at line 365 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

    }

    /**
     * Returns a default legend item for the specified series.  Subclasses
     * should override this method to generate customised items.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return A legend item for the series.
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {
        LegendItem result = null;
        XYPlot xyplot = getPlot();
        if (xyplot != null) {
            XYDataset dataset = xyplot.getDataset(datasetIndex);
            if (dataset != null) {
                XYSeriesLabelGenerator lg = getLegendItemLabelGenerator();
                String label = lg.generateLabel(dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
                Paint paint = lookupSeriesPaint(series);
                result = new LegendItem(label, description, toolTipText,
                        urlText, this.legendArea, paint);
                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
            }
        }
        return result;
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 49 line (253 tokens) duplication in the following files: 
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

                    (float) regions[0].getMaxY(), Color.WHITE);
            g2.setPaint(gp);
            g2.fill(regions[0]);

            gp = new GradientPaint(0.0f, (float) regions[1].getMinY(),
                    Color.WHITE, 0.0f, (float) regions[1].getMaxY(), c0);
            g2.setPaint(gp);
            g2.fill(regions[1]);

            gp = new GradientPaint(0.0f, (float) regions[2].getMinY(), c0,
                    0.0f, (float) regions[2].getMaxY(), c1);
            g2.setPaint(gp);
            g2.fill(regions[2]);

            gp = new GradientPaint(0.0f, (float) regions[3].getMinY(), c1,
                     0.0f, (float) regions[3].getMaxY(), c0);
            g2.setPaint(gp);
            g2.fill(regions[3]);

        }

        // draw the outline...
        if (renderer.isDrawBarOutline()
            /*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
=====================================================================
Found a 55 line (252 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 400 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

        setText(text);
    }

    /**
     * Performs a layout for this title, subject to the supplied constraint,
     * and returns the dimensions required for the title (if the title
     * cannot be displayed in the available space, this method will return
     * zero width and height for the dimensions).
     *
     * @param g2  the graphics target.
     * @param constraint  the layout constraints.
     *
     * @return The dimensions for the title.
     */
    @Override
    public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) {
        RectangleConstraint cc = toContentConstraint(constraint);
        LengthConstraintType w = cc.getWidthConstraintType();
        LengthConstraintType h = cc.getHeightConstraintType();
        Size2D contentSize = null;
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeNN(g2);
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeRN(g2, cc.getWidthRange());
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(g2, cc.getWidthRange(),
                        cc.getHeightRange());
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                contentSize = arrangeFN(g2, cc.getWidth());
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        assert contentSize != null;
=====================================================================
Found a 44 line (244 tokens) duplication in the following files: 
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalCategoryItemLabelGenerator.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalCategoryToolTipGenerator.java

    public IntervalCategoryItemLabelGenerator(String labelFormat,
                                              DateFormat formatter) {
        super(labelFormat, formatter);
    }

    /**
     * Creates the array of items that can be passed to the
     * {@code MessageFormat} class for creating labels.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     *
     * @return The items (never {@code null}).
     */
    @Override
    protected Object[] createItemArray(CategoryDataset dataset,
                                       int row, int column) {
        Object[] result = new Object[5];
        result[0] = dataset.getRowKey(row).toString();
        result[1] = dataset.getColumnKey(column).toString();
        Number value = dataset.getValue(row, column);
        if (getNumberFormat() != null) {
            result[2] = getNumberFormat().format(value);
        }
        else if (getDateFormat() != null) {
            result[2] = getDateFormat().format(value);
        }

        if (dataset instanceof IntervalCategoryDataset) {
            IntervalCategoryDataset icd = (IntervalCategoryDataset) dataset;
            Number start = icd.getStartValue(row, column);
            Number end = icd.getEndValue(row, column);
            if (getNumberFormat() != null) {
                result[3] = getNumberFormat().format(start);
                result[4] = getNumberFormat().format(end);
            }
            else if (getDateFormat() != null) {
                result[3] = getDateFormat().format(start);
                result[4] = getDateFormat().format(end);
            }
        }
        return result;
    }
=====================================================================
Found a 75 line (244 tokens) duplication in the following files: 
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 444 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns a legend item for a series.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return The legend item.
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {

        // if there is no plot, there is no dataset to access...
        CategoryPlot cp = getPlot();
        if (cp == null) {
            return null;
        }

        // check that a legend item needs to be displayed...
        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {
            return null;
        }

        CategoryDataset dataset = cp.getDataset(datasetIndex);
        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
        Paint outlinePaint = lookupSeriesOutlinePaint(series);
        Stroke outlineStroke = lookupSeriesOutlineStroke(series);

        LegendItem result = new LegendItem(label, description, toolTipText,
                urlText, shape, paint, outlineStroke, outlinePaint);
        result.setLabelFont(lookupLegendTextFont(series));
        Paint labelPaint = lookupLegendTextPaint(series);
        if (labelPaint != null) {
            result.setLabelPaint(labelPaint);
        }
        result.setDataset(dataset);
        result.setDatasetIndex(datasetIndex);
        result.setSeriesKey(dataset.getRowKey(series));
        result.setSeriesIndex(series);
        return result;

    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data plot area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
=====================================================================
Found a 44 line (243 tokens) duplication in the following files: 
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java

        assertSame(url2, url1);
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
        }
    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {
        Number[][] data = new Integer[][] {{-30, -20}, {-10, 10}, {20, 30}};
        CategoryDataset<String, String> newData = 
                DatasetUtils.createCategoryDataset("S", "C", data);
        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        plot.setDataset(newData);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= -30, 
                "Expecting the lower bound of the range to be around -30: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());

    }
=====================================================================
Found a 46 line (242 tokens) duplication in the following files: 
Starting at line 562 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 620 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java

        }

        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }
        int minorTickCount = this.tickUnit.getMinorTickCount();
        double unit = getTickUnit().getSize();
        double index = Math.ceil(calculateLog(getRange().getLowerBound()) 
                / unit);
        double start = index * unit;
        double end = calculateLog(getUpperBound());
        double current = start;
        boolean hasTicks = (this.tickUnit.getSize() > 0.0)
                           && !Double.isInfinite(start);
        while (hasTicks && current <= end) {
            double v = calculateValueNoINF(current);
            if (range.contains(v)) {
                ticks.add(new LogTick(TickType.MAJOR, v, createTickLabel(v),
                        textAnchor));
            }
            // add minor ticks (for gridlines)
            double next = Math.pow(this.base, current
                    + this.tickUnit.getSize());
            for (int i = 1; i < minorTickCount; i++) {
                double minorV = v + i * ((next - v) / minorTickCount);
                if (range.contains(minorV)) {
                    ticks.add(new LogTick(TickType.MINOR, minorV, null,
                            textAnchor));
                }
            }
            current = current + this.tickUnit.getSize();
        }
        return ticks;
    }

    /**
     * Returns a list of ticks for an axis at the left or right of the chart.
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param dataArea  the data area ({@code null} not permitted).
     * @param edge  the edge that the axis is aligned to ({@code null} 
     *     not permitted).
     *
     * @return A list of ticks.
     */
    protected List refreshTicksVertical(Graphics2D g2, Rectangle2D dataArea,
=====================================================================
Found a 63 line (239 tokens) duplication in the following files: 
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java
Starting at line 172 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYZToolTipGenerator.java

        result = MessageFormat.format(getFormatString(), items);
        return result;
    }

    /**
     * Creates the array of items that can be passed to the
     * {@link MessageFormat} class for creating labels.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The items (never {@code null}).
     */
    protected Object[] createItemArray(XYZDataset dataset,
                                       int series, int item) {

        Object[] result = new Object[4];
        result[0] = dataset.getSeriesKey(series).toString();

        Number x = dataset.getX(series, item);
        DateFormat xf = getXDateFormat();
        if (xf != null) {
            result[1] = xf.format(x);
        }
        else {
            result[1] = getXFormat().format(x);
        }

        Number y = dataset.getY(series, item);
        DateFormat yf = getYDateFormat();
        if (yf != null) {
            result[2] = yf.format(y);
        }
        else {
            result[2] = getYFormat().format(y);
        }

        Number z = dataset.getZ(series, item);
        if (this.zDateFormat != null) {
            result[3] = this.zDateFormat.format(z);
        }
        else {
            result[3] = this.zFormat.format(z);
        }

        return result;

    }

    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the other object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof BubbleXYItemLabelGenerator)) {
=====================================================================
Found a 58 line (230 tokens) duplication in the following files: 
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/CategoryPointerAnnotationTest.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYPointerAnnotationTest.java

        a2.setValue(22.0);
        assertEquals(a1, a2);

        //private double angle;
        a1.setAngle(Math.PI / 4.0);
        assertNotEquals(a1, a2);
        a2.setAngle(Math.PI / 4.0);
        assertEquals(a1, a2);

        //private double tipRadius;
        a1.setTipRadius(20.0);
        assertNotEquals(a1, a2);
        a2.setTipRadius(20.0);
        assertEquals(a1, a2);

        //private double baseRadius;
        a1.setBaseRadius(5.0);
        assertNotEquals(a1, a2);
        a2.setBaseRadius(5.0);
        assertEquals(a1, a2);

        //private double arrowLength;
        a1.setArrowLength(33.0);
        assertNotEquals(a1, a2);
        a2.setArrowLength(33.0);
        assertEquals(a1, a2);

        //private double arrowWidth;
        a1.setArrowWidth(9.0);
        assertNotEquals(a1, a2);
        a2.setArrowWidth(9.0);
        assertEquals(a1, a2);

        //private Stroke arrowStroke;
        Stroke stroke = new BasicStroke(1.5f);
        a1.setArrowStroke(stroke);
        assertNotEquals(a1, a2);
        a2.setArrowStroke(stroke);
        assertEquals(a1, a2);

        //private Paint arrowPaint;
        a1.setArrowPaint(Color.BLUE);
        assertNotEquals(a1, a2);
        a2.setArrowPaint(Color.BLUE);
        assertEquals(a1, a2);

        //private double labelOffset;
        a1.setLabelOffset(10.0);
        assertNotEquals(a1, a2);
        a2.setLabelOffset(10.0);
        assertEquals(a1, a2);
    }

    /**
     * Two objects that are equal are required to return the same hashCode.
     */
    @Test
    public void testHashCode() {
=====================================================================
Found a 70 line (228 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

        g2.setPaint(renderer.getShadowPaint());
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the obj ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof StandardBarPainter)) {
=====================================================================
Found a 171 line (227 tokens) duplication in the following files: 
Starting at line 1807 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1712 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        this.rangeZeroBaselinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the flag that controls whether the range grid-lines are visible.
     *
     * @return The flag.
     *
     * @see #setRangeGridlinesVisible(boolean)
     */
    public boolean isRangeGridlinesVisible() {
        return this.rangeGridlinesVisible;
    }

    /**
     * Sets the flag that controls whether or not grid-lines are drawn against
     * the range axis.  If the flag changes value, a {@link PlotChangeEvent} is
     * sent to all registered listeners.
     *
     * @param visible  the new value of the flag.
     *
     * @see #isRangeGridlinesVisible()
     */
    public void setRangeGridlinesVisible(boolean visible) {
        if (this.rangeGridlinesVisible != visible) {
            this.rangeGridlinesVisible = visible;
            fireChangeEvent();
        }
    }

    /**
     * Returns the stroke used to draw the grid-lines against the range axis.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setRangeGridlineStroke(Stroke)
     */
    public Stroke getRangeGridlineStroke() {
        return this.rangeGridlineStroke;
    }

    /**
     * Sets the stroke used to draw the grid-lines against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getRangeGridlineStroke()
     */
    public void setRangeGridlineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.rangeGridlineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint used to draw the grid-lines against the range axis.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setRangeGridlinePaint(Paint)
     */
    public Paint getRangeGridlinePaint() {
        return this.rangeGridlinePaint;
    }

    /**
     * Sets the paint used to draw the grid lines against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getRangeGridlinePaint()
     */
    public void setRangeGridlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.rangeGridlinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns {@code true} if the range axis minor grid is visible, and
     * {@code false} otherwise.
     *
     * @return A boolean.
     *
     * @see #setRangeMinorGridlinesVisible(boolean)
     */
    public boolean isRangeMinorGridlinesVisible() {
        return this.rangeMinorGridlinesVisible;
    }

    /**
     * Sets the flag that controls whether or not the range axis minor grid
     * lines are visible.
     * <p>
     * If the flag value is changed, a {@link PlotChangeEvent} is sent to all
     * registered listeners.
     *
     * @param visible  the new value of the flag.
     *
     * @see #isRangeMinorGridlinesVisible()
     */
    public void setRangeMinorGridlinesVisible(boolean visible) {
        if (this.rangeMinorGridlinesVisible != visible) {
            this.rangeMinorGridlinesVisible = visible;
            fireChangeEvent();
        }
    }

    /**
     * Returns the stroke for the minor grid lines (if any) plotted against the
     * range axis.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setRangeMinorGridlineStroke(Stroke)
     */
    public Stroke getRangeMinorGridlineStroke() {
        return this.rangeMinorGridlineStroke;
    }

    /**
     * Sets the stroke for the minor grid lines plotted against the range axis,
     * and sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getRangeMinorGridlineStroke()
     */
    public void setRangeMinorGridlineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.rangeMinorGridlineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint for the minor grid lines (if any) plotted against the
     * range axis.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setRangeMinorGridlinePaint(Paint)
     */
    public Paint getRangeMinorGridlinePaint() {
        return this.rangeMinorGridlinePaint;
    }

    /**
     * Sets the paint for the minor grid lines plotted against the range axis
     * and sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getRangeMinorGridlinePaint()
     */
    public void setRangeMinorGridlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.rangeMinorGridlinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the fixed legend items, if any.
     *
     * @return The legend items (possibly {@code null}).
     *
     * @see #setFixedLegendItems(LegendItemCollection)
     */
    public LegendItemCollection getFixedLegendItems() {
=====================================================================
Found a 55 line (225 tokens) duplication in the following files: 
Starting at line 446 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

        RectangleEdge edge = getDomainAxisEdge();
        double cursor = RectangleEdge.coordinate(dataArea, edge);
        AxisState axisState = axis.draw(g2, cursor, area, dataArea, edge, info);
        if (parentState == null) {
            parentState = new PlotState();
        }
        parentState.getSharedAxisStates().put(axis, axisState);

        // draw all the subplots
        for (int i = 0; i < this.subplots.size(); i++) {
            XYPlot plot = (XYPlot) this.subplots.get(i);
            PlotRenderingInfo subplotInfo = null;
            if (info != null) {
                subplotInfo = new PlotRenderingInfo(info.getOwner());
                info.addSubplotInfo(subplotInfo);
            }
            plot.draw(g2, this.subplotAreas[i], anchor, parentState,
                    subplotInfo);
        }

        if (info != null) {
            info.setDataArea(dataArea);
        }

    }

    /**
     * Returns a collection of legend items for the plot.
     *
     * @return The legend items.
     */
    @Override
    public LegendItemCollection getLegendItems() {
        LegendItemCollection result = getFixedLegendItems();
        if (result == null) {
            result = new LegendItemCollection();
            if (this.subplots != null) {
                for (XYPlot plot : this.subplots) {
                    LegendItemCollection more = plot.getLegendItems();
                    result.addAll(more);
                }
            }
        }
        return result;
    }

    /**
     * Multiplies the range on the range axis/axes by the specified factor.
     *
     * @param factor  the zoom factor.
     * @param info  the plot rendering info ({@code null} not permitted).
     * @param source  the source point ({@code null} not permitted).
     */
    @Override
    public void zoomRangeAxes(double factor, PlotRenderingInfo info,
=====================================================================
Found a 63 line (222 tokens) duplication in the following files: 
Starting at line 362 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 373 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java

            CategoryPlot plot = (CategoryPlot) this.subplots.get(i);

            // calculate sub-plot area
            if (orientation == PlotOrientation.HORIZONTAL) {
                double w = usableSize * plot.getWeight() / totalWeight;
                this.subplotAreas[i] = new Rectangle2D.Double(x, y, w,
                        adjustedPlotArea.getHeight());
                x = x + w + this.gap;
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                double h = usableSize * plot.getWeight() / totalWeight;
                this.subplotAreas[i] = new Rectangle2D.Double(x, y,
                        adjustedPlotArea.getWidth(), h);
                y = y + h + this.gap;
            }

            AxisSpace subSpace = plot.calculateRangeAxisSpace(g2,
                    this.subplotAreas[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each of the
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
     public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
=====================================================================
Found a 311 line (221 tokens) duplication in the following files: 
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java
Starting at line 451 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java

    void setDefaultFillPaint(Paint paint);

    //// OUTLINE PAINT /////////////////////////////////////////////////////////

    /**
     * Returns the paint used to outline data items as they are drawn.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The paint (never {@code null}).
     */
    Paint getItemOutlinePaint(int row, int column);

    /**
     * Returns the paint used to outline an item drawn by the renderer.
     *
     * @param series  the series (zero-based index).
     *
     * @return The paint (possibly {@code null}).
     *
     * @see #setSeriesOutlinePaint(int, Paint)
     */
    Paint getSeriesOutlinePaint(int series);

    /**
     * Sets the paint used for a series outline and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param paint  the paint ({@code null} permitted).
     *
     * @see #getSeriesOutlinePaint(int)
     */
    void setSeriesOutlinePaint(int series, Paint paint);

    /**
     * Sets the paint used for a series outline and sends a
     * {@link RendererChangeEvent} to all registered listeners if requested.
     *
     * @param series  the series index (zero-based).
     * @param paint  the paint ({@code null} permitted).
     * @param notify  send change event?
     *
     * @see #getSeriesOutlinePaint(int)
     */
    void setSeriesOutlinePaint(int series, Paint paint, boolean notify);

    /**
     * Returns the default outline paint.  During rendering, the renderer
     * will look up the series outline paint and, if this is {@code null}, it 
     * will use the default outline paint.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setDefaultOutlinePaint(Paint)
     */
    Paint getDefaultOutlinePaint();

    /**
     * Sets the default outline paint and sends a {@link RendererChangeEvent} to
     * all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getDefaultOutlinePaint()
     */
    void setDefaultOutlinePaint(Paint paint);

    /**
     * Sets the default outline paint and sends a {@link RendererChangeEvent} to
     * all registered listeners if requested.
     *
     * @param paint  the paint ({@code null} not permitted).
     * @param notify  send a change event?
     *
     * @see #getDefaultOutlinePaint()
     */
    void setDefaultOutlinePaint(Paint paint, boolean notify);

    //// STROKE ////////////////////////////////////////////////////////////////

    /**
     * Returns the stroke used to draw data items.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The stroke (never {@code null}).
     */
    Stroke getItemStroke(int row, int column);

    /**
     * Returns the stroke used to draw the items in a series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setSeriesStroke(int, Stroke)
     */
    Stroke getSeriesStroke(int series);

    /**
     * Sets the stroke used for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param stroke  the stroke ({@code null} permitted).
     *
     * @see #getSeriesStroke(int)
     */
    void setSeriesStroke(int series, Stroke stroke);

    /**
     * Sets the stroke used for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners if requested.
     *
     * @param series  the series index (zero-based).
     * @param stroke  the stroke ({@code null} permitted).
     * @param notify  send change event?
     *
     * @see #getSeriesStroke(int)
     */
    void setSeriesStroke(int series, Stroke stroke, boolean notify);

    /**
     * Returns the default stroke.
     *
     * @return The default stroke (never {@code null}).
     *
     * @see #setDefaultStroke(Stroke)
     */
    Stroke getDefaultStroke();

    /**
     * Sets the default stroke and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getDefaultStroke()
     */
    void setDefaultStroke(Stroke stroke);

    /**
     * Sets the default stroke and sends a {@link RendererChangeEvent} to all
     * registered listeners if requested.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     * @param notify  send change event?
     *
     * @see #getDefaultStroke()
     */
    void setDefaultStroke(Stroke stroke, boolean notify);

    //// OUTLINE STROKE ////////////////////////////////////////////////////////

    /**
     * Returns the stroke used to outline data items.
     * <p>
     * The default implementation passes control to the
     * lookupSeriesOutlineStroke method.  You can override this method if you
     * require different behaviour.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The stroke (never {@code null}).
     */
    Stroke getItemOutlineStroke(int row, int column);

    /**
     * Returns the stroke used to outline the items in a series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The stroke (possibly {@code null}).
     *
     * @see #setSeriesOutlineStroke(int, Stroke)
     */
    Stroke getSeriesOutlineStroke(int series);

    /**
     * Sets the outline stroke used for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param stroke  the stroke ({@code null} permitted).
     *
     * @see #getSeriesOutlineStroke(int)
     */
    void setSeriesOutlineStroke(int series, Stroke stroke);

    /**
     * Sets the outline stroke used for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners if requested.
     *
     * @param series  the series index (zero-based).
     * @param stroke  the stroke ({@code null} permitted).
     * @param notify  send change event?
     *
     * @see #getSeriesOutlineStroke(int)
     */
    void setSeriesOutlineStroke(int series, Stroke stroke, boolean notify);

    /**
     * Returns the default outline stroke.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setDefaultOutlineStroke(Stroke)
     */
    Stroke getDefaultOutlineStroke();

    /**
     * Sets the default outline stroke and sends a {@link RendererChangeEvent} to
     * all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getDefaultOutlineStroke()
     */
    void setDefaultOutlineStroke(Stroke stroke);

    /**
     * Sets the default outline stroke and sends a {@link RendererChangeEvent} to
     * all registered listeners if requested.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     * @param notify  send change event?
     *
     * @see #getDefaultOutlineStroke()
     */
    void setDefaultOutlineStroke(Stroke stroke, boolean notify);

    //// SHAPE /////////////////////////////////////////////////////////////////

    /**
     * Returns a shape used to represent a data item.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The shape (never {@code null}).
     */
    Shape getItemShape(int row, int column);

    /**
     * Returns a shape used to represent the items in a series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The shape (possibly {@code null}).
     *
     * @see #setSeriesShape(int, Shape)
     */
    Shape getSeriesShape(int series);

    /**
     * Sets the shape used for a series and sends a {@link RendererChangeEvent}
     * to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param shape  the shape ({@code null} permitted).
     *
     * @see #getSeriesShape(int)
     */
    void setSeriesShape(int series, Shape shape);

    /**
     * Sets the shape used for a series and sends a {@link RendererChangeEvent}
     * to all registered listeners if requested.
     *
     * @param series  the series index (zero-based).
     * @param shape  the shape ({@code null} permitted).
     * @param notify  send change event?
     *
     * @see #getSeriesShape(int)
     */
    void setSeriesShape(int series, Shape shape, boolean notify);

    /**
     * Returns the default shape.
     *
     * @return The shape (never {@code null}).
     *
     * @see #setDefaultShape(Shape)
     */
    Shape getDefaultShape();

    /**
     * Sets the default shape and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     *
     * @param shape  the shape ({@code null} not permitted).
     *
     * @see #getDefaultShape()
     */
    void setDefaultShape(Shape shape);

    /**
     * Sets the default shape and sends a {@link RendererChangeEvent} to all
     * registered listeners if requested.
     *
     * @param shape  the shape ({@code null} not permitted).
     * @param notify  send change event?
     *
     * @see #getDefaultShape()
     */
    void setDefaultShape(Shape shape, boolean notify);
=====================================================================
Found a 62 line (218 tokens) duplication in the following files: 
Starting at line 407 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 447 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

                }
            }
        }
        return result;
    }

    /**
     * Returns a pair of "stack" values calculated as the mean of the two
     * specified stack value pairs.
     *
     * @param stack1  the first stack pair.
     * @param stack2  the second stack pair.
     *
     * @return A pair of average stack values.
     */
    private double[] averageStackValues(double[] stack1, double[] stack2) {
        double[] result = new double[2];
        result[0] = (stack1[0] + stack2[0]) / 2.0;
        result[1] = (stack1[1] + stack2[1]) / 2.0;
        return result;
    }

    /**
     * Calculates adjusted stack values from the supplied values.  The value is
     * the mean of the supplied values, unless either of the supplied values
     * is zero, in which case the adjusted value is zero also.
     *
     * @param stack1  the first stack pair.
     * @param stack2  the second stack pair.
     *
     * @return A pair of average stack values.
     */
    private double[] adjustedStackValues(double[] stack1, double[] stack2) {
        double[] result = new double[2];
        if (stack1[0] == 0.0 || stack2[0] == 0.0) {
            result[0] = 0.0;
        }
        else {
            result[0] = (stack1[0] + stack2[0]) / 2.0;
        }
        if (stack1[1] == 0.0 || stack2[1] == 0.0) {
            result[1] = 0.0;
        }
        else {
            result[1] = (stack1[1] + stack2[1]) / 2.0;
        }
        return result;
    }

    /**
     * Checks this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} not permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof StackedAreaRenderer)) {
=====================================================================
Found a 37 line (218 tokens) duplication in the following files: 
Starting at line 1038 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1082 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.MILLISECOND, 1);
        axis.setTickUnit(unit);

        // START: check d0
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        // MIDDLE: check d0
        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);

        axis.setRange(d0, end);
        psd = axis.previousStandardDate(d0, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        // END: check d0
        axis.setTickMarkPosition(DateTickMarkPosition.END);

        axis.setRange(d0, end);
        psd = axis.previousStandardDate(d0, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());
    }

    /**
     * A basic check for the testPreviousStandardDate() method when the
     * tick unit is 10 milliseconds (just for the sake of having a multiple).
     */
    @Test
    public void testPreviousStandardDateMillisecondB() {
=====================================================================
Found a 51 line (217 tokens) duplication in the following files: 
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

    public List<CategoryPlot> getSubplots() {
        if (this.subplots != null) {
            return Collections.unmodifiableList(this.subplots);
        }
        else {
            return Collections.EMPTY_LIST;
        }
    }

    /**
     * Calculates the space required for the axes.
     *
     * @param g2  the graphics device.
     * @param plotArea  the plot area.
     *
     * @return The space required for the axes.
     */
    @Override
    protected AxisSpace calculateAxisSpace(Graphics2D g2, 
            Rectangle2D plotArea) {

        AxisSpace space = new AxisSpace();
        PlotOrientation orientation = getOrientation();

        // work out the space required by the domain axis...
        AxisSpace fixed = getFixedRangeAxisSpace();
        if (fixed != null) {
            if (orientation == PlotOrientation.VERTICAL) {
                space.setLeft(fixed.getLeft());
                space.setRight(fixed.getRight());
            }
            else if (orientation == PlotOrientation.HORIZONTAL) {
                space.setTop(fixed.getTop());
                space.setBottom(fixed.getBottom());
            }
        }
        else {
            ValueAxis valueAxis = getRangeAxis();
            RectangleEdge valueEdge = Plot.resolveRangeAxisLocation(
                    getRangeAxisLocation(), orientation);
            if (valueAxis != null) {
                space = valueAxis.reserveSpace(g2, this, plotArea, valueEdge,
                        space);
            }
        }

        Rectangle2D adjustedPlotArea = space.shrink(plotArea, null);
        // work out the maximum height or width of the non-shared axes...
        int n = this.subplots.size();
        int totalWeight = 0;
        for (int i = 0; i < n; i++) {
=====================================================================
Found a 39 line (211 tokens) duplication in the following files: 
Starting at line 888 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 984 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

        List result = new java.util.ArrayList();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);

        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }

        TickUnit tu = getTickUnit();
        double size = tu.getSize();
        int count = calculateVisibleTickCount();
        double lowestTickValue = calculateLowestVisibleTickValue();

        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {
            int minorTickSpaces = getMinorTickCount();
            if (minorTickSpaces <= 0) {
                minorTickSpaces = tu.getMinorTickCount();
            }
            for (int minorTick = 1; minorTick < minorTickSpaces; minorTick++) {
                double minorTickValue = lowestTickValue 
                        - size * minorTick / minorTickSpaces;
                if (getRange().contains(minorTickValue)) {
                    result.add(new NumberTick(TickType.MINOR, minorTickValue,
                            "", TextAnchor.TOP_CENTER, TextAnchor.CENTER,
                            0.0));
                }
            }
            for (int i = 0; i < count; i++) {
                double currentTickValue = lowestTickValue + (i * size);
                String tickLabel;
                NumberFormat formatter = getNumberFormatOverride();
                if (formatter != null) {
                    tickLabel = formatter.format(currentTickValue);
                }
                else {
                    tickLabel = getTickUnit().valueToString(currentTickValue);
                }
                TextAnchor anchor, rotationAnchor;
=====================================================================
Found a 151 line (209 tokens) duplication in the following files: 
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/TextAnnotation.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

    }

    /**
     * Returns the text for the annotation.
     *
     * @return The text (never {@code null}).
     *
     * @see #setText(String)
     */
    public String getText() {
        return this.text;
    }

    /**
     * Sets the text for the annotation and sends an 
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param text  the text ({@code null} not permitted).
     *
     * @see #getText()
     */
    public void setText(String text) {
        Args.nullNotPermitted(text, "text");
        this.text = text;
        fireAnnotationChanged();
    }

    /**
     * Returns the font for the annotation.
     *
     * @return The font (never {@code null}).
     *
     * @see #setFont(Font)
     */
    public Font getFont() {
        return this.font;
    }

    /**
     * Sets the font for the annotation and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param font  the font ({@code null} not permitted).
     *
     * @see #getFont()
     */
    public void setFont(Font font) {
        Args.nullNotPermitted(font, "font");
        this.font = font;
        fireAnnotationChanged();
    }

    /**
     * Returns the paint for the annotation.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setPaint(Paint)
     */
    public Paint getPaint() {
        return this.paint;
    }

    /**
     * Sets the paint for the annotation and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getPaint()
     */
    public void setPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.paint = paint;
        fireAnnotationChanged();
    }

    /**
     * Returns the text anchor.
     *
     * @return The text anchor.
     *
     * @see #setTextAnchor(TextAnchor)
     */
    public TextAnchor getTextAnchor() {
        return this.textAnchor;
    }

    /**
     * Sets the text anchor (the point on the text bounding rectangle that is
     * aligned to the (x, y) coordinate of the annotation) and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param anchor  the anchor point ({@code null} not permitted).
     *
     * @see #getTextAnchor()
     */
    public void setTextAnchor(TextAnchor anchor) {
        Args.nullNotPermitted(anchor, "anchor");
        this.textAnchor = anchor;
        fireAnnotationChanged();
    }

    /**
     * Returns the rotation anchor.
     *
     * @return The rotation anchor point (never {@code null}).
     *
     * @see #setRotationAnchor(TextAnchor)
     */
    public TextAnchor getRotationAnchor() {
        return this.rotationAnchor;
    }

    /**
     * Sets the rotation anchor point and sends an
     * {@link AnnotationChangeEvent} to all registered listeners.
     *
     * @param anchor  the anchor ({@code null} not permitted).
     *
     * @see #getRotationAnchor()
     */
    public void setRotationAnchor(TextAnchor anchor) {
        Args.nullNotPermitted(anchor, "anchor");
        this.rotationAnchor = anchor;
        fireAnnotationChanged();
    }

    /**
     * Returns the rotation angle in radians.
     *
     * @return The rotation angle.
     *
     * @see #setRotationAngle(double)
     */
    public double getRotationAngle() {
        return this.rotationAngle;
    }

    /**
     * Sets the rotation angle and sends an {@link AnnotationChangeEvent} to
     * all registered listeners.  The angle is measured clockwise in radians.
     *
     * @param angle  the angle (in radians).
     *
     * @see #getRotationAngle()
     */
    public void setRotationAngle(double angle) {
        this.rotationAngle = angle;
        fireAnnotationChanged();
    }
=====================================================================
Found a 162 line (206 tokens) duplication in the following files: 
Starting at line 2822 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4391 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Returns a flag indicating whether or not the range crosshair is visible.
     *
     * @return The flag.
     *
     * @see #setRangeCrosshairVisible(boolean)
     */
    public boolean isRangeCrosshairVisible() {
        return this.rangeCrosshairVisible;
    }

    /**
     * Sets the flag indicating whether or not the range crosshair is visible.
     *
     * @param flag  the new value of the flag.
     *
     * @see #isRangeCrosshairVisible()
     */
    public void setRangeCrosshairVisible(boolean flag) {
        if (this.rangeCrosshairVisible != flag) {
            this.rangeCrosshairVisible = flag;
            fireChangeEvent();
        }
    }

    /**
     * Returns a flag indicating whether or not the crosshair should "lock-on"
     * to actual data values.
     *
     * @return The flag.
     *
     * @see #setRangeCrosshairLockedOnData(boolean)
     */
    public boolean isRangeCrosshairLockedOnData() {
        return this.rangeCrosshairLockedOnData;
    }

    /**
     * Sets the flag indicating whether or not the range crosshair should
     * "lock-on" to actual data values, and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param flag  the flag.
     *
     * @see #isRangeCrosshairLockedOnData()
     */
    public void setRangeCrosshairLockedOnData(boolean flag) {
        if (this.rangeCrosshairLockedOnData != flag) {
            this.rangeCrosshairLockedOnData = flag;
            fireChangeEvent();
        }
    }

    /**
     * Returns the range crosshair value.
     *
     * @return The value.
     *
     * @see #setRangeCrosshairValue(double)
     */
    public double getRangeCrosshairValue() {
        return this.rangeCrosshairValue;
    }

    /**
     * Sets the range crosshair value and, if the crosshair is visible, sends
     * a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param value  the new value.
     *
     * @see #getRangeCrosshairValue()
     */
    public void setRangeCrosshairValue(double value) {
        setRangeCrosshairValue(value, true);
    }

    /**
     * Sets the range crosshair value and, if requested, sends a
     * {@link PlotChangeEvent} to all registered listeners (but only if the
     * crosshair is visible).
     *
     * @param value  the new value.
     * @param notify  a flag that controls whether or not listeners are
     *                notified.
     *
     * @see #getRangeCrosshairValue()
     */
    public void setRangeCrosshairValue(double value, boolean notify) {
        this.rangeCrosshairValue = value;
        if (isRangeCrosshairVisible() && notify) {
            fireChangeEvent();
        }
    }

    /**
     * Returns the pen-style ({@code Stroke}) used to draw the crosshair
     * (if visible).
     *
     * @return The crosshair stroke (never {@code null}).
     *
     * @see #setRangeCrosshairStroke(Stroke)
     * @see #isRangeCrosshairVisible()
     * @see #getRangeCrosshairPaint()
     */
    public Stroke getRangeCrosshairStroke() {
        return this.rangeCrosshairStroke;
    }

    /**
     * Sets the pen-style ({@code Stroke}) used to draw the range
     * crosshair (if visible), and sends a {@link PlotChangeEvent} to all
     * registered listeners.
     *
     * @param stroke  the new crosshair stroke ({@code null} not
     *         permitted).
     *
     * @see #getRangeCrosshairStroke()
     */
    public void setRangeCrosshairStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.rangeCrosshairStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint used to draw the range crosshair.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setRangeCrosshairPaint(Paint)
     * @see #isRangeCrosshairVisible()
     * @see #getRangeCrosshairStroke()
     */
    public Paint getRangeCrosshairPaint() {
        return this.rangeCrosshairPaint;
    }

    /**
     * Sets the paint used to draw the range crosshair (if visible) and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getRangeCrosshairPaint()
     */
    public void setRangeCrosshairPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.rangeCrosshairPaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the list of annotations.
     *
     * @return The list of annotations (never {@code null}).
     *
     * @see #addAnnotation(CategoryAnnotation)
     * @see #clearAnnotations()
     */
    public List<CategoryAnnotation> getAnnotations() {
=====================================================================
Found a 15 line (205 tokens) duplication in the following files: 
Starting at line 595 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

            GeneralPath hotspot = new GeneralPath();
            if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {
                moveTo(hotspot, transZero, ((transX0 + transX1) / 2.0));
                lineTo(hotspot, ((transY0 + transY1) / 2.0), ((transX0 + transX1) / 2.0));
                lineTo(hotspot, transY1, transX1);
                lineTo(hotspot, ((transY1 + transY2) / 2.0), ((transX1 + transX2) / 2.0));
                lineTo(hotspot, transZero, ((transX1 + transX2) / 2.0));
            } else { // vertical orientation
                moveTo(hotspot, ((transX0 + transX1) / 2.0), transZero);
                lineTo(hotspot, ((transX0 + transX1) / 2.0), ((transY0 + transY1) / 2.0));
                lineTo(hotspot, transX1, transY1);
                lineTo(hotspot, ((transX1 + transX2) / 2.0), ((transY1 + transY2) / 2.0));
                lineTo(hotspot, ((transX1 + transX2) / 2.0), transZero);
            }
            hotspot.closePath();
=====================================================================
Found a 56 line (202 tokens) duplication in the following files: 
Starting at line 216 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

        g2.setPaint(renderer.getShadowPaint());
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }
=====================================================================
Found a 56 line (202 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

        g2.setPaint(renderer.getShadowPaint());
        g2.fill(shadow);

    }

    /**
     * Creates a shadow for the bar.
     *
     * @param bar  the bar shape.
     * @param xOffset  the x-offset for the shadow.
     * @param yOffset  the y-offset for the shadow.
     * @param base  the edge that is the base of the bar.
     * @param pegShadow  peg the shadow to the base?
     *
     * @return A rectangle for the shadow.
     */
    private Rectangle2D createShadow(RectangularShape bar, double xOffset,
            double yOffset, RectangleEdge base, boolean pegShadow) {
        double x0 = bar.getMinX();
        double x1 = bar.getMaxX();
        double y0 = bar.getMinY();
        double y1 = bar.getMaxY();
        if (base == RectangleEdge.TOP) {
            x0 += xOffset;
            x1 += xOffset;
            if (!pegShadow) {
                y0 += yOffset;
            }
            y1 += yOffset;
        }
        else if (base == RectangleEdge.BOTTOM) {
            x0 += xOffset;
            x1 += xOffset;
            y0 += yOffset;
            if (!pegShadow) {
                y1 += yOffset;
            }
        }
        else if (base == RectangleEdge.LEFT) {
            if (!pegShadow) {
                x0 += xOffset;
            }
            x1 += xOffset;
            y0 += yOffset;
            y1 += yOffset;
        }
        else if (base == RectangleEdge.RIGHT) {
            x0 += xOffset;
            if (!pegShadow) {
                x1 += xOffset;
            }
            y0 += yOffset;
            y1 += yOffset;
        }
        return new Rectangle2D.Double(x0, y0, (x1 - x0), (y1 - y0));
    }
=====================================================================
Found a 34 line (201 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java

                    new XYAreaRenderer2());
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        XYSeriesCollection<String> d1 = new XYSeriesCollection<>();
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        XYSeries<String> s2 = new XYSeries<>("S2");
        s2.add(1.0, 1.1);
        d1.addSeries(s1);
        d1.addSeries(s2);

        XYSeriesCollection<String> d2 = new XYSeriesCollection<>();
        XYSeries<String> s3 = new XYSeries<>("S3");
        s3.add(1.0, 1.1);
        XYSeries<String> s4 = new XYSeries<>("S4");
        s4.add(1.0, 1.1);
        XYSeries<String> s5 = new XYSeries<>("S5");
        s5.add(1.0, 1.1);
        d2.addSeries(s3);
        d2.addSeries(s4);
        d2.addSeries(s5);
=====================================================================
Found a 42 line (196 tokens) duplication in the following files: 
Starting at line 798 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 917 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,
            Rectangle2D dataArea, double value, Paint paint, Stroke stroke) {

        Range range = axis.getRange();
        if (!range.contains(value)) {
            return;
        }

        PlotOrientation orientation = plot.getOrientation();
        Line2D line = null;
        double v = axis.valueToJava2D(value, dataArea, plot.getRangeAxisEdge());
        if (orientation == PlotOrientation.HORIZONTAL) {
            line = new Line2D.Double(v, dataArea.getMinY(), v,
                    dataArea.getMaxY());
        } else if (orientation == PlotOrientation.VERTICAL) {
            line = new Line2D.Double(dataArea.getMinX(), v,
                    dataArea.getMaxX(), v);
        }

        g2.setPaint(paint);
        g2.setStroke(stroke);
        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, 
                RenderingHints.VALUE_STROKE_NORMALIZE);
        g2.draw(line);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);
    }

    /**
     * Draws a marker for the domain axis.
     *
     * @param g2  the graphics device (not {@code null}).
     * @param plot  the plot (not {@code null}).
     * @param axis  the range axis (not {@code null}).
     * @param marker  the marker to be drawn (not {@code null}).
     * @param dataArea  the area inside the axes (not {@code null}).
     *
     * @see #drawRangeMarker(Graphics2D, CategoryPlot, ValueAxis, Marker,
     *     Rectangle2D)
     */
    @Override
    public void drawDomainMarker(Graphics2D g2, CategoryPlot plot,
=====================================================================
Found a 280 line (193 tokens) duplication in the following files: 
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java

            int rendererIndex, PlotRenderingInfo info);

    /**
     * Returns a boolean that indicates whether the specified item
     * should be drawn (this is typically used to hide an entire series).
     *
     * @param series  the series index.
     * @param item  the item index.
     *
     * @return A boolean.
     */
    boolean getItemVisible(int series, int item);

    /**
     * Returns a boolean that indicates whether the specified series
     * should be drawn (this is typically used to hide an entire series).
     *
     * @param series  the series index.
     *
     * @return A boolean.
     */
    boolean isSeriesVisible(int series);

    /**
     * Returns the flag that controls whether a series is visible.
     *
     * @param series  the series index (zero-based).
     *
     * @return The flag (possibly {@code null}).
     *
     * @see #setSeriesVisible(int, Boolean)
     */
    Boolean getSeriesVisible(int series);

    /**
     * Sets the flag that controls whether a series is visible and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag ({@code null} permitted).
     *
     * @see #getSeriesVisible(int)
     */
    void setSeriesVisible(int series, Boolean visible);

    /**
     * Sets the flag that controls whether a series is visible and, if
     * requested, sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param series  the series index.
     * @param visible  the flag ({@code null} permitted).
     * @param notify  notify listeners?
     *
     * @see #getSeriesVisible(int)
     */
    void setSeriesVisible(int series, Boolean visible, boolean notify);

    /**
     * Returns the default visibility for all series.
     *
     * @return The default visibility.
     *
     * @see #setDefaultSeriesVisible(boolean)
     */
    boolean getDefaultSeriesVisible();

    /**
     * Sets the default visibility and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     *
     * @param visible  the flag.
     *
     * @see #getDefaultSeriesVisible()
     */
    void setDefaultSeriesVisible(boolean visible);

    /**
     * Sets the default visibility and, if requested, sends
     * a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param visible  the visibility.
     * @param notify  notify listeners?
     *
     * @see #getDefaultSeriesVisible()
     */
    void setDefaultSeriesVisible(boolean visible, boolean notify);

    // SERIES VISIBLE IN LEGEND (not yet respected by all renderers)

    /**
     * Returns {@code true} if the series should be shown in the legend,
     * and {@code false} otherwise.
     *
     * @param series  the series index.
     *
     * @return A boolean.
     */
    boolean isSeriesVisibleInLegend(int series);

    /**
     * Returns the flag that controls whether a series is visible in the
     * legend.  This method returns only the "per series" settings - to
     * incorporate the override and base settings as well, you need to use the
     * {@link #isSeriesVisibleInLegend(int)} method.
     *
     * @param series  the series index (zero-based).
     *
     * @return The flag (possibly {@code null}).
     *
     * @see #setSeriesVisibleInLegend(int, Boolean)
     */
    Boolean getSeriesVisibleInLegend(int series);

    /**
     * Sets the flag that controls whether a series is visible in the legend
     * and sends a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag ({@code null} permitted).
     *
     * @see #getSeriesVisibleInLegend(int)
     */
    void setSeriesVisibleInLegend(int series, Boolean visible);

    /**
     * Sets the flag that controls whether a series is visible in the legend
     * and, if requested, sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param series  the series index.
     * @param visible  the flag ({@code null} permitted).
     * @param notify  notify listeners?
     *
     * @see #getSeriesVisibleInLegend(int)
     */
    void setSeriesVisibleInLegend(int series, Boolean visible, boolean notify);

    /**
     * Returns the default visibility in the legend for all series.
     *
     * @return The default visibility.
     *
     * @see #setDefaultSeriesVisibleInLegend(boolean)
     */
    boolean getDefaultSeriesVisibleInLegend();

    /**
     * Sets the default visibility in the legend and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param visible  the flag.
     *
     * @see #getDefaultSeriesVisibleInLegend()
     */
    void setDefaultSeriesVisibleInLegend(boolean visible);

    /**
     * Sets the default visibility in the legend and, if requested, sends
     * a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param visible  the visibility.
     * @param notify  notify listeners?
     *
     * @see #getDefaultSeriesVisibleInLegend()
     */
    void setDefaultSeriesVisibleInLegend(boolean visible, boolean notify);


    //// PAINT /////////////////////////////////////////////////////////////////

    /**
     * Returns the paint used to fill data items as they are drawn.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The paint (never {@code null}).
     */
    Paint getItemPaint(int row, int column);

    /**
     * Returns the paint used to fill an item drawn by the renderer.
     *
     * @param series  the series index (zero-based).
     *
     * @return The paint (possibly {@code null}).
     *
     * @see #setSeriesPaint(int, Paint)
     */
    Paint getSeriesPaint(int series);

    /**
     * Sets the paint used for a series and sends a {@link RendererChangeEvent}
     * to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param paint  the paint ({@code null} permitted).
     *
     * @see #getSeriesPaint(int)
     */
    void setSeriesPaint(int series, Paint paint);

    /**
     * Sets the paint used for a series and, if requested, sends a 
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param paint  the paint ({@code null} permitted).
     * @param notify  send change event?
     *
     * @see #getSeriesPaint(int)
     */
    void setSeriesPaint(int series, Paint paint, boolean notify);

    /**
     * Returns the default paint.  During rendering, a renderer will first look
     * up the series paint and, if this is {@code null}, it will use the
     * default paint.
     *
     * @return The default paint (never {@code null}).
     *
     * @see #setDefaultPaint(Paint)
     */
    Paint getDefaultPaint();

    /**
     * Sets the default paint and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getDefaultPaint()
     */
    void setDefaultPaint(Paint paint);

    /**
     * Sets the default paint and sends a {@link RendererChangeEvent} to all
     * registered listeners if requested.
     *
     * @param paint  the paint ({@code null} not permitted).
     * @param notify  send change event?
     *
     * @see #getDefaultPaint()
     */
    void setDefaultPaint(Paint paint, boolean notify);

    //// FILL PAINT /////////////////////////////////////////////////////////

    /**
     * Returns the paint used to fill data items as they are drawn.
     *
     * @param row  the row (or series) index (zero-based).
     * @param column  the column (or category) index (zero-based).
     *
     * @return The paint (never {@code null}).
     */
    Paint getItemFillPaint(int row, int column);

    /**
     * Returns the paint used to fill an item drawn by the renderer.
     *
     * @param series  the series (zero-based index).
     *
     * @return The paint (possibly {@code null}).
     *
     * @see #setSeriesFillPaint(int, Paint)
     */
    Paint getSeriesFillPaint(int series);

    /**
     * Sets the paint used for a series outline and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param paint  the paint ({@code null} permitted).
     *
     * @see #getSeriesFillPaint(int)
     */
    void setSeriesFillPaint(int series, Paint paint);
=====================================================================
Found a 22 line (193 tokens) duplication in the following files: 
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> series = new XIntervalSeries<>("Series", false, true);
        series.add(5.0, 5.50, 5.50, 5.50);
        series.add(5.1, 5.51, 5.51, 5.51);
        series.add(6.0, 6.6, 6.6, 6.6);
        series.add(3.0, 3.3, 3.3, 3.3);
        series.add(4.0, 4.4, 4.4, 4.4);
        series.add(2.0, 2.2, 2.2, 2.2);
        series.add(1.0, 1.1, 1.1, 1.1);
        assertEquals(5.5, series.getYValue(0), EPSILON);
        assertEquals(5.51, series.getYValue(1), EPSILON);
        assertEquals(6.6, series.getYValue(2), EPSILON);
        assertEquals(3.3, series.getYValue(3), EPSILON);
        assertEquals(4.4, series.getYValue(4), EPSILON);
        assertEquals(2.2, series.getYValue(5), EPSILON);
        assertEquals(1.1, series.getYValue(6), EPSILON);
    }

    /**
     * A simple check that the maximumItemCount attribute is working.
     */
    @Test
    public void testSetMaximumItemCount() {
=====================================================================
Found a 107 line (184 tokens) duplication in the following files: 
Starting at line 265 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/CategoryTableXYDataset.java
Starting at line 525 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultTableXYDataset.java

    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
        return this.intervalDelegate.getDomainLowerBound(includeInterval);
    }

    /**
     * Returns the maximum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getDomainUpperBound(boolean includeInterval) {
        return this.intervalDelegate.getDomainUpperBound(includeInterval);
    }

    /**
     * Returns the range of the values in this dataset's domain.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getDomainBounds(boolean includeInterval) {
        if (includeInterval) {
            return this.intervalDelegate.getDomainBounds(includeInterval);
        }
        else {
            return DatasetUtils.iterateDomainBounds(this, includeInterval);
        }
    }

    /**
     * Returns the interval position factor.
     *
     * @return The interval position factor.
     */
    public double getIntervalPositionFactor() {
        return this.intervalDelegate.getIntervalPositionFactor();
    }

    /**
     * Sets the interval position factor. Must be between 0.0 and 1.0 inclusive.
     * If the factor is 0.5, the gap is in the middle of the x values. If it
     * is lesser than 0.5, the gap is farther to the left and if greater than
     * 0.5 it gets farther to the right.
     *
     * @param d  the new interval position factor.
     */
    public void setIntervalPositionFactor(double d) {
        this.intervalDelegate.setIntervalPositionFactor(d);
        fireDatasetChanged();
    }

    /**
     * Returns the full interval width.
     *
     * @return The interval width to use.
     */
    public double getIntervalWidth() {
        return this.intervalDelegate.getIntervalWidth();
    }

    /**
     * Sets the interval width to a fixed value, and sends a
     * {@link DatasetChangeEvent} to all registered listeners.
     *
     * @param d  the new interval width (must be &gt; 0).
     */
    public void setIntervalWidth(double d) {
        this.intervalDelegate.setFixedIntervalWidth(d);
        fireDatasetChanged();
    }

    /**
     * Returns whether the interval width is automatically calculated or not.
     *
     * @return whether the width is automatically calculated or not.
     */
    public boolean isAutoWidth() {
        return this.intervalDelegate.isAutoWidth();
    }

    /**
     * Sets the flag that indicates whether the interval width is automatically
     * calculated or not.
     *
     * @param b  the flag.
     */
    public void setAutoWidth(boolean b) {
        this.intervalDelegate.setAutoWidth(b);
        fireDatasetChanged();
    }
=====================================================================
Found a 47 line (183 tokens) duplication in the following files: 
Starting at line 242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 389 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        double rectY = calculateBarW0(plot, PlotOrientation.HORIZONTAL, 
                dataArea, domainAxis, state, visibleRow, column);

        // BAR X
        Number meanValue = dataset.getMeanValue(row, column);
        if (meanValue == null) {
            return;
        }
        double value = meanValue.doubleValue();
        double base = 0.0;
        double lclip = getLowerClip();
        double uclip = getUpperClip();

        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
            if (value >= uclip) {
                return; // bar is not visible
            }
            base = uclip;
            if (value <= lclip) {
                value = lclip;
            }
        }
        else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
            if (value >= uclip) {
                value = uclip;
            }
            else {
                if (value <= lclip) {
                    value = lclip;
                }
            }
        }
        else { // cases 9, 10, 11 and 12
            if (value <= lclip) {
                return; // bar is not visible
            }
            base = getLowerClip();
            if (value >= uclip) {
               value = uclip;
            }
        }

        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();
        double transY1 = rangeAxis.valueToJava2D(base, dataArea, yAxisLocation);
        double transY2 = rangeAxis.valueToJava2D(value, dataArea,
                yAxisLocation);
        double rectX = Math.min(transY2, transY1);
=====================================================================
Found a 23 line (183 tokens) duplication in the following files: 
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java

    public Dimension preferredLayoutSize(Container parent) {

        synchronized (parent.getTreeLock()) {
            Insets insets = parent.getInsets();
            int ncomponents = parent.getComponentCount();
            int nrows = ncomponents / COLUMNS;
            for (int c = 0; c < COLUMNS; c++) {
                for (int r = 0; r < nrows; r++) {
                    Component component = parent.getComponent(r * COLUMNS + c);
                    Dimension d = component.getPreferredSize();
                    if (this.colWidth[c] < d.width) {
                        this.colWidth[c] = d.width;
                    }
                    if (this.rowHeight[r] < d.height) {
                        this.rowHeight[r] = d.height;
                    }
                }
            }
            int totalHeight = this.vGap * (nrows - 1);
            for (int r = 0; r < nrows; r++) {
                totalHeight = totalHeight + this.rowHeight[r];
            }
            int totalWidth = this.colWidth[0] + this.labelGap 
=====================================================================
Found a 23 line (183 tokens) duplication in the following files: 
Starting at line 362 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java
Starting at line 576 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java

        float halfAscent = ascent / 2.0f;
        float descent = metrics.getDescent();
        float leading = metrics.getLeading();
        float xAdj = 0.0f;
        float yAdj = 0.0f;

        if (anchor.isHorizontalCenter()) {
            xAdj = (float) -bounds.getWidth() / 2.0f;
        } else if (anchor.isRight()) {
            xAdj = (float) -bounds.getWidth();
        }

        if (anchor.isTop()) {
            yAdj = -descent - leading + (float) bounds.getHeight();
        } else if (anchor.isHalfAscent()) {
            yAdj = halfAscent;
        } else if (anchor.isVerticalCenter()) {
            yAdj = -descent - leading + (float) (bounds.getHeight() / 2.0);
        } else if (anchor.isBaseline()) {
            yAdj = 0.0f;
        } else if (anchor.isBottom()) {
            yAdj = -metrics.getDescent() - metrics.getLeading();
        }
=====================================================================
Found a 96 line (183 tokens) duplication in the following files: 
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultTableXYDataset.java
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeriesCollection.java

    }

    /**
     * Returns the number of items in the specified series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The number of items in the specified series.
     */
    @Override
    public int getItemCount(int series) {
        // check arguments...delegated
        return getSeries(series).getItemCount();
    }

    /**
     * Returns the x-value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The x-value for the specified series and item.
     */
    @Override
    public Number getX(int series, int item) {
        XYSeries<S> s = this.data.get(series);
        return s.getX(item);

    }

    /**
     * Returns the starting X value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The starting X value.
     */
    @Override
    public Number getStartX(int series, int item) {
        return this.intervalDelegate.getStartX(series, item);
    }

    /**
     * Returns the ending X value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The ending X value.
     */
    @Override
    public Number getEndX(int series, int item) {
        return this.intervalDelegate.getEndX(series, item);
    }

    /**
     * Returns the y-value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param index  the index of the item of interest (zero-based).
     *
     * @return The y-value for the specified series and item (possibly
     *         {@code null}).
     */
    @Override
    public Number getY(int series, int index) {
        XYSeries<S> s = this.data.get(series);
        return s.getY(index);
    }

    /**
     * Returns the starting Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The starting Y value.
     */
    @Override
    public Number getStartY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Returns the ending Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The ending Y value.
     */
    @Override
    public Number getEndY(int series, int item) {
        return getY(series, item);
    }
=====================================================================
Found a 41 line (182 tokens) duplication in the following files: 
Starting at line 557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 444 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

    }

    /**
     * Returns a legend item for a series.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return The legend item.
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {

        CategoryPlot cp = getPlot();
        if (cp == null) {
            return null;
        }

        if (isSeriesVisible(series) && isSeriesVisibleInLegend(series)) {
            CategoryDataset dataset = cp.getDataset(datasetIndex);
            String label = getLegendItemLabelGenerator().generateLabel(
                    dataset, series);
            String description = label;
            String toolTipText = null;
            if (getLegendItemToolTipGenerator() != null) {
                toolTipText = getLegendItemToolTipGenerator().generateLabel(
                        dataset, series);
            }
            String urlText = null;
            if (getLegendItemURLGenerator() != null) {
                urlText = getLegendItemURLGenerator().generateLabel(
                        dataset, series);
            }
            Shape shape = lookupLegendShape(series);
            Paint paint = lookupSeriesPaint(series);
            Paint fillPaint = (this.useFillPaint
                    ? getItemFillPaint(series, 0) : paint);
            boolean shapeOutlineVisible = this.drawOutlines;
            Paint outlinePaint = (this.useOutlinePaint
                    ? getItemOutlinePaint(series, 0) : paint);
            Stroke outlineStroke = lookupSeriesOutlineStroke(series);
=====================================================================
Found a 30 line (182 tokens) duplication in the following files: 
Starting at line 182 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYTitleAnnotationTest.java

        XYBoxAnnotation a2 = TestUtils.serialised(a1);
        assertEquals(a1, a2);
    }

    /**
     * Draws the chart with a {@code null} info object to make sure that
     * no exceptions are thrown.
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            DefaultTableXYDataset<String> dataset = new DefaultTableXYDataset<>();

            XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
            s1.add(5.0, 5.0);
            s1.add(10.0, 15.5);
            s1.add(15.0, 9.5);
            s1.add(20.0, 7.5);
            dataset.addSeries(s1);

            XYSeries<String> s2 = new XYSeries<>("Series 2", true, false);
            s2.add(5.0, 5.0);
            s2.add(10.0, 15.5);
            s2.add(15.0, 9.5);
            s2.add(20.0, 3.5);
            dataset.addSeries(s2);
            XYPlot<String> plot = new XYPlot<>(dataset,
                    new NumberAxis("X"), new NumberAxis("Y"),
                    new XYLineAndShapeRenderer());
            plot.addAnnotation(new XYBoxAnnotation(10.0, 12.0, 3.0, 4.0,
=====================================================================
Found a 28 line (182 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDotRendererTest.java

        StandardXYItemRenderer r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        XYSeriesCollection<String> d1 = new XYSeriesCollection<>();
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        XYSeries<String> s2 = new XYSeries<>("S2");
        s2.add(1.0, 1.1);
        d1.addSeries(s1);
        d1.addSeries(s2);

        XYSeriesCollection<String> d2 = new XYSeriesCollection<>();
        XYSeries<String> s3 = new XYSeries<>("S3");
        s3.add(1.0, 1.1);
        XYSeries<String> s4 = new XYSeries<>("S4");
        s4.add(1.0, 1.1);
        XYSeries<String> s5 = new XYSeries<>("S5");
        s5.add(1.0, 1.1);
        d2.addSeries(s3);
        d2.addSeries(s4);
        d2.addSeries(s5);
=====================================================================
Found a 18 line (182 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/CategoryTableXYDatasetTest.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java

        d1.add(9.0, 2.2, "Series 2");

        assertEquals(3.0, d1.getXValue(1, 0), EPSILON);
        assertEquals(7.0, d1.getXValue(1, 1), EPSILON);
        assertEquals(7.5, d1.getXValue(1, 2), EPSILON);
        assertEquals(9.0, d1.getXValue(1, 3), EPSILON);

        assertEquals(7.25, d1.getStartXValue(1, 2), EPSILON);
        assertEquals(8.75, d1.getStartXValue(1, 3), EPSILON);
        assertEquals(7.75, d1.getEndXValue(1, 2), EPSILON);
        assertEquals(9.25, d1.getEndXValue(1, 3), EPSILON);

        // and check the first series too...
        assertEquals(2.75, d1.getStartXValue(0, 0), EPSILON);
        assertEquals(6.75, d1.getStartXValue(0, 1), EPSILON);
        assertEquals(3.25, d1.getEndXValue(0, 0), EPSILON);
        assertEquals(7.25, d1.getEndXValue(0, 1), EPSILON);
    }
=====================================================================
Found a 38 line (179 tokens) duplication in the following files: 
Starting at line 1017 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
        assertEquals(yAxis, plot.getRangeAxisForDataset(0));

        // should get IllegalArgumentException for negative index
        boolean pass = false;
        try {
            plot.getRangeAxisForDataset(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        // if multiple axes are mapped, the first in the list should be
        // returned...
        NumberAxis yAxis2 = new NumberAxis("Y2");
        plot.setRangeAxis(1, yAxis2);
        assertEquals(yAxis, plot.getRangeAxisForDataset(0));

        plot.mapDatasetToRangeAxis(0, 1);
        assertEquals(yAxis2, plot.getRangeAxisForDataset(0));

        List<Integer> axisIndices = Arrays.asList(new Integer[] {0, 1});
        plot.mapDatasetToRangeAxes(0, axisIndices);
        assertEquals(yAxis, plot.getRangeAxisForDataset(0));

        axisIndices = Arrays.asList(new Integer[] {1, 2});
        plot.mapDatasetToRangeAxes(0, axisIndices);
        assertEquals(yAxis2, plot.getRangeAxisForDataset(0));
    }
    
    /**
     * Datasets are now stored in a Map, and it should be possible to assign
     * them an arbitrary key (index).
     */
    @Test
    public void testDatasetIndices() {
=====================================================================
Found a 54 line (177 tokens) duplication in the following files: 
Starting at line 458 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 300 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

        temp = Double.doubleToLongBits(this.outerRadius);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        result = 37 * result + HashUtils.hashCodeForPaint(
                this.backgroundPaint);
        result = 37 * result + HashUtils.hashCodeForPaint(
                this.foregroundPaint);
        result = 37 * result + this.stroke.hashCode();
        return result;
    }

    /**
     * Returns a clone of this instance.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if any attribute of this instance
     *     cannot be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.backgroundPaint, stream);
        SerialUtils.writePaint(this.foregroundPaint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.backgroundPaint = SerialUtils.readPaint(stream);
        this.foregroundPaint = SerialUtils.readPaint(stream);
        this.stroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 52 line (177 tokens) duplication in the following files: 
Starting at line 235 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java

        return (pass == 1);
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }

        // first pass draws the shading
        if (pass == 0) {
            IntervalXYDataset intervalDataset = (IntervalXYDataset) dataset;
            State drState = (State) state;

            double x = intervalDataset.getXValue(series, item);
            double yLow = intervalDataset.getStartYValue(series, item);
            double yHigh  = intervalDataset.getEndYValue(series, item);

            RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
            RectangleEdge yAxisLocation = plot.getRangeAxisEdge();

            double xx = domainAxis.valueToJava2D(x, dataArea, xAxisLocation);
            double yyLow = rangeAxis.valueToJava2D(yLow, dataArea,
                    yAxisLocation);
            double yyHigh = rangeAxis.valueToJava2D(yHigh, dataArea,
                    yAxisLocation);

            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
=====================================================================
Found a 48 line (177 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java

public class XYAreaChartTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("No exception should be triggered.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        XYPlot<String> plot = (XYPlot<String>) this.chart.getPlot();
=====================================================================
Found a 26 line (176 tokens) duplication in the following files: 
Starting at line 659 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 946 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

        if (RectangleEdge.isTopOrBottom(edge)) {
            double minX = area.getX();
            double maxX = area.getMaxX();
            if (isInverted()) {
                result = maxX + ((value - axisMin) / (axisMax - axisMin))
                         * (minX - maxX);
            }
            else {
                result = minX + ((value - axisMin) / (axisMax - axisMin))
                         * (maxX - minX);
            }
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            double minY = area.getMinY();
            double maxY = area.getMaxY();
            if (isInverted()) {
                result = minY + (((value - axisMin) / (axisMax - axisMin))
                         * (maxY - minY));
            }
            else {
                result = maxY - (((value - axisMin) / (axisMax - axisMin))
                         * (maxY - minY));
            }
        }
        return result;
    }
=====================================================================
Found a 22 line (175 tokens) duplication in the following files: 
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        StackedAreaRenderer r = new StackedAreaRenderer();
        assertNull(r.findRangeBounds(null));

        // an empty dataset should return a null range
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        assertNull(r.findRangeBounds(dataset));

        dataset.addValue(1.0, "R1", "C1");
        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(2.0, "R2", "C1");
        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R2", "C2");
        assertEquals(new Range(-2.0, 3.0), r.findRangeBounds(dataset));
    }
=====================================================================
Found a 23 line (174 tokens) duplication in the following files: 
Starting at line 996 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1225 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            double end2d = axis.valueToJava2D(end, dataArea,
                    plot.getRangeAxisEdge());
            double low = Math.min(start2d, end2d);
            double high = Math.max(start2d, end2d);

            PlotOrientation orientation = plot.getOrientation();
            Rectangle2D rect = null;
            if (orientation == PlotOrientation.HORIZONTAL) {
                // clip left and right bounds to data area
                low = Math.max(low, dataArea.getMinX());
                high = Math.min(high, dataArea.getMaxX());
                rect = new Rectangle2D.Double(low,
                        dataArea.getMinY(), high - low,
                        dataArea.getHeight());
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                // clip top and bottom bounds to data area
                low = Math.max(low, dataArea.getMinY());
                high = Math.min(high, dataArea.getMaxY());
                rect = new Rectangle2D.Double(dataArea.getMinX(),
                        low, dataArea.getWidth(),
                        high - low);
            }
=====================================================================
Found a 29 line (173 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepAreaRendererTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java

        XYAreaRenderer2 r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
    }

    /**
     * Draws the chart with a {@code null} info object to make sure that
     * no exceptions are thrown (particularly by code in the renderer).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            DefaultTableXYDataset<String> dataset = new DefaultTableXYDataset<>();

            XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
            s1.add(5.0, 5.0);
            s1.add(10.0, 15.5);
            s1.add(15.0, 9.5);
            s1.add(20.0, 7.5);
            dataset.addSeries(s1);

            XYSeries<String> s2 = new XYSeries<>("Series 2", true, false);
            s2.add(5.0, 5.0);
            s2.add(10.0, 15.5);
            s2.add(15.0, 9.5);
            s2.add(20.0, 3.5);
            dataset.addSeries(s2);
            XYPlot<String> plot = new XYPlot<>(dataset,
                    new NumberAxis("X"), new NumberAxis("Y"),
                    new XYAreaRenderer2());
=====================================================================
Found a 27 line (169 tokens) duplication in the following files: 
Starting at line 184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 322 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDotRendererTest.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        assertEquals(r1, r2);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        XYSeriesCollection<String> d1 = new XYSeriesCollection<>();
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        XYSeries<String> s2 = new XYSeries<>("S2");
        s2.add(1.0, 1.1);
        d1.addSeries(s1);
        d1.addSeries(s2);

        XYSeriesCollection<String> d2 = new XYSeriesCollection<>();
        XYSeries<String> s3 = new XYSeries<>("S3");
        s3.add(1.0, 1.1);
        XYSeries<String> s4 = new XYSeries<>("S4");
        s4.add(1.0, 1.1);
        XYSeries<String> s5 = new XYSeries<>("S5");
        s5.add(1.0, 1.1);
        d2.addSeries(s3);
        d2.addSeries(s4);
        d2.addSeries(s5);
=====================================================================
Found a 47 line (169 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

public class TimeSeriesChartTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("No exception should be triggered.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
=====================================================================
Found a 45 line (168 tokens) duplication in the following files: 
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 805 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java

    }

    /**
     * Returns a legend item for a series.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return The legend item.
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {

        // if there is no plot, there is no dataset to access...
        CategoryPlot cp = getPlot();
        if (cp == null) {
            return null;
        }

        // check that a legend item needs to be displayed...
        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {
            return null;
        }

        CategoryDataset dataset = cp.getDataset(datasetIndex);
        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
        Paint outlinePaint = lookupSeriesOutlinePaint(series);
        Stroke outlineStroke = lookupSeriesOutlineStroke(series);

        LegendItem result = new LegendItem(label, description, toolTipText,
                urlText, shape, paint, outlineStroke, outlinePaint);
=====================================================================
Found a 26 line (168 tokens) duplication in the following files: 
Starting at line 185 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDotRendererTest.java
Starting at line 260 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        XYSeriesCollection<String> d1 = new XYSeriesCollection<>();
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        XYSeries<String> s2 = new XYSeries<>("S2");
        s2.add(1.0, 1.1);
        d1.addSeries(s1);
        d1.addSeries(s2);

        XYSeriesCollection<String> d2 = new XYSeriesCollection<>();
        XYSeries<String> s3 = new XYSeries<>("S3");
        s3.add(1.0, 1.1);
        XYSeries<String> s4 = new XYSeries<>("S4");
        s4.add(1.0, 1.1);
        XYSeries<String> s5 = new XYSeries<>("S5");
        s5.add(1.0, 1.1);
        d2.addSeries(s3);
        d2.addSeries(s4);
        d2.addSeries(s5);
=====================================================================
Found a 230 line (166 tokens) duplication in the following files: 
Starting at line 1170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java
Starting at line 1103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java

    void setDefaultItemLabelPaint(Paint paint, boolean notify);

    // POSITIVE ITEM LABEL POSITION...

    /**
     * Returns the item label position for positive values.
     *
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     *
     * @return The item label position (never {@code null}).
     */
    ItemLabelPosition getPositiveItemLabelPosition(int row, int column);

    /**
     * Returns the item label position for all positive values in a series.
     *
     * @param series  the series index (zero-based).
     *
     * @return The item label position.
     *
     * @see #setSeriesPositiveItemLabelPosition(int, ItemLabelPosition)
     */
    ItemLabelPosition getSeriesPositiveItemLabelPosition(int series);

    /**
     * Sets the item label position for all positive values in a series and
     * sends a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param position  the position ({@code null} permitted).
     *
     * @see #getSeriesPositiveItemLabelPosition(int)
     */
    void setSeriesPositiveItemLabelPosition(int series, ItemLabelPosition position);

    /**
     * Sets the item label position for all positive values in a series and (if
     * requested) sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param series  the series index (zero-based).
     * @param position  the position ({@code null} permitted).
     * @param notify  notify registered listeners?
     *
     * @see #getSeriesPositiveItemLabelPosition(int)
     */
    void setSeriesPositiveItemLabelPosition(int series, ItemLabelPosition position, boolean notify);

    /**
     * Returns the default positive item label position.
     *
     * @return The position.
     *
     * @see #setDefaultPositiveItemLabelPosition(ItemLabelPosition)
     */
    ItemLabelPosition getDefaultPositiveItemLabelPosition();

    /**
     * Sets the default positive item label position.
     *
     * @param position  the position.
     *
     * @see #getDefaultPositiveItemLabelPosition()
     */
    void setDefaultPositiveItemLabelPosition(ItemLabelPosition position);

    /**
     * Sets the default positive item label position and, if requested, sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param position  the position.
     * @param notify  notify registered listeners?
     *
     * @see #getDefaultPositiveItemLabelPosition()
     */
    void setDefaultPositiveItemLabelPosition(ItemLabelPosition position, boolean notify);


    // NEGATIVE ITEM LABEL POSITION...

    /**
     * Returns the item label position for negative values.  This method can be
     * overridden to provide customisation of the item label position for
     * individual data items.
     *
     * @param row  the row index (zero-based).
     * @param column  the column (zero-based).
     *
     * @return The item label position.
     */
    ItemLabelPosition getNegativeItemLabelPosition(int row, int column);

    /**
     * Returns the item label position for all negative values in a series.
     *
     * @param series  the series index (zero-based).
     *
     * @return The item label position.
     *
     * @see #setSeriesNegativeItemLabelPosition(int, ItemLabelPosition)
     */
    ItemLabelPosition getSeriesNegativeItemLabelPosition(int series);

    /**
     * Sets the item label position for negative values in a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param position  the position ({@code null} permitted).
     *
     * @see #getSeriesNegativeItemLabelPosition(int)
     */
    void setSeriesNegativeItemLabelPosition(int series, ItemLabelPosition position);

    /**
     * Sets the item label position for negative values in a series and (if
     * requested) sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param series  the series index (zero-based).
     * @param position  the position ({@code null} permitted).
     * @param notify  notify registered listeners?
     *
     * @see #getSeriesNegativeItemLabelPosition(int)
     */
    void setSeriesNegativeItemLabelPosition(int series, ItemLabelPosition position, boolean notify);

    /**
     * Returns the default item label position for negative values.
     *
     * @return The position.
     *
     * @see #setDefaultNegativeItemLabelPosition(ItemLabelPosition)
     */
    ItemLabelPosition getDefaultNegativeItemLabelPosition();

    /**
     * Sets the default item label position for negative values and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param position  the position.
     *
     * @see #getDefaultNegativeItemLabelPosition()
     */
    void setDefaultNegativeItemLabelPosition(ItemLabelPosition position);

    /**
     * Sets the default negative item label position and, if requested, sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param position  the position.
     * @param notify  notify registered listeners?
     *
     * @see #getDefaultNegativeItemLabelPosition()
     */
    void setDefaultNegativeItemLabelPosition(ItemLabelPosition position, boolean notify);

    // CREATE ENTITIES

    /**
     * Returns a flag that determines whether or not an entity is generated
     * for the specified item.  The standard implementation of this method
     * will typically return the flag for the series or, if that is 
     * {@code null}, the value returned by {@link #getDefaultCreateEntities()}.
     * 
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * 
     * @return A boolean. 
     */
    boolean getItemCreateEntity(int series, int item);

    /**
     * Returns a boolean indicating whether or not entities should be created 
     * for the items in a series.
     * 
     * @param series  the series index (zero-based).
     * 
     * @return A boolean (possibly {@code null}).
     */
    Boolean getSeriesCreateEntities(int series);

    /**
     * Sets a flag that indicates whether or not entities should be created during
     * rendering for the items in the specified series, and sends a 
     * {@link RendererChangeEvent} to all registered listeners.
     * 
     * @param series  the series index (zero-based).
     * @param create  the new flag value ({@code null} permitted).
     */
    void setSeriesCreateEntities(int series, Boolean create);

    /**
     * Sets a flag that indicates whether or not entities should be created during
     * rendering for the items in the specified series, and sends a 
     * {@link RendererChangeEvent} to all registered listeners if requested.
     * 
     * @param series  the series index (zero-based).
     * @param create  the new flag value ({@code null} permitted).
     * @param notify  send change event?
     */
    void setSeriesCreateEntities(int series, Boolean create, boolean notify);

    /**
     * Returns the default value for the flag that controls whether or not
     * an entity is created for an item during rendering.  
     * 
     * @return A boolean. 
     */
    boolean getDefaultCreateEntities();

    /**
     * Sets the default setting for whether or not entities should be created
     * for items during rendering, and sends a {@link RendererChangeEvent} to 
     * all registered listeners.
     * 
     * @param create  the new flag value.
     */
    void setDefaultCreateEntities(boolean create);

    /**
     * Sets the default setting for whether or not entities should be created
     * for items during rendering, and sends a {@link RendererChangeEvent} to 
     * all registered listeners if requested.
     * 
     * @param create  the new flag value.
     * @param notify  send change event?
     */
    void setDefaultCreateEntities(boolean create, boolean notify);
=====================================================================
Found a 24 line (166 tokens) duplication in the following files: 
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java

    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {
        Number[][] data = new Integer[][] {{-30, -20}, {-10, 10}, {20, 30}};
        CategoryDataset<String, String> newData = 
                DatasetUtils.createCategoryDataset("S", "C", data);
        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        plot.setDataset(newData);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= -30, 
                "Expecting the lower bound of the range to be around -30: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());

    }
=====================================================================
Found a 46 line (165 tokens) duplication in the following files: 
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultCategoryDataset.java
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/TestIntervalCategoryDataset.java

        CategoryDataset<R, C> that = (CategoryDataset) obj;
        if (!getRowKeys().equals(that.getRowKeys())) {
            return false;
        }
        if (!getColumnKeys().equals(that.getColumnKeys())) {
            return false;
        }
        int rowCount = getRowCount();
        int colCount = getColumnCount();
        for (int r = 0; r < rowCount; r++) {
            for (int c = 0; c < colCount; c++) {
                Number v1 = getValue(r, c);
                Number v2 = that.getValue(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else if (!v1.equals(v2)) {
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * Returns a hash code for the dataset.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        return this.data.hashCode();
    }

    /**
     * Returns a clone of the dataset.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem cloning the
     *         dataset.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 63 line (164 tokens) duplication in the following files: 
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java
Starting at line 258 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getValue(R rowKey, C columnKey) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getValue(r, c + this.firstCategoryIndex);
        }
    }

    /**
     * Returns the number of columns in the table.
     *
     * @return The column count.
     */
    @Override
    public int getColumnCount() {
        int last = lastCategoryIndex();
        if (last == -1) {
            return 0;
        }
        else {
            return Math.max(last - this.firstCategoryIndex + 1, 0);
        }
    }

    /**
     * Returns the number of rows in the table.
     *
     * @return The row count.
     */
    @Override
    public int getRowCount() {
        return this.underlying.getRowCount();
    }

    /**
     * Returns a value from the table.
     *
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     *
     * @return The value (possibly {@code null}).
     */
    @Override
    public Number getValue(int row, int column) {
        return this.underlying.getValue(row, column + this.firstCategoryIndex);
    }

    /**
     * Tests this {@code SlidingCategoryDataset} for equality with an
     * arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
=====================================================================
Found a 27 line (163 tokens) duplication in the following files: 
Starting at line 199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/CandlestickRendererTest.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/HighLowRendererTest.java

        CandlestickRenderer renderer = new CandlestickRenderer();

        OHLCDataItem item1 = new OHLCDataItem(new Date(1L), 2.0, 4.0, 1.0, 3.0,
                100);
        OHLCDataset dataset = new DefaultOHLCDataset("S1",
                new OHLCDataItem[] {item1});
        Range range = renderer.findRangeBounds(dataset);
        assertEquals(new Range(1.0, 4.0), range);

        OHLCDataItem item2 = new OHLCDataItem(new Date(1L), -1.0, 3.0, -1.0,
                3.0, 100);
        dataset = new DefaultOHLCDataset("S1", new OHLCDataItem[] {item1,
                item2});
        range = renderer.findRangeBounds(dataset);
        assertEquals(new Range(-1.0, 4.0), range);

        // try an empty dataset - should return a null range
        dataset = new DefaultOHLCDataset("S1", new OHLCDataItem[] {});
        range = renderer.findRangeBounds(dataset);
        assertNull(range);

        // try a null dataset - should return a null range
        range = renderer.findRangeBounds(null);
        assertNull(range);
    }

}
=====================================================================
Found a 21 line (163 tokens) duplication in the following files: 
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java

            Millisecond m = new Millisecond(new Date(0L));
            assertEquals(1970, m.getSecond().getMinute().getHour().getYear());
            assertEquals(1, m.getSecond().getMinute().getHour().getMonth());
            assertEquals(1, m.getSecond().getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getSecond().getMinute().getHour().getHour());
            assertEquals(0, m.getSecond().getMinute().getMinute());
            assertEquals(0, m.getSecond().getSecond());
            assertEquals(0, m.getMillisecond());
            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the millisecond-second constructor should use it.
     */
    @Test
    public void testMillisecondSecondConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 33 line (162 tokens) duplication in the following files: 
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java

                    Dimension d = component.getPreferredSize();
                    if (this.colWidth[c] < d.width) {
                        this.colWidth[c] = d.width;
                    }
                    if (this.rowHeight[r] < d.height) {
                        this.rowHeight[r] = d.height;
                    }
                }
            }
            int totalHeight = this.vGap * (nrows - 1);
            for (int r = 0; r < nrows; r++) {
                totalHeight = totalHeight + this.rowHeight[r];
            }
            int totalWidth = this.colWidth[0] + this.labelGap 
                + this.colWidth[1] + this.buttonGap + this.colWidth[2];
            return new Dimension(
                insets.left + insets.right + totalWidth + this.labelGap 
                    + this.buttonGap,
                insets.top + insets.bottom + totalHeight + this.vGap
            );
        }

    }

    /**
     * Returns the minimum size using this layout manager.
     *
     * @param parent  the parent.
     *
     * @return the minimum size using this layout manager.
     */
    @Override
    public Dimension minimumLayoutSize(Container parent) {
=====================================================================
Found a 24 line (162 tokens) duplication in the following files: 
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

        BarRenderer r = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, 
                new CategoryAxis("x"), new NumberAxis("y"), r);
        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(0, 0);
        assertNotNull(li);
        r.setSeriesVisibleInLegend(0, Boolean.FALSE);
        li = r.getLegendItem(0, 0);
        assertNull(li);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        DefaultCategoryDataset<String, String> dataset0 = new DefaultCategoryDataset<>();
        dataset0.addValue(21.0, "R1", "C1");
        dataset0.addValue(22.0, "R2", "C1");
        DefaultCategoryDataset<String, String> dataset1 = new DefaultCategoryDataset<>();
        dataset1.addValue(23.0, "R3", "C1");
        dataset1.addValue(24.0, "R4", "C1");
        dataset1.addValue(25.0, "R5", "C1");
=====================================================================
Found a 20 line (160 tokens) duplication in the following files: 
Starting at line 996 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                Point2D coords = calculateDomainMarkerTextAnchorPoint(
                        g2, orientation, dataArea, line.getBounds2D(),
                        marker.getLabelOffset(),
                        LengthAdjustmentType.EXPAND, anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(originalComposite);
        } else if (marker instanceof IntervalMarker) {
            IntervalMarker im = (IntervalMarker) marker;
            double start = im.getStartValue();
            double end = im.getEndValue();
            Range range = domainAxis.getRange();
=====================================================================
Found a 109 line (160 tokens) duplication in the following files: 
Starting at line 485 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java
Starting at line 249 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java

            result = item.getQ3();
        }
        return result;
    }

    /**
     * Returns the column index for a given key.
     *
     * @param key  the column key ({@code null} not permitted).
     *
     * @return The column index.
     *
     * @see #getColumnKey(int)
     */
    @Override
    public int getColumnIndex(C key) {
        return this.data.getColumnIndex(key);
    }

    /**
     * Returns a column key.
     *
     * @param column  the column index (zero-based).
     *
     * @return The column key.
     *
     * @see #getColumnIndex(Comparable)
     */
    @Override
    public C getColumnKey(int column) {
        return this.data.getColumnKey(column);
    }

    /**
     * Returns the column keys.
     *
     * @return The keys.
     *
     * @see #getRowKeys()
     */
    @Override
    public List<C> getColumnKeys() {
        return this.data.getColumnKeys();
    }

    /**
     * Returns the row index for a given key.
     *
     * @param key  the row key ({@code null} not permitted).
     *
     * @return The row index.
     *
     * @see #getRowKey(int)
     */
    @Override
    public int getRowIndex(R key) {
        // defer null argument check
        return this.data.getRowIndex(key);
    }

    /**
     * Returns a row key.
     *
     * @param row  the row index (zero-based).
     *
     * @return The row key.
     *
     * @see #getRowIndex(Comparable)
     */
    @Override
    public R getRowKey(int row) {
        return this.data.getRowKey(row);
    }

    /**
     * Returns the row keys.
     *
     * @return The keys.
     *
     * @see #getColumnKeys()
     */
    @Override
    public List<R> getRowKeys() {
        return this.data.getRowKeys();
    }

    /**
     * Returns the number of rows in the table.
     *
     * @return The row count.
     *
     * @see #getColumnCount()
     */
    @Override
    public int getRowCount() {
        return this.data.getRowCount();
    }

    /**
     * Returns the number of columns in the table.
     *
     * @return The column count.
     *
     * @see #getRowCount()
     */
    @Override
    public int getColumnCount() {
        return this.data.getColumnCount();
    }
=====================================================================
Found a 28 line (160 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYTitleAnnotationTest.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepAreaRendererTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java

        assertEquals(a1, a2);
    }

    /**
     * Draws the chart with a {@code null} info object to make sure that
     * no exceptions are thrown.
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            DefaultTableXYDataset<String> dataset = new DefaultTableXYDataset<>();

            XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
            s1.add(5.0, 5.0);
            s1.add(10.0, 15.5);
            s1.add(15.0, 9.5);
            s1.add(20.0, 7.5);
            dataset.addSeries(s1);

            XYSeries<String> s2 = new XYSeries<>("Series 2", true, false);
            s2.add(5.0, 5.0);
            s2.add(10.0, 15.5);
            s2.add(15.0, 9.5);
            s2.add(20.0, 3.5);
            dataset.addSeries(s2);
            XYPlot<String> plot = new XYPlot<>(dataset,
                    new NumberAxis("X"), new NumberAxis("Y"),
                    new XYLineAndShapeRenderer());
=====================================================================
Found a 34 line (157 tokens) duplication in the following files: 
Starting at line 1522 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1637 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

                    }
                }

                DateTick tick = new DateTick(tickDate, tickLabel, anchor,
                        rotationAnchor, angle);
                result.add(tick);
                hasRolled = false;

                long currentTickTime = tickDate.getTime();
                tickDate = unit.addToDate(tickDate, this.timeZone);
                long nextTickTime = tickDate.getTime();
                for (int minorTick = 1; minorTick < minorTickSpaces;
                        minorTick++) {
                    long minorTickTime = currentTickTime
                            + (nextTickTime - currentTickTime)
                            * minorTick / minorTickSpaces;
                    if (getRange().contains(minorTickTime)
                            && (!isHiddenValue(minorTickTime))) {
                        result.add(new DateTick(TickType.MINOR,
                                new Date(minorTickTime), "",
                                TextAnchor.TOP_CENTER, TextAnchor.CENTER,
                                0.0));
                    }
                }

            }
            else {
                tickDate = unit.rollDate(tickDate, this.timeZone);
                hasRolled = true;
            }
        }
        return result;

    }
=====================================================================
Found a 11 line (153 tokens) duplication in the following files: 
Starting at line 477 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 491 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        long temp = Double.doubleToLongBits(this.angle);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.tipRadius);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.baseRadius);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.arrowLength);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.arrowWidth);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        result = 37 * result + HashUtils.hashCodeForPaint(this.arrowPaint);
=====================================================================
Found a 19 line (153 tokens) duplication in the following files: 
Starting at line 980 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 637 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/ValueAxis.java

            float xx = (float) valueToJava2D(getRange().getUpperBound(),
                    dataArea, edge);
            Line2D mark = null;
            g2.setStroke(getTickMarkStroke());
            g2.setPaint(getTickMarkPaint());
            if (edge == RectangleEdge.LEFT) {
                mark = new Line2D.Double(cursor - ol, xx, cursor + il, xx);
            }
            else if (edge == RectangleEdge.RIGHT) {
                mark = new Line2D.Double(cursor + ol, xx, cursor - il, xx);
            }
            else if (edge == RectangleEdge.TOP) {
                mark = new Line2D.Double(xx, cursor - ol, xx, cursor + il);
            }
            else if (edge == RectangleEdge.BOTTOM) {
                mark = new Line2D.Double(xx, cursor + ol, xx, cursor - il);
            }
            g2.draw(mark);
        }
=====================================================================
Found a 12 line (153 tokens) duplication in the following files: 
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

    public void testFindDomainBounds2() {
        DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 81 line (152 tokens) duplication in the following files: 
Starting at line 95 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public CategoryDataset<R, C> getUnderlyingDataset() {
        return this.underlying;
    }

    /**
     * Returns the index of the first visible category.
     *
     * @return The index.
     *
     * @see #setFirstCategoryIndex(int)
     */
    public int getFirstCategoryIndex() {
        return this.firstCategoryIndex;
    }

    /**
     * Sets the index of the first category that should be used from the
     * underlying dataset, and sends a {@link DatasetChangeEvent} to all
     * registered listeners.
     *
     * @param first  the index.
     *
     * @see #getFirstCategoryIndex()
     */
    public void setFirstCategoryIndex(int first) {
        if (first < 0 || first >= this.underlying.getColumnCount()) {
            throw new IllegalArgumentException("Invalid index.");
        }
        this.firstCategoryIndex = first;
        fireDatasetChanged();
    }

    /**
     * Returns the maximum category count.
     *
     * @return The maximum category count.
     *
     * @see #setMaximumCategoryCount(int)
     */
    public int getMaximumCategoryCount() {
        return this.maximumCategoryCount;
    }

    /**
     * Sets the maximum category count and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param max  the maximum.
     *
     * @see #getMaximumCategoryCount()
     */
    public void setMaximumCategoryCount(int max) {
        if (max < 0) {
            throw new IllegalArgumentException("Requires 'max' >= 0.");
        }
        this.maximumCategoryCount = max;
        fireDatasetChanged();
    }

    /**
     * Returns the index of the last column for this dataset, or -1.
     *
     * @return The index.
     */
    private int lastCategoryIndex() {
        if (this.maximumCategoryCount == 0) {
            return -1;
        }
        return Math.min(this.firstCategoryIndex + this.maximumCategoryCount,
                this.underlying.getColumnCount()) - 1;
    }

    /**
     * Returns the index for the specified column key.
     *
     * @param key  the key.
     *
     * @return The column index, or -1 if the key is not recognised.
     */
    @Override
    public int getColumnIndex(C key) {
=====================================================================
Found a 16 line (151 tokens) duplication in the following files: 
Starting at line 1366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

            TextUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle() - Math.PI / 2.0, 
                    anchor);
            state.cursorLeft(insets.getLeft() + labelBounds.getWidth()
                    + insets.getRight());
        }
        else if (edge == RectangleEdge.RIGHT) {
            AffineTransform t = AffineTransform.getRotateInstance(
                    getLabelAngle() + Math.PI / 2.0,
                    labelBounds.getCenterX(), labelBounds.getCenterY());
            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
            labelBounds = rotatedLabelBounds.getBounds2D();
            double labelx = state.getCursor()
                            + insets.getLeft() + labelBounds.getWidth() / 2.0;
            double labely = labelLocationY(this.labelLocation, dataArea);
            TextAnchor anchor = labelAnchorV(this.labelLocation);
=====================================================================
Found a 17 line (151 tokens) duplication in the following files: 
Starting at line 269 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/CrosshairOverlay.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/CrosshairOverlay.java

                    dataArea.getMaxX(), y);
            Paint savedPaint = g2.getPaint();
            Stroke savedStroke = g2.getStroke();
            g2.setPaint(crosshair.getPaint());
            g2.setStroke(crosshair.getStroke());
            g2.draw(line);
            if (crosshair.isLabelVisible()) {
                String label = crosshair.getLabelGenerator().generateLabel(
                        crosshair);
                if (label != null && !label.isEmpty()) {
                    Font savedFont = g2.getFont();
                    g2.setFont(crosshair.getLabelFont());
                    RectangleAnchor anchor = crosshair.getLabelAnchor();
                    Point2D pt = calculateLabelPoint(line, anchor, crosshair.getLabelXOffset(), crosshair.getLabelYOffset());
                    float xx = (float) pt.getX();
                    float yy = (float) pt.getY();
                    TextAnchor alignPt = textAlignPtForLabelAnchorH(anchor);
=====================================================================
Found a 31 line (151 tokens) duplication in the following files: 
Starting at line 211 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/ComparableObjectSeries.java
Starting at line 468 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeries.java

        Args.nullNotPermitted(item, "item");
        if (this.autoSort) {
            int index = Collections.binarySearch(this.data, item);
            if (index < 0) {
                this.data.add(-index - 1, item);
            }
            else {
                if (this.allowDuplicateXValues) {
                    // need to make sure we are adding *after* any duplicates
                    int size = this.data.size();
                    while (index < size
                           && item.compareTo(this.data.get(index)) == 0) {
                        index++;
                    }
                    if (index < this.data.size()) {
                        this.data.add(index, item);
                    }
                    else {
                        this.data.add(item);
                    }
                }
                else {
                    throw new SeriesException("X-value already exists.");
                }
            }
        }
        else {
            if (!this.allowDuplicateXValues) {
                // can't allow duplicate values, so we need to check whether
                // there is an item with the given x-value already
                int index = indexOf(item.getComparable());
=====================================================================
Found a 12 line (150 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1057 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

    public void testFindDomainBounds4() {
        DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>();
        double[] x1 = new double[] {0.8, 3.2, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 20 line (149 tokens) duplication in the following files: 
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/MultiplePiePlotTest.java
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java

        MultiplePiePlot plot = new MultiplePiePlot(dataset);
        JFreeChart chart = new JFreeChart(plot);
        LegendItemCollection legendItems = plot.getLegendItems();
        assertEquals(2, legendItems.getItemCount());
        LegendItem item1 = legendItems.get(0);
        assertEquals("S1", item1.getLabel());
        assertEquals("S1", item1.getSeriesKey());
        assertEquals(0, item1.getSeriesIndex());
        assertEquals(dataset, item1.getDataset());
        assertEquals(0, item1.getDatasetIndex());

        LegendItem item2 = legendItems.get(1);
        assertEquals("S2", item2.getLabel());
        assertEquals("S2", item2.getSeriesKey());
        assertEquals(1, item2.getSeriesIndex());
        assertEquals(dataset, item2.getDataset());
        assertEquals(0, item2.getDatasetIndex());
    }

}
=====================================================================
Found a 12 line (148 tokens) duplication in the following files: 
Starting at line 71 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item1 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        LegendItem item2 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 15 line (147 tokens) duplication in the following files: 
Starting at line 1351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1448 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

            TextUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle(), TextAnchor.CENTER);
            state.cursorDown(insets.getTop() + labelBounds.getHeight()
                    + insets.getBottom());
        }
        else if (edge == RectangleEdge.LEFT) {
            AffineTransform t = AffineTransform.getRotateInstance(
                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(),
                    labelBounds.getCenterY());
            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
            labelBounds = rotatedLabelBounds.getBounds2D();
            double labelx = state.getCursor()
                            - insets.getRight() - labelBounds.getWidth() / 2.0;
            double labely = labelLocationY(this.labelLocation, dataArea);
            TextAnchor anchor = labelAnchorV(this.labelLocation);
=====================================================================
Found a 26 line (147 tokens) duplication in the following files: 
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

                throw new RuntimeException("Not implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                return arrangeFN(container, g2, constraint);
            }
            else if (h == LengthConstraintType.FIXED) {
                return arrangeFF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                return arrangeFR(container, g2, constraint);
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeRN(container, g2, constraint);
            }
            else if (h == LengthConstraintType.FIXED) {
                return arrangeRF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                return arrangeRR(container, g2, constraint);
            }
        }
        throw new RuntimeException("Unrecognised constraint type.");
=====================================================================
Found a 13 line (147 tokens) duplication in the following files: 
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testSetStartValue() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d1 = new DefaultIntervalCategoryDataset(
                new Comparable[] {"Series 1", "Series 2"},
                new Comparable[] {"Category 1", "Category 2", "Category 3"},
                DataUtils.createNumberArray2D(starts),
                DataUtils.createNumberArray2D(ends));
        d1.setStartValue(0, "Category 2", 99.9);
=====================================================================
Found a 26 line (145 tokens) duplication in the following files: 
Starting at line 701 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 361 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

                                this.itemMargin, dataArea,
                                plot.getDomainAxisEdge());
                    }
                    else {
                        x0 = domainAxis.getCategoryMiddle(column - 1,
                                getColumnCount(), dataArea,
                                plot.getDomainAxisEdge());
                    }
                    double y0 = rangeAxis.valueToJava2D(previous, dataArea,
                            plot.getRangeAxisEdge());

                    Line2D line = null;
                    if (orientation == PlotOrientation.HORIZONTAL) {
                        line = new Line2D.Double(y0, x0, y1, x1);
                    }
                    else if (orientation == PlotOrientation.VERTICAL) {
                        line = new Line2D.Double(x0, y0, x1, y1);
                    }
                    g2.setPaint(getItemPaint(row, column));
                    g2.setStroke(getItemStroke(row, column));
                    g2.draw(line);
                }
            }
        }

        if (pass == 1) {
=====================================================================
Found a 42 line (143 tokens) duplication in the following files: 
Starting at line 473 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 564 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Draws the axis on a Java 2D graphics device (such as the screen or a
     * printer).
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param cursor  the cursor location (determines where to draw the axis).
     * @param plotArea  the area within which the axes and plot should be drawn.
     * @param dataArea  the area within which the data should be drawn.
     * @param edge  the axis location ({@code null} not permitted).
     * @param plotState  collects information about the plot ({@code null} 
     *         permitted).
     *
     * @return The axis state (never {@code null}).
     */
    @Override
    public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,
            Rectangle2D dataArea, RectangleEdge edge,
            PlotRenderingInfo plotState) {

        AxisState state;
        // if the axis is not visible, don't draw it...
        if (!isVisible()) {
            state = new AxisState(cursor);
            // even though the axis is not visible, we need ticks for the
            // gridlines...
            List ticks = refreshTicks(g2, state, dataArea, edge);
            state.setTicks(ticks);
            return state;
        }
        state = drawTickMarksAndLabels(g2, cursor, plotArea, dataArea, edge);
        if (getAttributedLabel() != null) {
            state = drawAttributedLabel(getAttributedLabel(), g2, plotArea, 
                    dataArea, edge, state);
            
        } else {
            state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state);
        }
        createAndAddEntity(cursor, state, dataArea, edge, plotState);
        return state;
    }
=====================================================================
Found a 39 line (143 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

    public void paintBar(Graphics2D g2, BarRenderer renderer, int row,
            int column, RectangularShape bar, RectangleEdge base) {

        Paint itemPaint = renderer.getItemPaint(row, column);
        GradientPaintTransformer t = renderer.getGradientPaintTransformer();
        if (t != null && itemPaint instanceof GradientPaint) {
            itemPaint = t.transform((GradientPaint) itemPaint, bar);
        }
        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (renderer.isDrawBarOutline()) {
               // && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
=====================================================================
Found a 21 line (143 tokens) duplication in the following files: 
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 499 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

        double xx = domainAxis.valueToJava2D(x.doubleValue(), dataArea,
                plot.getDomainAxisEdge());

        RectangleEdge location = plot.getRangeAxisEdge();
        double yyMax = rangeAxis.valueToJava2D(yMax.doubleValue(), dataArea,
                location);
        double yyMin = rangeAxis.valueToJava2D(yMin.doubleValue(), dataArea,
                location);
        double yyMedian = rangeAxis.valueToJava2D(yMedian.doubleValue(),
                dataArea, location);
        double yyAverage = 0.0;
        if (yAverage != null) {
            yyAverage = rangeAxis.valueToJava2D(yAverage.doubleValue(),
                    dataArea, location);
        }
        double yyQ1Median = rangeAxis.valueToJava2D(yQ1Median.doubleValue(),
                dataArea, location);
        double yyQ3Median = rangeAxis.valueToJava2D(yQ3Median.doubleValue(),
                dataArea, location);

        double exactBoxWidth = getBoxWidth();
=====================================================================
Found a 12 line (143 tokens) duplication in the following files: 
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d1 = new DefaultIntervalCategoryDataset(
                new Comparable[] {"Series 1", "Series 2"},
                new Comparable[] {"Category 1", "Category 2", "Category 3"},
                DataUtils.createNumberArray2D(starts),
                DataUtils.createNumberArray2D(ends));
=====================================================================
Found a 11 line (143 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java

    public void testEquals() {

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
        s2.add(new Task("T1", new Date(1), new Date(2)));
        s2.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeriesCollection<String, String> c1 = new TaskSeriesCollection<>();
        c1.add(s1);
        c1.add(s2);
=====================================================================
Found a 19 line (142 tokens) duplication in the following files: 
Starting at line 3447 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 3473 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                        if (state.getProcessVisibleItemsOnly()) {
                            int[] itemBounds = RendererUtils.findLiveItems(
                                    dataset, series, xAxis.getLowerBound(),
                                    xAxis.getUpperBound());
                            firstItem = Math.max(itemBounds[0] - 1, 0);
                            lastItem = Math.min(itemBounds[1] + 1, lastItem);
                        }
                        state.startSeriesPass(dataset, series, firstItem,
                                lastItem, pass, passCount);
                        for (int item = firstItem; item <= lastItem; item++) {
                            renderer.drawItem(g2, state, dataArea, info,
                                    this, xAxis, yAxis, dataset, series, item,
                                    crosshairState, pass);
                        }
                        state.endSeriesPass(dataset, series, firstItem,
                                lastItem, pass, passCount);
                    }
                }
            }
=====================================================================
Found a 23 line (142 tokens) duplication in the following files: 
Starting at line 678 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java

                    ? state.getVisibleSeriesCount() : dataset.getRowCount();
            double space = 0.0;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
            double categoryMargin = 0.0;
            double currentItemMargin = 0.0;
            if (columns > 1) {
                categoryMargin = domainAxis.getCategoryMargin();
            }
            if (rows > 1) {
                currentItemMargin = getItemMargin();
            }
            double used = space * (1 - domainAxis.getLowerMargin()
                                     - domainAxis.getUpperMargin()
                                     - categoryMargin - currentItemMargin);
            if ((rows * columns) > 0) {
                state.setBarWidth(Math.min(used / (rows * columns), maxWidth));
=====================================================================
Found a 43 line (142 tokens) duplication in the following files: 
Starting at line 687 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

            double maxWidth = space * getMaximumBarWidth();
            double categoryMargin = 0.0;
            double currentItemMargin = 0.0;
            if (columns > 1) {
                categoryMargin = domainAxis.getCategoryMargin();
            }
            if (rows > 1) {
                currentItemMargin = getItemMargin();
            }
            double used = space * (1 - domainAxis.getLowerMargin()
                                     - domainAxis.getUpperMargin()
                                     - categoryMargin - currentItemMargin);
            if ((rows * columns) > 0) {
                state.setBarWidth(Math.min(used / (rows * columns), maxWidth));
            }
            else {
                state.setBarWidth(Math.min(used, maxWidth));
            }
        }
    }

    /**
     * Calculates the coordinate of the first "side" of a bar.  This will be
     * the minimum x-coordinate for a vertical bar, and the minimum
     * y-coordinate for a horizontal bar.
     *
     * @param plot  the plot.
     * @param orientation  the plot orientation.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param state  the renderer state (has the bar width precalculated).
     * @param row  the row index.
     * @param column  the column index.
     *
     * @return The coordinate.
     */
    protected double calculateBarW0(CategoryPlot plot, 
            PlotOrientation orientation, Rectangle2D dataArea, 
            CategoryAxis domainAxis, CategoryItemRendererState state,
            int row, int column) {
        // calculate bar width...
        double space;
        if (orientation == PlotOrientation.HORIZONTAL) {
=====================================================================
Found a 25 line (142 tokens) duplication in the following files: 
Starting at line 292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 302 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java

        if (value > 0.0) {
            translatedBase = rangeAxis.valueToJava2D(positiveBase, dataArea,
                    location);
            translatedValue = rangeAxis.valueToJava2D(positiveBase + value,
                    dataArea, location);
        }
        else {
            translatedBase = rangeAxis.valueToJava2D(negativeBase, dataArea,
                    location);
            translatedValue = rangeAxis.valueToJava2D(negativeBase + value,
                    dataArea, location);
        }
        double barL0 = Math.min(translatedBase, translatedValue);
        double barLength = Math.max(Math.abs(translatedValue - translatedBase),
                getMinimumBarLength());

        Rectangle2D bar;
        if (orientation == PlotOrientation.HORIZONTAL) {
            bar = new Rectangle2D.Double(barL0, barW0, barLength,
                    state.getBarWidth());
        }
        else {
            bar = new Rectangle2D.Double(barW0, barL0, state.getBarWidth(),
                    barLength);
        }
=====================================================================
Found a 21 line (142 tokens) duplication in the following files: 
Starting at line 331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

    public void drawHorizontalItem(Graphics2D g2, Rectangle2D dataArea,
            PlotRenderingInfo info, XYPlot plot, ValueAxis domainAxis,
            ValueAxis rangeAxis, XYDataset dataset, int series,
            int item, CrosshairState crosshairState, int pass) {

        // setup for collecting optional entity info...
        EntityCollection entities = null;
        if (info != null) {
            entities = info.getOwner().getEntityCollection();
        }

        BoxAndWhiskerXYDataset boxAndWhiskerData
                = (BoxAndWhiskerXYDataset) dataset;

        Number x = boxAndWhiskerData.getX(series, item);
        Number yMax = boxAndWhiskerData.getMaxRegularValue(series, item);
        Number yMin = boxAndWhiskerData.getMinRegularValue(series, item);
        Number yMedian = boxAndWhiskerData.getMedianValue(series, item);
        Number yAverage = boxAndWhiskerData.getMeanValue(series, item);
        Number yQ1Median = boxAndWhiskerData.getQ1Value(series, item);
        Number yQ3Median = boxAndWhiskerData.getQ3Value(series, item);
=====================================================================
Found a 50 line (142 tokens) duplication in the following files: 
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

                "The 'data' array must contain two arrays with equal length.");
        }
        int seriesIndex = indexOf(seriesKey);
        if (seriesIndex == -1) {  // add a new series
            this.seriesKeys.add(seriesKey);
            this.seriesList.add(data);
        }
        else {  // replace an existing series
            this.seriesList.remove(seriesIndex);
            this.seriesList.add(seriesIndex, data);
        }
        notifyListeners(new DatasetChangeEvent(this, this));
    }

    /**
     * Removes a series from the dataset, then sends a
     * {@link DatasetChangeEvent} to all registered listeners.
     *
     * @param seriesKey  the series key ({@code null} not permitted).
     *
     */
    public void removeSeries(S seriesKey) {
        int seriesIndex = indexOf(seriesKey);
        if (seriesIndex >= 0) {
            this.seriesKeys.remove(seriesIndex);
            this.seriesList.remove(seriesIndex);
            notifyListeners(new DatasetChangeEvent(this, this));
        }
    }

    /**
     * Tests this {@code DefaultXYDataset} instance for equality with an
     * arbitrary object.  This method returns {@code true} if and only if:
     * <ul>
     * <li>{@code obj} is not {@code null};</li>
     * <li>{@code obj} is an instance of {@code DefaultXYDataset};</li>
     * <li>both datasets have the same number of series, each containing
     *         exactly the same values.</li>
     * </ul>
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof DefaultXYDataset)) {
=====================================================================
Found a 15 line (141 tokens) duplication in the following files: 
Starting at line 1336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

            TextUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle(), TextAnchor.CENTER);
            state.cursorUp(insets.getTop() + labelBounds.getHeight()
                    + insets.getBottom());
        }
        else if (edge == RectangleEdge.BOTTOM) {
            AffineTransform t = AffineTransform.getRotateInstance(
                    getLabelAngle(), labelBounds.getCenterX(),
                    labelBounds.getCenterY());
            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
            labelBounds = rotatedLabelBounds.getBounds2D();
            double labelx = labelLocationX(this.labelLocation, dataArea);
            double labely = state.getCursor()
                            + insets.getTop() + labelBounds.getHeight() / 2.0;
            TextAnchor anchor = labelAnchorH(this.labelLocation);
=====================================================================
Found a 31 line (141 tokens) duplication in the following files: 
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 381 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

        m = new Millisecond(999, 59, 59, 23, 31, 12, 9999);
        assertNull(m.next());
    }

    /**
     * If a thread-local calendar was set, next() and previous() should use its time zone.
     */
    @Test
    public void testNextPreviousWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, next() should use its time zone.
     */
    @Test
    public void testNextPreviousWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    private void testNextPreviousWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
=====================================================================
Found a 18 line (139 tokens) duplication in the following files: 
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("Series 1");
        s1.add(1.0, 1.0, 1.0, 1.0);
        s1.add(2.0, 2.0, 2.0, 2.0);
        s1.add(2.0, 3.0, 3.0, 3.0);
        s1.add(2.0, 4.0, 4.0, 4.0);
        s1.add(3.0, 5.0, 5.0, 5.0);
        assertEquals(1.0, s1.getYValue(0), EPSILON);
        assertEquals(2.0, s1.getYValue(1), EPSILON);
        assertEquals(3.0, s1.getYValue(2), EPSILON);
        assertEquals(4.0, s1.getYValue(3), EPSILON);
        assertEquals(5.0, s1.getYValue(4), EPSILON);
    }

    /**
     * Some checks for the add() method for an UNSORTED series.
     */
    @Test
    public void testAdd() {
=====================================================================
Found a 24 line (138 tokens) duplication in the following files: 
Starting at line 1042 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                        dataArea.getHeight());
            }

            final Composite originalComposite = g2.getComposite();
            g2.setComposite(AlphaComposite.getInstance(
                    AlphaComposite.SRC_OVER, marker.getAlpha()));
            Paint p = marker.getPaint();
            if (p instanceof GradientPaint) {
                GradientPaint gp = (GradientPaint) p;
                GradientPaintTransformer t = im.getGradientPaintTransformer();
                if (t != null) {
                    gp = t.transform(gp, rect);
                }
                g2.setPaint(gp);
            } else {
                g2.setPaint(p);
            }
            g2.fill(rect);

            // now draw the outlines, if visible...
            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {
                if (orientation == PlotOrientation.VERTICAL) {
                    Line2D line = new Line2D.Double();
                    double y0 = dataArea.getMinY();
=====================================================================
Found a 20 line (138 tokens) duplication in the following files: 
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java
Starting at line 870 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();

        // get the data point...
        double x1 = dataset.getXValue(series, item);
        double y1 = dataset.getYValue(series, item);
        double transX1 = domainAxis.valueToJava2D(x1, dataArea, xAxisLocation);
        double transY1 = rangeAxis.valueToJava2D(y1, dataArea, yAxisLocation);

        State s = (State) state;
        // update path to reflect latest point
        if (!Double.isNaN(transX1) && !Double.isNaN(transY1)) {
            float x = (float) transX1;
            float y = (float) transY1;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                x = (float) transY1;
                y = (float) transX1;
            }
            if (s.lastPointGood) {
=====================================================================
Found a 38 line (138 tokens) duplication in the following files: 
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
                = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<String, String> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }

    /**
     * Create a Gantt chart.
     *
     * @return The chart.
     */
    private static JFreeChart createGanttChart() {
=====================================================================
Found a 49 line (136 tokens) duplication in the following files: 
Starting at line 596 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 713 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writePaint(this.backgroundPaint, stream);
        SerialUtils.writePaint(this.outlinePaint, stream);
        SerialUtils.writeStroke(this.outlineStroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
        this.backgroundPaint = SerialUtils.readPaint(stream);
        this.outlinePaint = SerialUtils.readPaint(stream);
        this.outlineStroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 24 line (136 tokens) duplication in the following files: 
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/BoxAndWhiskerToolTipGenerator.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGenerator.java

                = (BoxAndWhiskerCategoryDataset) dataset;
            result[2] = formatter.format(d.getMeanValue(series, item));
            result[3] = formatter.format(d.getMedianValue(series, item));
            result[4] = formatter.format(d.getMinRegularValue(series, item));
            result[5] = formatter.format(d.getMaxRegularValue(series, item));
            result[6] = formatter.format(d.getQ1Value(series, item));
            result[7] = formatter.format(d.getQ3Value(series, item));
        }
        return result;
    }

    /**
     * Tests if this object is equal to another.
     *
     * @param obj  the other object.
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj instanceof BoxAndWhiskerToolTipGenerator) {
=====================================================================
Found a 32 line (136 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java

        this.chart = createAreaChart();
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
                = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }
=====================================================================
Found a 32 line (136 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertEquals(951822000000L, m2.getFirstMillisecond(cal));

    }

    /**
     * If a thread-local calendar was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    private void testDateConstructorWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
            long ms = -3_600_000L * hoursOffset;
=====================================================================
Found a 71 line (135 tokens) duplication in the following files: 
Starting at line 674 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 332 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        XYToolTipGenerator generator = this.toolTipGeneratorMap.get(series);
        if (generator == null) {
            generator = this.defaultToolTipGenerator;
        }
        return generator;
    }

    /**
     * Returns the tool tip generator for the specified series.
     * 
     * @return The tooltip generator (possibly {@code null}).
     */
    @Override
    public XYToolTipGenerator getSeriesToolTipGenerator(int series) {
        return this.toolTipGeneratorMap.get(series);
    }

    /**
     * Sets the tooltip generator for the specified series.
     * 
     * @param series  the series index.
     * @param generator  the tool tip generator ({@code null} permitted).
     */
    @Override
    public void setSeriesToolTipGenerator(int series, XYToolTipGenerator generator) {
        this.toolTipGeneratorMap.put(series, generator);
        fireChangeEvent();
    }

    /**
     * Returns the default tool tip generator.
     * 
     * @return The default tool tip generator (possibly {@code null}).
     */
    @Override
    public XYToolTipGenerator getDefaultToolTipGenerator() {
        return this.defaultToolTipGenerator;
    }

    /**
     * Sets the default tool tip generator and sends a 
     * {@link RendererChangeEvent} to all registered listeners.
     * 
     * @param generator  the generator ({@code null} permitted).
     */
    @Override
    public void setDefaultToolTipGenerator(XYToolTipGenerator generator) {
        this.defaultToolTipGenerator = generator;
        fireChangeEvent();
    }

    /**
     * Returns the URL generator.
     * 
     * @return The URL generator (possibly {@code null}).
     */
    @Override
    public XYURLGenerator getURLGenerator() {
        return this.urlGenerator;
    }

    /**
     * Sets the URL generator.
     * 
     * @param urlGenerator  the generator ({@code null} permitted)
     */
    @Override
    public void setURLGenerator(XYURLGenerator urlGenerator) {
        this.urlGenerator = urlGenerator;
        fireChangeEvent();
    }
=====================================================================
Found a 101 line (135 tokens) duplication in the following files: 
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultCategoryDataset.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/TestIntervalCategoryDataset.java

        return this.data.getValue(row, column);
    }

    /**
     * Returns the key for the specified row.
     *
     * @param row  the row index (zero-based).
     *
     * @return The row key.
     *
     * @see #getRowIndex(Comparable)
     * @see #getRowKeys()
     * @see #getColumnKey(int)
     */
    @Override
    public R getRowKey(int row) {
        return this.data.getRowKey(row);
    }

    /**
     * Returns the row index for a given key.
     *
     * @param key  the row key ({@code null} not permitted).
     *
     * @return The row index.
     *
     * @see #getRowKey(int)
     */
    @Override
    public int getRowIndex(R key) {
        // defer null argument check
        return this.data.getRowIndex(key);
    }

    /**
     * Returns the row keys.
     *
     * @return The keys.
     *
     * @see #getRowKey(int)
     */
    @Override
    public List<R> getRowKeys() {
        return this.data.getRowKeys();
    }

    /**
     * Returns a column key.
     *
     * @param column  the column index (zero-based).
     *
     * @return The column key.
     *
     * @see #getColumnIndex(Comparable)
     */
    @Override
    public C getColumnKey(int column) {
        return this.data.getColumnKey(column);
    }

    /**
     * Returns the column index for a given key.
     *
     * @param key  the column key ({@code null} not permitted).
     *
     * @return The column index.
     *
     * @see #getColumnKey(int)
     */
    @Override
    public int getColumnIndex(C key) {
        // defer null argument check
        return this.data.getColumnIndex(key);
    }

    /**
     * Returns the column keys.
     *
     * @return The keys.
     *
     * @see #getColumnKey(int)
     */
    @Override
    public List<C> getColumnKeys() {
        return this.data.getColumnKeys();
    }

    /**
     * Returns the value for a pair of keys.
     *
     * @param rowKey  the row key ({@code null} not permitted).
     * @param columnKey  the column key ({@code null} not permitted).
     *
     * @return The value (possibly {@code null}).
     *
     * @throws UnknownKeyException if either key is not defined in the dataset.
     *
     * @see #addValue(Number, Comparable, Comparable)
     */
    @Override
    public Number getValue(R rowKey, C columnKey) {
=====================================================================
Found a 31 line (135 tokens) duplication in the following files: 
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 381 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 509 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        m = new Millisecond(999, 59, 59, 23, 31, 12, 9999);
        assertNull(m.next());
    }

    /**
     * If a thread-local calendar was set, next() and previous() should use its time zone.
     */
    @Test
    public void testNextPreviousWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, next() should use its time zone.
     */
    @Test
    public void testNextPreviousWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    private void testNextPreviousWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
=====================================================================
Found a 31 line (135 tokens) duplication in the following files: 
Starting at line 510 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 533 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertNull(m.next());
    }

    /**
     * If a thread-local calendar was set, next() and previous() should use its time zone.
     */
    @Test
    public void testNextPreviousWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, next() should use its time zone.
     */
    @Test
    public void testNextPreviousWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    private void testNextPreviousWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
            long ms = -hoursOffset * 3_600_000L;
=====================================================================
Found a 29 line (134 tokens) duplication in the following files: 
Starting at line 1311 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1363 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

        if (isVerticalTickLabels()) {
            // all tick labels have the same width (equal to the height of
            // the font)...
            result += lm.getHeight();
        }
        else {
            // look at lower and upper bounds...
            DateRange range = (DateRange) getRange();
            Date lower = range.getLowerDate();
            Date upper = range.getUpperDate();
            String lowerStr, upperStr;
            DateFormat formatter = getDateFormatOverride();
            if (formatter != null) {
                lowerStr = formatter.format(lower);
                upperStr = formatter.format(upper);
            }
            else {
                lowerStr = unit.dateToString(lower);
                upperStr = unit.dateToString(upper);
            }
            FontMetrics fm = g2.getFontMetrics(tickLabelFont);
            double w1 = fm.stringWidth(lowerStr);
            double w2 = fm.stringWidth(upperStr);
            result += Math.max(w1, w2);
        }

        return result;

    }
=====================================================================
Found a 47 line (133 tokens) duplication in the following files: 
Starting at line 488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 502 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        result = 37 * result + this.arrowStroke.hashCode();
        temp = Double.doubleToLongBits(this.labelOffset);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.arrowPaint, stream);
        SerialUtils.writeStroke(this.arrowStroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.arrowPaint = SerialUtils.readPaint(stream);
        this.arrowStroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 96 line (133 tokens) duplication in the following files: 
Starting at line 246 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        fireChangeEvent();
    }

    // SHAPES VISIBLE

    /**
     * Returns the flag used to control whether or not the shape for an item is
     * visible.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return A boolean.
     */
    public boolean getItemShapeVisible(int series, int item) {
        Boolean flag = getSeriesShapesVisible(series);
        if (flag != null) {
            return flag;
        }
        return this.defaultShapesVisible;
    }

    /**
     * Returns the flag used to control whether or not the shapes for a series
     * are visible.
     *
     * @param series  the series index (zero-based).
     *
     * @return A boolean.
     *
     * @see #setSeriesShapesVisible(int, Boolean)
     */
    public Boolean getSeriesShapesVisible(int series) {
        return this.seriesShapesVisibleMap.get(series);
    }

    /**
     * Sets the 'shapes visible' flag for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag.
     *
     * @see #getSeriesShapesVisible(int)
     */
    public void setSeriesShapesVisible(int series, boolean visible) {
        setSeriesShapesVisible(series, Boolean.valueOf(visible));
    }

    /**
     * Sets the 'shapes visible' flag for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param flag  the flag.
     *
     * @see #getSeriesShapesVisible(int)
     */
    public void setSeriesShapesVisible(int series, Boolean flag) {
        this.seriesShapesVisibleMap.put(series, flag);
        fireChangeEvent();
    }

    /**
     * Returns the default 'shape visible' attribute.
     *
     * @return The base flag.
     *
     * @see #setDefaultShapesVisible(boolean)
     */
    public boolean getDefaultShapesVisible() {
        return this.defaultShapesVisible;
    }

    /**
     * Sets the default 'shapes visible' flag and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param flag  the flag.
     *
     * @see #getDefaultShapesVisible()
     */
    public void setDefaultShapesVisible(boolean flag) {
        this.defaultShapesVisible = flag;
        fireChangeEvent();
    }

    /**
     * Returns {@code true} if outlines should be drawn for shapes, and
     * {@code false} otherwise.
     *
     * @return A boolean.
     *
     * @see #setDrawOutlines(boolean)
     */
    public boolean getDrawOutlines() {
=====================================================================
Found a 15 line (133 tokens) duplication in the following files: 
Starting at line 882 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 956 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateSecondA() {
        MyDateAxis axis = new MyDateAxis("Second");
        Second s0 = new Second(58, 31, 12, 1, 4, 2007);
        Second s1 = new Second(59, 31, 12, 1, 4, 2007);

        // five dates to check...
        Date d0 = new Date(s0.getFirstMillisecond());
        Date d1 = new Date(s0.getFirstMillisecond() + 50L);
        Date d2 = new Date(s0.getMiddleMillisecond());
        Date d3 = new Date(s0.getMiddleMillisecond() + 50L);
        Date d4 = new Date(s0.getLastMillisecond());

        Date end = new Date(s1.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.SECOND, 1);
=====================================================================
Found a 81 line (132 tokens) duplication in the following files: 
Starting at line 310 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultCategoryDataset.java
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/TestIntervalCategoryDataset.java

        this.data.removeValue(rowKey, columnKey);
        fireDatasetChanged();
    }

    /**
     * Removes a row from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param rowIndex  the row index.
     *
     * @see #removeColumn(int)
     */
    public void removeRow(int rowIndex) {
        this.data.removeRow(rowIndex);
        fireDatasetChanged();
    }

    /**
     * Removes a row from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param rowKey  the row key.
     *
     * @see #removeColumn(Comparable)
     */
    public void removeRow(R rowKey) {
        this.data.removeRow(rowKey);
        fireDatasetChanged();
    }

    /**
     * Removes a column from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param columnIndex  the column index.
     *
     * @see #removeRow(int)
     */
    public void removeColumn(int columnIndex) {
        this.data.removeColumn(columnIndex);
        fireDatasetChanged();
    }

    /**
     * Removes a column from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param columnKey  the column key ({@code null} not permitted).
     *
     * @see #removeRow(Comparable)
     *
     * @throws UnknownKeyException if {@code columnKey} is not defined
     *         in the dataset.
     */
    public void removeColumn(C columnKey) {
        this.data.removeColumn(columnKey);
        fireDatasetChanged();
    }

    /**
     * Clears all data from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     */
    public void clear() {
        this.data.clear();
        fireDatasetChanged();
    }

    /**
     * Tests this dataset for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof CategoryDataset)) {
=====================================================================
Found a 31 line (132 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertEquals(1078092000000L, d2.getFirstMillisecond(cal));
    }

    /**
     * If a thread-local calendar was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    private void testDateConstructorWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
            long ms = 86_400_000L - 3_600_000L * hoursOffset;
=====================================================================
Found a 25 line (131 tokens) duplication in the following files: 
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/TickLabelEntityTest.java

        e2 = new CategoryLabelEntity<>("B", new Rectangle2D.Double(1.0, 2.0,
                3.0, 4.0), "ToolTip", "URL");
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 31 line (131 tokens) duplication in the following files: 
Starting at line 482 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 510 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 533 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertNull(d.next());
    }

    /**
     * If a thread-local calendar was set, next() and previous() should use its time zone.
     */
    @Test
    public void testNextPreviousWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, next() should use its time zone.
     */
    @Test
    public void testNextPreviousWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    private void testNextPreviousWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
            long ms = 86_400_000L - hoursOffset * 3_600_000L;
=====================================================================
Found a 30 line (131 tokens) duplication in the following files: 
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        assertEquals(1016722559123L, m2.getFirstMillisecond(cal));
    }

    /**
     * If a thread-local calendar was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    private void testDateConstructorWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
=====================================================================
Found a 20 line (130 tokens) duplication in the following files: 
Starting at line 3346 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2955 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        }
        if (rangeAxisState != null) {
            drawRangeGridlines(g2, dataArea, rangeAxisState.getTicks());
            drawZeroRangeBaseline(g2, dataArea);
        }

        Graphics2D savedG2 = g2;
        BufferedImage dataImage = null;
        boolean suppressShadow = Boolean.TRUE.equals(g2.getRenderingHint(
                JFreeChart.KEY_SUPPRESS_SHADOW_GENERATION));
        if (this.shadowGenerator != null && !suppressShadow) {
            dataImage = new BufferedImage((int) dataArea.getWidth(),
                    (int)dataArea.getHeight(), BufferedImage.TYPE_INT_ARGB);
            g2 = dataImage.createGraphics();
            g2.translate(-dataArea.getX(), -dataArea.getY());
            g2.setRenderingHints(savedG2.getRenderingHints());
        }

        // draw the markers...
        for (CategoryItemRenderer renderer : this.renderers.values()) {
=====================================================================
Found a 34 line (130 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java

        calendar.setTime(time);

        // sometimes the last few days of the year are considered to fall in
        // the *first* week of the following year.  Refer to the Javadocs for
        // GregorianCalendar.
        int tempWeek = calendar.get(Calendar.WEEK_OF_YEAR);
        if (tempWeek == 1
                && calendar.get(Calendar.MONTH) == Calendar.DECEMBER) {
            this.week = 1;
            this.year = (short) (calendar.get(Calendar.YEAR) + 1);
        }
        else {
            this.week = (byte) Math.min(tempWeek, LAST_WEEK_IN_YEAR);
            int yyyy = calendar.get(Calendar.YEAR);
            // alternatively, sometimes the first few days of the year are
            // considered to fall in the *last* week of the previous year...
            if (calendar.get(Calendar.MONTH) == Calendar.JANUARY
                    && this.week >= 52) {
                yyyy--;
            }
            this.year = (short) yyyy;
        }
        peg(calendar);
    }

    /**
     * Constructs a new instance, based on a particular date/time.
     * The time zone and locale are determined by the {@code calendar}
     * parameter.
     *
     * @param time the date/time ({@code null} not permitted).
     * @param calendar the calendar to use for calculations ({@code null} not permitted).
     */
    public Week(Date time, Calendar calendar) {
=====================================================================
Found a 22 line (130 tokens) duplication in the following files: 
Starting at line 202 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java

    public void testXYAutoRange1() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
        LogAxis axis = new LogAxis("Log(Y)");
        plot.setRangeAxis(axis);
        assertEquals(0.9465508226401592, axis.getLowerBound(), EPSILON);
        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);
    }

    /**
     * Checks that the auto-range for the range axis on an XYPlot is
     * working as expected.
     */
    @Test
    public void testXYAutoRange2() {
=====================================================================
Found a 46 line (129 tokens) duplication in the following files: 
Starting at line 815 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 674 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Estimates the maximum tick label height.
     *
     * @param g2  the graphics device.
     *
     * @return The maximum height.
     */
    protected double estimateMaximumTickLabelHeight(Graphics2D g2) {
        RectangleInsets tickLabelInsets = getTickLabelInsets();
        double result = tickLabelInsets.getTop() + tickLabelInsets.getBottom();

        Font tickLabelFont = getTickLabelFont();
        FontRenderContext frc = g2.getFontRenderContext();
        result += tickLabelFont.getLineMetrics("123", frc).getHeight();
        return result;
    }

    /**
     * Estimates the maximum width of the tick labels, assuming the specified
     * tick unit is used.
     * <P>
     * Rather than computing the string bounds of every tick on the axis, we
     * just look at two values: the lower bound and the upper bound for the
     * axis.  These two values will usually be representative.
     *
     * @param g2  the graphics device.
     * @param unit  the tick unit to use for calculation.
     *
     * @return The estimated maximum width of the tick labels.
     */
    protected double estimateMaximumTickLabelWidth(Graphics2D g2, 
            TickUnit unit) {

        RectangleInsets tickLabelInsets = getTickLabelInsets();
        double result = tickLabelInsets.getLeft() + tickLabelInsets.getRight();

        if (isVerticalTickLabels()) {
            // all tick labels have the same width (equal to the height of the
            // font)...
            FontRenderContext frc = g2.getFontRenderContext();
            LineMetrics lm = getTickLabelFont().getLineMetrics("0", frc);
            result += lm.getHeight();
        }
        else {
=====================================================================
Found a 29 line (129 tokens) duplication in the following files: 
Starting at line 2451 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2448 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        Collection<Marker> markers;
        if (layer == Layer.FOREGROUND) {
            markers = this.foregroundRangeMarkers.get(index);
            if (markers == null) {
                markers = new ArrayList<>();
                this.foregroundRangeMarkers.put(index, markers);
            }
            markers.add(marker);
        } else if (layer == Layer.BACKGROUND) {
            markers = this.backgroundRangeMarkers.get(index);
            if (markers == null) {
                markers = new ArrayList<>();
                this.backgroundRangeMarkers.put(index, markers);
            }
            markers.add(marker);
        }
        marker.addChangeListener(this);
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Clears all the range markers for the plot and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @see #clearDomainMarkers()
     */
    public void clearRangeMarkers() {
=====================================================================
Found a 98 line (129 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 209 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

    }

    // LINES VISIBLE

    /**
     * Returns the flag used to control whether or not the line for an item is
     * visible.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return A boolean.
     */
    public boolean getItemLineVisible(int series, int item) {
        Boolean flag = getSeriesLinesVisible(series);
        if (flag != null) {
            return flag;
        }
        return this.defaultLinesVisible;
    }

    /**
     * Returns the flag used to control whether or not the lines for a series
     * are visible.
     *
     * @param series  the series index (zero-based).
     *
     * @return The flag (possibly {@code null}).
     *
     * @see #setSeriesLinesVisible(int, Boolean)
     */
    public Boolean getSeriesLinesVisible(int series) {
        return this.seriesLinesVisibleMap.get(series);
    }

    /**
     * Sets the 'lines visible' flag for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param flag  the flag ({@code null} permitted).
     *
     * @see #getSeriesLinesVisible(int)
     */
    public void setSeriesLinesVisible(int series, Boolean flag) {
        this.seriesLinesVisibleMap.put(series, flag);
        fireChangeEvent();
    }

    /**
     * Sets the 'lines visible' flag for a series and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag.
     *
     * @see #getSeriesLinesVisible(int)
     */
    public void setSeriesLinesVisible(int series, boolean visible) {
        setSeriesLinesVisible(series, Boolean.valueOf(visible));
    }

    /**
     * Returns the default 'lines visible' attribute.
     *
     * @return The default flag.
     *
     * @see #getDefaultLinesVisible()
     */
    public boolean getDefaultLinesVisible() {
        return this.defaultLinesVisible;
    }

    /**
     * Sets the default 'lines visible' flag and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param flag  the flag.
     *
     * @see #getDefaultLinesVisible()
     */
    public void setDefaultLinesVisible(boolean flag) {
        this.defaultLinesVisible = flag;
        fireChangeEvent();
    }

    // SHAPES VISIBLE

    /**
     * Returns the flag used to control whether or not the shape for an item is
     * visible.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return A boolean.
     */
    public boolean getItemShapeVisible(int series, int item) {
=====================================================================
Found a 29 line (129 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryAxisTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/ExtendedCategoryAxisTest.java

        CategoryAxis a2 = (CategoryAxis) a1.clone();
        assertNotSame(a1, a2);
        assertSame(a1.getClass(), a2.getClass());
        assertEquals(a1, a2);

        // check that changing a tick label font in a1 doesn't change a2
        a1.setTickLabelFont("C1", null);
        assertNotEquals(a1, a2);
        a2.setTickLabelFont("C1", null);
        assertEquals(a1, a2);

        // check that changing a tick label paint in a1 doesn't change a2
        a1.setTickLabelPaint("C1", Color.YELLOW);
        assertNotEquals(a1, a2);
        a2.setTickLabelPaint("C1", Color.YELLOW);
        assertEquals(a1, a2);

        // check that changing a category label tooltip in a1 doesn't change a2
        a1.addCategoryLabelToolTip("C1", "XYZ");
        assertNotEquals(a1, a2);
        a2.addCategoryLabelToolTip("C1", "XYZ");
        assertEquals(a1, a2);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
=====================================================================
Found a 9 line (129 tokens) duplication in the following files: 
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 329 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        DefaultIntervalXYDataset<String> d = new DefaultIntervalXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
=====================================================================
Found a 18 line (129 tokens) duplication in the following files: 
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

        d2.setMaximumCategoryCount(99);
        assertEquals(d1, d2);

        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertNotEquals(d1, d2);
        s2.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertEquals(d1, d2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 30 line (129 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertEquals(1078092000000L, d2.getFirstMillisecond(cal));
    }

    /**
     * If a thread-local calendar was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, the Date constructor should use it.
     */
    @Test
    public void testDateConstructorWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testDateConstructorWithCustomCalendar(3, calendarSetup);
        testDateConstructorWithCustomCalendar(4, calendarSetup);
    }

    private void testDateConstructorWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
=====================================================================
Found a 20 line (129 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            Second s = new Second(new Date(0L));
            assertEquals(1970, s.getMinute().getHour().getYear());
            assertEquals(1, s.getMinute().getHour().getMonth());
            assertEquals(1, s.getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, s.getMinute().getHour().getHour());
            assertEquals(0, s.getMinute().getMinute());
            assertEquals(0, s.getSecond());
            assertEquals(0L, s.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the second-minute constructor should use it.
     */
    @Test
    public void testSecondMinuteConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 11 line (128 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
        assertEquals(0.9, r.getLowerBound(), EPSILON);
=====================================================================
Found a 30 line (128 tokens) duplication in the following files: 
Starting at line 482 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 429 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 414 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 510 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 533 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 387 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertNull(d.next());
    }

    /**
     * If a thread-local calendar was set, next() and previous() should use its time zone.
     */
    @Test
    public void testNextPreviousWithThreadLocalCalendar() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setThreadLocalCalendarInstance(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    /**
     * If a calendar prototype was set, next() should use its time zone.
     */
    @Test
    public void testNextPreviousWithCalendarPrototype() {
        Consumer<Integer> calendarSetup = hours -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)))
        );
        testNextPreviousWithCustomCalendar(3, calendarSetup);
        testNextPreviousWithCustomCalendar(4, calendarSetup);
    }

    private void testNextPreviousWithCustomCalendar(int hoursOffset, Consumer<Integer> calendarSetup) {
        try {
            calendarSetup.accept(hoursOffset);
=====================================================================
Found a 20 line (128 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            Second s = new Second(new Date(0L));
            assertEquals(1970, s.getMinute().getHour().getYear());
            assertEquals(1, s.getMinute().getHour().getMonth());
            assertEquals(1, s.getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, s.getMinute().getHour().getHour());
            assertEquals(0, s.getMinute().getMinute());
            assertEquals(0, s.getSecond());
            assertEquals(0L, s.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the second-minute constructor should use it.
     */
    @Test
    public void testSecondMinuteConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 47 line (127 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java

    }

    /**
     * Adds a block to be managed by this instance.  This method is usually
     * called by the {@link BlockContainer}, you shouldn't need to call it
     * directly.
     *
     * @param block  the block.
     * @param key  a key that controls the position of the block.
     */
    @Override
    public void add(Block block, Object key) {
        // since the flow layout is relatively straightforward,
        // no information needs to be recorded here
    }

    /**
     * Calculates and sets the bounds of all the items in the specified
     * container, subject to the given constraint.  The {@code Graphics2D}
     * can be used by some items (particularly items containing text) to
     * calculate sizing parameters.
     *
     * @param container  the container whose items are being arranged.
     * @param g2  the graphics device.
     * @param constraint  the size constraint.
     *
     * @return The size of the container after arrangement of the contents.
     */
    @Override
    public Size2D arrange(BlockContainer container, Graphics2D g2,
                          RectangleConstraint constraint) {

        LengthConstraintType w = constraint.getWidthConstraintType();
        LengthConstraintType h = constraint.getHeightConstraintType();
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
=====================================================================
Found a 58 line (127 tokens) duplication in the following files: 
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                    this.subplotArea[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the parent state.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);

        // calculate the data area...
        AxisSpace space = calculateAxisSpace(g2, area);
        Rectangle2D dataArea = space.shrink(area, null);

        // set the width and height of non-shared axis of all sub-plots
        setFixedDomainAxisSpaceForSubplots(space);

        // draw the shared axis
        ValueAxis axis = getRangeAxis();
        RectangleEdge rangeEdge = getRangeAxisEdge();
=====================================================================
Found a 19 line (127 tokens) duplication in the following files: 
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 253 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

        float transY1;

        RectangleEdge edge1 = plot.getRangeAxisEdge();

        GeneralPath left = new GeneralPath();
        GeneralPath right = new GeneralPath();
        if (y1 >= 0.0) {  // handle positive value
            transY1 = (float) rangeAxis.valueToJava2D(y1 + stack1[1], dataArea,
                    edge1);
            float transStack1 = (float) rangeAxis.valueToJava2D(stack1[1],
                    dataArea, edge1);
            float transStackLeft = (float) rangeAxis.valueToJava2D(
                    adjStackLeft[1], dataArea, edge1);

            // LEFT POLYGON
            if (y0 >= 0.0) {
                double yleft = (y0 + y1) / 2.0 + stackLeft[1];
                float transYLeft
                    = (float) rangeAxis.valueToJava2D(yleft, dataArea, edge1);
=====================================================================
Found a 17 line (127 tokens) duplication in the following files: 
Starting at line 191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYTitleAnnotationTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepAreaRendererTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java

    public void testDrawWithNullInfo() {
        try {
            DefaultTableXYDataset<String> dataset = new DefaultTableXYDataset<>();

            XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
            s1.add(5.0, 5.0);
            s1.add(10.0, 15.5);
            s1.add(15.0, 9.5);
            s1.add(20.0, 7.5);
            dataset.addSeries(s1);

            XYSeries<String> s2 = new XYSeries<>("Series 2", true, false);
            s2.add(5.0, 5.0);
            s2.add(10.0, 15.5);
            s2.add(15.0, 9.5);
            s2.add(20.0, 3.5);
            dataset.addSeries(s2);
=====================================================================
Found a 21 line (127 tokens) duplication in the following files: 
Starting at line 349 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/MarkerTest.java
Starting at line 373 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/MarkerTest.java

        ValueMarker marker2 = new ValueMarker(1.0);
        plot.addDomainMarker(marker1);
        plot.addRangeMarker(marker2);
        EventListener[] listeners1 = marker1.getListeners(
                MarkerChangeListener.class);
        assertTrue(Arrays.asList(listeners1).contains(plot));
        EventListener[] listeners2 = marker1.getListeners(
                MarkerChangeListener.class);
        assertTrue(Arrays.asList(listeners2).contains(plot));
        plot.clearDomainMarkers();
        plot.clearRangeMarkers();
        listeners1 = marker1.getListeners(MarkerChangeListener.class);
        assertFalse(Arrays.asList(listeners1).contains(plot));
        listeners2 = marker1.getListeners(MarkerChangeListener.class);
        assertFalse(Arrays.asList(listeners2).contains(plot));
    }

    /**
     * Checks that an XYPlot deregisters listeners when clearing markers.
     */
    @Test
=====================================================================
Found a 26 line (125 tokens) duplication in the following files: 
Starting at line 441 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        CategoryPointerAnnotation that = (CategoryPointerAnnotation) obj;
        if (this.angle != that.angle) {
            return false;
        }
        if (this.tipRadius != that.tipRadius) {
            return false;
        }
        if (this.baseRadius != that.baseRadius) {
            return false;
        }
        if (this.arrowLength != that.arrowLength) {
            return false;
        }
        if (this.arrowWidth != that.arrowWidth) {
            return false;
        }
        if (!this.arrowPaint.equals(that.arrowPaint)) {
            return false;
        }
        if (!Objects.equals(this.arrowStroke, that.arrowStroke)) {
            return false;
        }
        if (this.labelOffset != that.labelOffset) {
            return false;
        }
        return true;
=====================================================================
Found a 17 line (125 tokens) duplication in the following files: 
Starting at line 1099 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1302 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                Point2D coords = calculateDomainMarkerTextAnchorPoint(
                        g2, orientation, dataArea, rect,
                        marker.getLabelOffset(), marker.getLabelOffsetType(),
                        anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(originalComposite);
        }
    }
=====================================================================
Found a 15 line (125 tokens) duplication in the following files: 
Starting at line 734 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 808 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateHourA() {
        MyDateAxis axis = new MyDateAxis("Hour");
        Hour h0 = new Hour(12, 1, 4, 2007);
        Hour h1 = new Hour(13, 1, 4, 2007);

        // five dates to check...
        Date d0 = new Date(h0.getFirstMillisecond());
        Date d1 = new Date(h0.getFirstMillisecond() + 500L);
        Date d2 = new Date(h0.getMiddleMillisecond());
        Date d3 = new Date(h0.getMiddleMillisecond() + 500L);
        Date d4 = new Date(h0.getLastMillisecond());

        Date end = new Date(h1.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.HOUR, 1);
=====================================================================
Found a 10 line (125 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset, false);
=====================================================================
Found a 29 line (124 tokens) duplication in the following files: 
Starting at line 2203 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        Collection<CategoryMarker> markers;
        if (layer == Layer.FOREGROUND) {
            markers = this.foregroundDomainMarkers.get(index);
            if (markers == null) {
                markers = new ArrayList<>();
                this.foregroundDomainMarkers.put(index, markers);
            }
            markers.add(marker);
        } else if (layer == Layer.BACKGROUND) {
            markers = this.backgroundDomainMarkers.get(index);
            if (markers == null) {
                markers = new ArrayList<>();
                this.backgroundDomainMarkers.put(index, markers);
            }
            markers.add(marker);
        }
        marker.addChangeListener(this);
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Clears all the domain markers for the plot and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @see #clearRangeMarkers()
     */
    public void clearDomainMarkers() {
=====================================================================
Found a 76 line (124 tokens) duplication in the following files: 
Starting at line 2554 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                = this.foregroundRangeMarkers.get(key);
            if (markers != null) {
                for (Marker m : markers) {
                    m.removeChangeListener(this);
                }
                markers.clear();
            }
        }
        fireChangeEvent();
    }

    /**
     * Removes a marker for the range axis and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param marker the marker.
     *
     * @return A boolean indicating whether or not the marker was actually
     *         removed.
     *
     * @see #addRangeMarker(Marker)
     */
    public boolean removeRangeMarker(Marker marker) {
        return removeRangeMarker(marker, Layer.FOREGROUND);
    }

    /**
     * Removes a marker for the range axis in the specified layer and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param marker the marker ({@code null} not permitted).
     * @param layer the layer (foreground or background).
     *
     * @return A boolean indicating whether or not the marker was actually
     *         removed.
     *
     * @see #addRangeMarker(Marker, Layer)
     */
    public boolean removeRangeMarker(Marker marker, Layer layer) {
        return removeRangeMarker(0, marker, layer);
    }

    /**
     * Removes a marker for a specific dataset/renderer and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param index the dataset/renderer index.
     * @param marker the marker.
     * @param layer the layer (foreground or background).
     *
     * @return A boolean indicating whether or not the marker was actually
     *         removed.
     *
     * @see #addRangeMarker(int, Marker, Layer)
     */
    public boolean removeRangeMarker(int index, Marker marker, Layer layer) {
        return removeRangeMarker(index, marker, layer, true);
    }

    /**
     * Removes a marker for a specific dataset/renderer and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param index  the dataset/renderer index.
     * @param marker  the marker.
     * @param layer  the layer (foreground or background).
     * @param notify  notify listeners.
     *
     * @return A boolean indicating whether or not the marker was actually
     *         removed.
     *
     * @see #addRangeMarker(int, Marker, Layer, boolean)
     */
    public boolean removeRangeMarker(int index, Marker marker, Layer layer,
            boolean notify) {
        Args.nullNotPermitted(marker, "marker");
=====================================================================
Found a 76 line (124 tokens) duplication in the following files: 
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

    }

    /**
     * Returns the background paint (never {@code null}).
     *
     * @return The background paint.
     *
     * @see #setBackgroundPaint(Paint)
     */
    public Paint getBackgroundPaint() {
        return this.backgroundPaint;
    }

    /**
     * Sets the background paint and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getBackgroundPaint()
     */
    public void setBackgroundPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.backgroundPaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the foreground paint.
     *
     * @return The foreground paint (never {@code null}).
     *
     * @see #setForegroundPaint(Paint)
     */
    public Paint getForegroundPaint() {
        return this.foregroundPaint;
    }

    /**
     * Sets the foreground paint and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getForegroundPaint()
     */
    public void setForegroundPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.foregroundPaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the stroke.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setStroke(Stroke)
     */
    public Stroke getStroke() {
        return this.stroke;
    }

    /**
     * Sets the stroke and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getStroke()
     */
    public void setStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.stroke = stroke;
        notifyListeners(new DialLayerChangeEvent(this));
    }
=====================================================================
Found a 22 line (124 tokens) duplication in the following files: 
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java
Starting at line 474 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java

                            * rectBreadth, translatedValue0, rectBreadth
                            * (end - start), rectLength * (1 - p));
                }

            }

            if (getShadowsVisible()) {
                getBarPainter().paintBarShadow(g2, this, row, column, bar,
                        barBase, true);
            }
            getBarPainter().paintBar(g2, this, row, column, bar, barBase);

            if (completeBar != null) {
                g2.setPaint(getCompletePaint());
                g2.fill(completeBar);
            }
            if (incompleteBar != null) {
                g2.setPaint(getIncompletePaint());
                g2.fill(incompleteBar);
            }
            if (isDrawBarOutline()
                    && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
=====================================================================
Found a 21 line (124 tokens) duplication in the following files: 
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/CrosshairOverlay.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/CrosshairOverlay.java

                        alignPt = textAlignPtForLabelAnchorH(anchor);
                        hotspot = TextUtils.calculateRotatedStringBounds(
                               label, g2, xx, yy, alignPt, 0.0, TextAnchor.CENTER);
                    }

                    g2.setPaint(crosshair.getLabelBackgroundPaint());
                    g2.fill(hotspot);
                    if (crosshair.isLabelOutlineVisible()) {
                        g2.setPaint(crosshair.getLabelOutlinePaint());
                        g2.setStroke(crosshair.getLabelOutlineStroke());
                        g2.draw(hotspot);
                    }
                    g2.setPaint(crosshair.getLabelPaint());
                    TextUtils.drawAlignedString(label, g2, xx, yy, alignPt);
                    g2.setFont(savedFont);
                }
            }
            g2.setPaint(savedPaint);
            g2.setStroke(savedStroke);
        }
    }
=====================================================================
Found a 21 line (124 tokens) duplication in the following files: 
Starting at line 992 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1096 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryAxis xAxis2 = new CategoryAxis("X2");
        plot.setDomainAxis(1, xAxis2);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));

        plot.mapDatasetToDomainAxis(0, 1);
        assertEquals(xAxis2, plot.getDomainAxisForDataset(0));

        List<Integer> axisIndices = Arrays.asList(new Integer[] {0, 1});
        plot.mapDatasetToDomainAxes(0, axisIndices);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));

        axisIndices = Arrays.asList(new Integer[] {1, 2});
        plot.mapDatasetToDomainAxes(0, axisIndices);
        assertEquals(xAxis2, plot.getDomainAxisForDataset(0));
    }

    /**
     * Some tests for the getRangeAxisForDataset() method.
     */
    @Test
    public void testGetRangeAxisForDataset() {
=====================================================================
Found a 12 line (124 tokens) duplication in the following files: 
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java
Starting at line 302 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java

    public void testFindDomainBounds2() {
        XYIntervalSeries<String> s1 = new XYIntervalSeries<>("S1");
        s1.add(1.0, 0.5, 1.5, 10.0, 9.5, 10.5);
        s1.add(2.0, 1.9, 2.1, 20.0, 19.8, 20.3);
        XYIntervalSeries<String> s2 = new XYIntervalSeries<>("S2");
        s2.add(3.0, 2.5, 3.5, 30.0, 29.5, 30.5);
        s2.add(4.0, 3.9, 4.1, 9.0, 9.0, 9.0);
        XYIntervalSeriesCollection<String> dataset = new XYIntervalSeriesCollection<>();
        dataset.addSeries(s1);
        dataset.addSeries(s2);
        
        XYBarRenderer renderer = new XYBarRenderer();
=====================================================================
Found a 8 line (124 tokens) duplication in the following files: 
Starting at line 397 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 405 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java

        m = (Millisecond) m.next();
        assertEquals(2000, m.getSecond().getMinute().getHour().getYear());
        assertEquals(12, m.getSecond().getMinute().getHour().getMonth());
        assertEquals(12, m.getSecond().getMinute().getHour().getDayOfMonth());
        assertEquals(1, m.getSecond().getMinute().getHour().getHour());
        assertEquals(30, m.getSecond().getMinute().getMinute());
        assertEquals(55, m.getSecond().getSecond());
        assertEquals(556, m.getMillisecond());
=====================================================================
Found a 8 line (124 tokens) duplication in the following files: 
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java

            m = (Millisecond) m.next();
            assertEquals(1970, m.getSecond().getMinute().getHour().getYear());
            assertEquals(1, m.getSecond().getMinute().getHour().getMonth());
            assertEquals(1, m.getSecond().getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getSecond().getMinute().getHour().getHour());
            assertEquals(0, m.getSecond().getMinute().getMinute());
            assertEquals(0, m.getSecond().getSecond());
            assertEquals(1L, m.getMillisecond());
=====================================================================
Found a 37 line (123 tokens) duplication in the following files: 
Starting at line 828 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 976 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

            }

        }

        double xx = transX1;
        double yy = transY1;
        if (orientation == PlotOrientation.HORIZONTAL) {
            xx = transY1;
            yy = transX1;
        }

        // draw the item label if there is one...
        if (isItemLabelVisible(series, item)) {
            drawItemLabel(g2, orientation, dataset, series, item, xx, yy,
                    (y1 < 0.0));
        }

        int datasetIndex = plot.indexOf(dataset);
        updateCrosshairValues(crosshairState, x1, y1, datasetIndex,
                transX1, transY1, orientation);

        // add an entity for the item...
        if (entities != null && ShapeUtils.isPointInRect(dataArea, xx, yy)) {
            addEntity(entities, entityArea, dataset, series, item, xx, yy);
        }

    }

    /**
     * Tests this renderer for equality with another object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
=====================================================================
Found a 82 line (123 tokens) duplication in the following files: 
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java
Starting at line 466 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java

                && this.minimumRangeValueColumn == c))  {
            updateBounds();
        }

        fireDatasetChanged();
    }

    /**
     * Removes a row from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param rowIndex  the row index.
     *
     * @see #removeColumn(int)
     *
     * @since 1.0.7
     */
    public void removeRow(int rowIndex) {
        this.data.removeRow(rowIndex);
        updateBounds();
        fireDatasetChanged();
    }

    /**
     * Removes a row from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param rowKey  the row key.
     *
     * @see #removeColumn(Comparable)
     *
     * @since 1.0.7
     */
    public void removeRow(R rowKey) {
        this.data.removeRow(rowKey);
        updateBounds();
        fireDatasetChanged();
    }

    /**
     * Removes a column from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param columnIndex  the column index.
     *
     * @see #removeRow(int)
     *
     * @since 1.0.7
     */
    public void removeColumn(int columnIndex) {
        this.data.removeColumn(columnIndex);
        updateBounds();
        fireDatasetChanged();
    }

    /**
     * Removes a column from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @param columnKey  the column key.
     *
     * @see #removeRow(Comparable)
     *
     * @since 1.0.7
     */
    public void removeColumn(C columnKey) {
        this.data.removeColumn(columnKey);
        updateBounds();
        fireDatasetChanged();
    }

    /**
     * Clears all data from the dataset and sends a {@link DatasetChangeEvent}
     * to all registered listeners.
     *
     * @since 1.0.7
     */
    public void clear() {
        this.data.clear();
        updateBounds();
        fireDatasetChanged();
    }
=====================================================================
Found a 8 line (123 tokens) duplication in the following files: 
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java

            Millisecond m = new Millisecond(new Date(0L));
            assertEquals(1970, m.getSecond().getMinute().getHour().getYear());
            assertEquals(1, m.getSecond().getMinute().getHour().getMonth());
            assertEquals(1, m.getSecond().getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getSecond().getMinute().getHour().getHour());
            assertEquals(0, m.getSecond().getMinute().getMinute());
            assertEquals(0, m.getSecond().getSecond());
            assertEquals(0, m.getMillisecond());
=====================================================================
Found a 15 line (122 tokens) duplication in the following files: 
Starting at line 303 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        AbstractCategoryItemRenderer r = new LineAndShapeRenderer();
        assertNull(r.findRangeBounds(null));

        // an empty dataset should return a null range
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        assertNull(r.findRangeBounds(dataset));

        dataset.addValue(1.0, "R1", "C1");
        assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));
=====================================================================
Found a 17 line (122 tokens) duplication in the following files: 
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 182 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRendererTest.java

        r.setIncludeBaseInRange(true);

        dataset.add(-2.0, 0.2, "R1", "C2");
        assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset));

        dataset.add(null, null, "R1", "C3");
        assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset));

        dataset.add(5.0, 1.0, "R2", "C3");
        assertEquals(new Range(-2.2, 6.0), r.findRangeBounds(dataset));

        // check that the series visible flag is observed
        r.setSeriesVisible(1, Boolean.FALSE);
        assertEquals(new Range(-2.2, 1.5), r.findRangeBounds(dataset));
    }

}
=====================================================================
Found a 9 line (122 tokens) duplication in the following files: 
Starting at line 421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 55 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    @Test
    public void testEquals() {

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
        s2.add(new Task("T1", new Date(1), new Date(2)));
        s2.add(new Task("T2", new Date(11), new Date(22)));
=====================================================================
Found a 10 line (122 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1059 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 28 line (122 tokens) duplication in the following files: 
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        s2 = new XIntervalSeries<>("s2", false, false);
        assertEquals(s1, s2);

        // add a value
        s1.add(1.0, 0.5, 1.5, 2.0);
        assertNotEquals(s1, s2);
        s2.add(1.0, 0.5, 1.5, 2.0);
        assertEquals(s2, s1);

        // add another value
        s1.add(2.0, 0.5, 1.5, 2.0);
        assertNotEquals(s1, s2);
        s2.add(2.0, 0.5, 1.5, 2.0);
        assertEquals(s2, s1);

        // remove a value
        s1.remove(1.0);
        assertNotEquals(s1, s2);
        s2.remove(1.0);
        assertEquals(s2, s1);
    }

    /**
     * Confirm that cloning works.
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 15 line (121 tokens) duplication in the following files: 
Starting at line 1071 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1099 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                Point2D coords = calculateRangeMarkerTextAnchorPoint(
                        g2, orientation, dataArea, rect,
                        marker.getLabelOffset(), marker.getLabelOffsetType(),
                        anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(savedComposite);
=====================================================================
Found a 20 line (121 tokens) duplication in the following files: 
Starting at line 668 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

    protected void calculateBarWidth(CategoryPlot plot,
                                     Rectangle2D dataArea,
                                     int rendererIndex,
                                     CategoryItemRendererState state) {

        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);
        CategoryDataset dataset = plot.getDataset(rendererIndex);
        if (dataset != null) {
            int columns = dataset.getColumnCount();
            int rows = state.getVisibleSeriesCount() >= 0
                    ? state.getVisibleSeriesCount() : dataset.getRowCount();
            double space = 0.0;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
=====================================================================
Found a 15 line (121 tokens) duplication in the following files: 
Starting at line 586 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 660 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateDayA() {
        MyDateAxis axis = new MyDateAxis("Day");
        Day apr12007 = new Day(1, 4, 2007);
        Day apr22007 = new Day(2, 4, 2007);

        // five dates to check...
        Date d0 = new Date(apr12007.getFirstMillisecond());
        Date d1 = new Date(apr12007.getFirstMillisecond() + 500L);
        Date d2 = new Date(apr12007.getMiddleMillisecond());
        Date d3 = new Date(apr12007.getMiddleMillisecond() + 500L);
        Date d4 = new Date(apr12007.getLastMillisecond());

        Date end = new Date(apr22007.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.DAY, 1);
=====================================================================
Found a 59 line (120 tokens) duplication in the following files: 
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/AxisEntity.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/JFreeChartEntity.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/PlotEntity.java

        if (!(this.axis.equals(that.axis))) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 39;
        result = HashUtils.hashCode(result, getToolTipText());
        result = HashUtils.hashCode(result, getURLText());
        return result;
    }

    /**
     * Returns a clone of the entity.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem cloning the
     *         entity.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeShape(getArea(), stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        setArea(SerialUtils.readShape(stream));
    }

}
=====================================================================
Found a 22 line (120 tokens) duplication in the following files: 
Starting at line 4767 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (CategoryAxis axis : clone.domainAxes.values()) {
            if (axis != null) {
                axis.setPlot(clone);
                axis.addChangeListener(clone);
            }
        }
        clone.rangeAxes = CloneUtils.cloneMapValues(this.rangeAxes);
        for (ValueAxis axis : clone.rangeAxes.values()) {
            if (axis != null) {
                axis.setPlot(clone);
                axis.addChangeListener(clone);
            }
        }

        // AxisLocation is immutable, so we can just copy the maps
        clone.domainAxisLocations = new HashMap<>(
                this.domainAxisLocations);
        clone.rangeAxisLocations = new HashMap<>(
                this.rangeAxisLocations);

        clone.datasets = new HashMap<>(this.datasets);
        for (CategoryDataset<R, C> dataset : clone.datasets.values()) {
=====================================================================
Found a 13 line (120 tokens) duplication in the following files: 
Starting at line 458 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 357 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

        DefaultIntervalXYDataset<String> that = (DefaultIntervalXYDataset) obj;
        if (!this.seriesKeys.equals(that.seriesKeys)) {
            return false;
        }
        for (int i = 0; i < this.seriesList.size(); i++) {
            double[][] d1 = (double[][]) this.seriesList.get(i);
            double[][] d2 = (double[][]) that.seriesList.get(i);
            double[] d1x = d1[0];
            double[] d2x = d2[0];
            if (!Arrays.equals(d1x, d2x)) {
                return false;
            }
            double[] d1xs = d1[1];
=====================================================================
Found a 26 line (119 tokens) duplication in the following files: 
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

        value = calculateLog(value);

        double min = 0.0;
        double max = 0.0;
        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        } else if (RectangleEdge.isLeftOrRight(edge)) {
            max = area.getMinY();
            min = area.getMaxY();
        }
        if (isInverted()) {
            return max
                   - ((value - axisMin) / (axisMax - axisMin)) * (max - min);
        } else {
            return min
                   + ((value - axisMin) / (axisMax - axisMin)) * (max - min);
        }
    }

    /**
     * Configures the axis.  This method is typically called when an axis
     * is assigned to a new plot.
     */
    @Override
    public void configure() {
=====================================================================
Found a 37 line (119 tokens) duplication in the following files: 
Starting at line 2040 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 946 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param info  collects info about the drawing
     *              ({@code null} permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
                     PlotState parentState, PlotRenderingInfo info) {

        // adjust for insets...
        RectangleInsets insets = getInsets();
        insets.trim(area);

        if (info != null) {
            info.setPlotArea(area);
            info.setDataArea(area);
        }

        drawBackground(g2, area);
        drawOutline(g2, area);

        Shape savedClip = g2.getClip();
        g2.clip(area);

        Composite originalComposite = g2.getComposite();
        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
                getForegroundAlpha()));

        if (!DatasetUtils.isEmptyOrNull(this.dataset)) {
=====================================================================
Found a 21 line (119 tokens) duplication in the following files: 
Starting at line 1034 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 727 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

    private void drawLowFarOut(double aRadius, Graphics2D g2, double xx,
                               double m) {
        double side = aRadius * 2;
        g2.draw(new Line2D.Double(xx - side, m - side, xx + side, m - side));
        g2.draw(new Line2D.Double(xx - side, m - side, xx, m));
        g2.draw(new Line2D.Double(xx + side, m - side, xx, m));
    }

    /**
     * Tests this renderer for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return {@code true} or {@code false}.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof BoxAndWhiskerRenderer)) {
=====================================================================
Found a 62 line (118 tokens) duplication in the following files: 
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDataset.java
Starting at line 324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java

    }

    /**
     * Returns the minimum y-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         y-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getRangeLowerBound(boolean includeInterval) {
        double result = Double.NaN;
        if (this.minimumRangeValue != null) {
            result = this.minimumRangeValue.doubleValue();
        }
        return result;
    }

    /**
     * Returns the maximum y-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         y-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getRangeUpperBound(boolean includeInterval) {
        double result = Double.NaN;
        if (this.maximumRangeValue != null) {
            result = this.maximumRangeValue.doubleValue();
        }
        return result;
    }

    /**
     * Returns the range of the values in this dataset's range.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         y-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getRangeBounds(boolean includeInterval) {
        return this.rangeBounds;
    }

    /**
     * Tests this dataset for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof DefaultBoxAndWhiskerXYDataset)) {
=====================================================================
Found a 15 line (118 tokens) duplication in the following files: 
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        GroupedStackedBarRenderer r = new GroupedStackedBarRenderer();
        assertNull(r.findRangeBounds(null));

        // an empty dataset should return a null range
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        assertNull(r.findRangeBounds(dataset));

        dataset.addValue(1.0, "R1", "C1");
        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));
=====================================================================
Found a 22 line (118 tokens) duplication in the following files: 
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomCategoryURLGeneratorTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomXYURLGeneratorTest.java

        CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator();
        // you can add a null list - it would have been better if this
        // required EMPTY_LIST
        g1.addURLSeries(null);
        assertEquals(1, g1.getListCount());
        assertEquals(0, g1.getURLCount(0));

        List<String> list1 = new ArrayList<>();
        list1.add("URL1");
        g1.addURLSeries(list1);
        assertEquals(2, g1.getListCount());
        assertEquals(0, g1.getURLCount(0));
        assertEquals(1, g1.getURLCount(1));
        assertEquals("URL1", g1.getURL(1, 0));

        // if we modify the original list, it's best if the URL generator is
        // not affected
        list1.clear();
        assertEquals("URL1", g1.getURL(1, 0));
    }

}
=====================================================================
Found a 46 line (117 tokens) duplication in the following files: 
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

    public ColumnArrangement(HorizontalAlignment hAlign,
                             VerticalAlignment vAlign,
                             double hGap, double vGap) {
        this.horizontalAlignment = hAlign;
        this.verticalAlignment = vAlign;
        this.horizontalGap = hGap;
        this.verticalGap = vGap;
    }

    /**
     * Adds a block to be managed by this instance.  This method is usually
     * called by the {@link BlockContainer}, you shouldn't need to call it
     * directly.
     *
     * @param block  the block.
     * @param key  a key that controls the position of the block.
     */
    @Override
    public void add(Block block, Object key) {
        // since the flow layout is relatively straightforward, no information
        // needs to be recorded here
    }

    /**
     * Calculates and sets the bounds of all the items in the specified
     * container, subject to the given constraint.  The {@code Graphics2D}
     * can be used by some items (particularly items containing text) to
     * calculate sizing parameters.
     *
     * @param container  the container whose items are being arranged.
     * @param g2  the graphics device.
     * @param constraint  the size constraint.
     *
     * @return The size of the container after arrangement of the contents.
     */
    @Override
    public Size2D arrange(BlockContainer container, Graphics2D g2,
                          RectangleConstraint constraint) {

        LengthConstraintType w = constraint.getWidthConstraintType();
        LengthConstraintType h = constraint.getHeightConstraintType();
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
=====================================================================
Found a 15 line (117 tokens) duplication in the following files: 
Starting at line 438 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 512 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateMonthA() {
        MyDateAxis axis = new MyDateAxis("Month");
        Month nov2006 = new Month(11, 2006);
        Month dec2006 = new Month(12, 2006);

        // five dates to check...
        Date d0 = new Date(nov2006.getFirstMillisecond());
        Date d1 = new Date(nov2006.getFirstMillisecond() + 500L);
        Date d2 = new Date(nov2006.getMiddleMillisecond());
        Date d3 = new Date(nov2006.getMiddleMillisecond() + 500L);
        Date d4 = new Date(nov2006.getLastMillisecond());

        Date end = new Date(dec2006.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.MONTH, 1);
=====================================================================
Found a 16 line (117 tokens) duplication in the following files: 
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 270 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        r.setIncludeBaseInRange(true);

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-6.0, "R2", "C1");
        assertEquals(new Range(-6.0, 1.0), r.findRangeBounds(dataset));

        r.setSeriesVisible(1, Boolean.FALSE);
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));
    }

}
=====================================================================
Found a 7 line (117 tokens) duplication in the following files: 
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    public void testSerialization() {
        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
        s2.add(new Task("T1", new Date(1), new Date(2)));
        s2.add(new Task("T2", new Date(11), new Date(22)));
=====================================================================
Found a 80 line (116 tokens) duplication in the following files: 
Starting at line 1807 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java
Starting at line 1712 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        this.rangeZeroBaselinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the flag that controls whether the range grid-lines are visible.
     *
     * @return The flag.
     *
     * @see #setRangeGridlinesVisible(boolean)
     */
    public boolean isRangeGridlinesVisible() {
        return this.rangeGridlinesVisible;
    }

    /**
     * Sets the flag that controls whether or not grid-lines are drawn against
     * the range axis.  If the flag changes value, a {@link PlotChangeEvent} is
     * sent to all registered listeners.
     *
     * @param visible  the new value of the flag.
     *
     * @see #isRangeGridlinesVisible()
     */
    public void setRangeGridlinesVisible(boolean visible) {
        if (this.rangeGridlinesVisible != visible) {
            this.rangeGridlinesVisible = visible;
            fireChangeEvent();
        }
    }

    /**
     * Returns the stroke used to draw the grid-lines against the range axis.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setRangeGridlineStroke(Stroke)
     */
    public Stroke getRangeGridlineStroke() {
        return this.rangeGridlineStroke;
    }

    /**
     * Sets the stroke used to draw the grid-lines against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getRangeGridlineStroke()
     */
    public void setRangeGridlineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.rangeGridlineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint used to draw the grid-lines against the range axis.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setRangeGridlinePaint(Paint)
     */
    public Paint getRangeGridlinePaint() {
        return this.rangeGridlinePaint;
    }

    /**
     * Sets the paint used to draw the grid lines against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getRangeGridlinePaint()
     */
    public void setRangeGridlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.rangeGridlinePaint = paint;
        fireChangeEvent();
    }
=====================================================================
Found a 19 line (116 tokens) duplication in the following files: 
Starting at line 281 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 295 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 443 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        Paint itemPaint = getItemPaint(row, column);
        GradientPaintTransformer t = getGradientPaintTransformer();
        if (t != null && itemPaint instanceof GradientPaint) {
            itemPaint = t.transform((GradientPaint) itemPaint, bar);
        }
        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }
=====================================================================
Found a 47 line (115 tokens) duplication in the following files: 
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java

        return result;
    }

    /**
     * Returns a clone.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException not thrown by this class, but may be
     *                                    by subclasses.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream ({@code null} not permitted).
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeStroke(this.stroke, stream);
        SerialUtils.writePaint(this.outlinePaint, stream);
        SerialUtils.writePaint(this.fillPaint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream ({@code null} not permitted).
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.stroke = SerialUtils.readStroke(stream);
        this.outlinePaint = SerialUtils.readPaint(stream);
        this.fillPaint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 17 line (115 tokens) duplication in the following files: 
Starting at line 767 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/ValueAxis.java
Starting at line 815 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/ValueAxis.java

        if (vertical) {
            FontMetrics fm = g2.getFontMetrics(font);
            for (Object o : ticks) {
                Tick tick = (Tick) o;
                Rectangle2D labelBounds = null;
                if (tick instanceof LogTick) {
                    LogTick lt = (LogTick) tick;
                    if (lt.getAttributedLabel() != null) {
                        labelBounds = AttrStringUtils.getTextBounds(
                                lt.getAttributedLabel(), g2);
                    }
                } else if (tick.getText() != null) {
                    labelBounds = TextUtils.getTextBounds(
                            tick.getText(), g2, fm);
                }
                if (labelBounds != null && labelBounds.getWidth()
                        + insets.getTop() + insets.getBottom() > maxHeight) {
=====================================================================
Found a 30 line (115 tokens) duplication in the following files: 
Starting at line 160 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

        CategoryAxis axis = getDomainAxis();
        if (axis != null) {
            axis.configure();
        }
        fireChangeEvent();
    }

    /**
     * Removes a subplot from the combined chart.  Potentially, this removes
     * some unique categories from the overall union of the datasets...so the
     * domain axis is reconfigured, then a {@link PlotChangeEvent} is sent to
     * all registered listeners.
     *
     * @param subplot  the subplot ({@code null} not permitted).
     */
    public void remove(CategoryPlot subplot) {
        Args.nullNotPermitted(subplot, "subplot");
        int position = -1;
        int size = this.subplots.size();
        int i = 0;
        while (position == -1 && i < size) {
            if (this.subplots.get(i) == subplot) {
                position = i;
            }
            i++;
        }
        if (position != -1) {
            this.subplots.remove(position);
            subplot.setParent(null);
            subplot.removeChangeListener(this);
=====================================================================
Found a 29 line (114 tokens) duplication in the following files: 
Starting at line 782 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 539 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                    TextAnchor anchor;
                    TextAnchor rotationAnchor;
                    double angle = 0.0;
                    if (isVerticalTickLabels()) {
                        anchor = TextAnchor.CENTER_RIGHT;
                        rotationAnchor = TextAnchor.CENTER_RIGHT;
                        if (edge == RectangleEdge.TOP) {
                            angle = Math.PI / 2.0;
                        }
                        else {
                            angle = -Math.PI / 2.0;
                        }
                    }
                    else {
                        if (edge == RectangleEdge.TOP) {
                            anchor = TextAnchor.BOTTOM_CENTER;
                            rotationAnchor = TextAnchor.BOTTOM_CENTER;
                        }
                        else {
                            anchor = TextAnchor.TOP_CENTER;
                            rotationAnchor = TextAnchor.TOP_CENTER;
                        }
                    }

                    Tick tick = new NumberTick(currentTickValue, tickLabel, 
                            anchor, rotationAnchor, angle);
                    ticks.add(tick);
                }
            }
=====================================================================
Found a 15 line (114 tokens) duplication in the following files: 
Starting at line 347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 358 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java

            CategoryPlot sub = (CategoryPlot) this.subplots.get(i);
            totalWeight += sub.getWeight();
        }
        this.subplotAreas = new Rectangle2D[n];
        double x = adjustedPlotArea.getX();
        double y = adjustedPlotArea.getY();
        double usableSize = 0.0;
        if (orientation == PlotOrientation.HORIZONTAL) {
            usableSize = adjustedPlotArea.getWidth() - this.gap * (n - 1);
        }
        else if (orientation == PlotOrientation.VERTICAL) {
            usableSize = adjustedPlotArea.getHeight() - this.gap * (n - 1);
        }

        for (int i = 0; i < n; i++) {
=====================================================================
Found a 24 line (114 tokens) duplication in the following files: 
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/TickLabelEntityTest.java

                "R2", "C2");
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 20 line (114 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);
        return ChartFactory.createScatterPlot("Scatter Plot", "Domain",
=====================================================================
Found a 9 line (114 tokens) duplication in the following files: 
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java

    public void testEquals() {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        s1.add(new Task("Task 3", new Date(20L), new Date(21L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
        SlidingGanttCategoryDataset d1 = new SlidingGanttCategoryDataset(
                u1, 0, 5);
=====================================================================
Found a 15 line (114 tokens) duplication in the following files: 
Starting at line 280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesCollectionTest.java

        TimeSeriesCollection<String> dataset = new TimeSeriesCollection<>();
        assertEquals(-1, dataset.indexOf(s1));
        assertEquals(-1, dataset.indexOf(s2));

        dataset.addSeries(s1);
        assertEquals(0, dataset.indexOf(s1));
        assertEquals(-1, dataset.indexOf(s2));

        dataset.addSeries(s2);
        assertEquals(0, dataset.indexOf(s1));
        assertEquals(1, dataset.indexOf(s2));

        dataset.removeSeries(s1);
        assertEquals(-1, dataset.indexOf(s1));
        assertEquals(0, dataset.indexOf(s2));
=====================================================================
Found a 44 line (113 tokens) duplication in the following files: 
Starting at line 917 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 981 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        ValueAxis existing = this.rangeAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.rangeAxes.put(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Sets the range axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param axes  the axes ({@code null} not permitted).
     *
     * @see #setDomainAxes(CategoryAxis[])
     */
    public void setRangeAxes(ValueAxis[] axes) {
        for (int i = 0; i < axes.length; i++) {
            setRangeAxis(i, axes[i], false);
        }
        fireChangeEvent();
    }

    /**
     * Returns the index of the specified axis, or {@code -1} if the axis
     * is not assigned to the plot.
     *
     * @param axis  the axis ({@code null} not permitted).
     *
     * @return The axis index.
     *
     * @see #getRangeAxis(int)
     * @see #getDomainAxisIndex(CategoryAxis)
     */
    public int getRangeAxisIndex(ValueAxis axis) {
=====================================================================
Found a 32 line (113 tokens) duplication in the following files: 
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

            double y = Math.log(data[i][1]);
            sumX += x;
            sumY += y;
            double xx = x * x;
            sumXX += xx;
            double xy = x * y;
            sumXY += xy;
        }
        double sxx = sumXX - (sumX * sumX) / n;
        double sxy = sumXY - (sumX * sumY) / n;
        double xbar = sumX / n;
        double ybar = sumY / n;

        double[] result = new double[2];
        result[1] = sxy / sxx;
        result[0] = Math.pow(Math.exp(1.0), ybar - result[1] * xbar);

        return result;

    }

    /**
     * Returns the parameters 'a' and 'b' for an equation y = ax^b, fitted to
     * the data using a power regression equation.  The result is returned as
     * an array, where double[0] --&gt; a, and double[1] --&gt; b.
     *
     * @param data  the data.
     * @param series  the series to fit the regression line against.
     *
     * @return The parameters.
     */
    public static double[] getPowerRegression(XYDataset data, int series) {
=====================================================================
Found a 15 line (113 tokens) duplication in the following files: 
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 364 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateYearA() {
        MyDateAxis axis = new MyDateAxis("Year");
        Year y2006 = new Year(2006);
        Year y2007 = new Year(2007);

        // five dates to check...
        Date d0 = new Date(y2006.getFirstMillisecond());
        Date d1 = new Date(y2006.getFirstMillisecond() + 500L);
        Date d2 = new Date(y2006.getMiddleMillisecond());
        Date d3 = new Date(y2006.getMiddleMillisecond() + 500L);
        Date d4 = new Date(y2006.getLastMillisecond());

        Date end = new Date(y2007.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 1);
=====================================================================
Found a 22 line (112 tokens) duplication in the following files: 
Starting at line 3170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2781 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                    space = yAxis.reserveSpace(g2, this, plotArea, edge, space);
                }
            }
        }
        return space;

    }

    /**
     * Trims a rectangle to integer coordinates.
     *
     * @param rect  the incoming rectangle.
     *
     * @return A rectangle with integer coordinates.
     */
    private Rectangle integerise(Rectangle2D rect) {
        int x0 = (int) Math.ceil(rect.getMinX());
        int y0 = (int) Math.ceil(rect.getMinY());
        int x1 = (int) Math.floor(rect.getMaxX());
        int y1 = (int) Math.floor(rect.getMaxY());
        return new Rectangle(x0, y0, (x1 - x0), (y1 - y0));
    }
=====================================================================
Found a 17 line (112 tokens) duplication in the following files: 
Starting at line 2520 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 2580 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java

                    this.dataset, leftKeys.getKey(i));
            if (label != null) {
                TextBlock block = TextUtils.createTextBlock(label,
                        this.labelFont, this.labelPaint, maxLabelWidth,
                        new G2TextMeasurer(g2));
                TextBox labelBox = new TextBox(block);
                labelBox.setBackgroundPaint(this.labelBackgroundPaint);
                labelBox.setOutlinePaint(this.labelOutlinePaint);
                labelBox.setOutlineStroke(this.labelOutlineStroke);
                if (this.shadowGenerator == null) {
                    labelBox.setShadowPaint(this.labelShadowPaint);
                }
                else {
                    labelBox.setShadowPaint(null);
                }
                labelBox.setInteriorGap(this.labelPadding);
                double theta = Math.toRadians(
=====================================================================
Found a 30 line (112 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java
Starting at line 218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java

    public Number getValue(Comparable row, Comparable column) {
        List l = (List) this.data.getObject(row, column);
        double average = 0.0d;
        int count = 0;
        if (l != null && l.size() > 0) {
            for (int i = 0; i < l.size(); i++) {
                Number n = (Number) l.get(i);
                average += n.doubleValue();
                count += 1;
            }
            if (count > 0) {
                average = average / count;
            }
        }
        if (count == 0) {
            return null;
        }
        return average;
    }

    /**
     * Returns the average value for the specified item.
     *
     * @param row  the row index.
     * @param column  the column index.
     *
     * @return The average value.
     */
    @Override
    public Number getValue(int row, int column) {
=====================================================================
Found a 15 line (112 tokens) duplication in the following files: 
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYShapeAnnotationTest.java

        a2 = new XYBoxAnnotation(1.0, 2.0, 3.0, 4.0, new BasicStroke(2.3f),
                Color.RED, Color.BLUE);
        assertEquals(a1, a2);

        GradientPaint gp1a = new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.RED);
        GradientPaint gp1b = new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.RED);
        GradientPaint gp2a = new GradientPaint(5.0f, 6.0f, Color.pink,
                7.0f, 8.0f, Color.WHITE);
        GradientPaint gp2b = new GradientPaint(5.0f, 6.0f, Color.pink,
                7.0f, 8.0f, Color.WHITE);

        // outlinePaint
        a1 = new XYBoxAnnotation(1.0, 2.0, 3.0, 4.0, new BasicStroke(2.3f),
=====================================================================
Found a 16 line (112 tokens) duplication in the following files: 
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("S1");
        assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount());
        s1.setMaximumItemCount(2);
        assertEquals(2, s1.getMaximumItemCount());
        s1.add(1.0, 1.1, 1.1, 1.1);
        s1.add(2.0, 2.2, 2.2, 2.2);
        s1.add(3.0, 3.3, 3.3, 3.3);
        assertEquals(2.0, s1.getX(0).doubleValue(), EPSILON);
        assertEquals(3.0, s1.getX(1).doubleValue(), EPSILON);
    }

    /**
     * Check that the maximum item count can be applied retrospectively.
     */
    @Test
    public void testSetMaximumItemCount2() {
=====================================================================
Found a 23 line (110 tokens) duplication in the following files: 
Starting at line 946 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 1046 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

                    }
                }

                Tick tick = new NumberTick(currentTickValue,
                        tickLabel, anchor, rotationAnchor, angle);
                result.add(tick);
                double nextTickValue = lowestTickValue + ((i + 1) * size);
                for (int minorTick = 1; minorTick < minorTickSpaces;
                        minorTick++) {
                    double minorTickValue = currentTickValue
                            + (nextTickValue - currentTickValue)
                            * minorTick / minorTickSpaces;
                    if (getRange().contains(minorTickValue)) {
                        result.add(new NumberTick(TickType.MINOR,
                                minorTickValue, "", TextAnchor.TOP_CENTER,
                                TextAnchor.CENTER, 0.0));
                    }
                }
            }
        }
        return result;

    }
=====================================================================
Found a 19 line (110 tokens) duplication in the following files: 
Starting at line 286 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 374 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/WaterfallBarRenderer.java

        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
=====================================================================
Found a 23 line (110 tokens) duplication in the following files: 
Starting at line 556 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 334 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

                    Area dataAreaHotspot = new Area(shape);
                    dataAreaHotspot.intersect(new Area(dataArea));
                    if (!dataAreaHotspot.isEmpty()) {
                        String tip = null;
                        XYToolTipGenerator generator = getToolTipGenerator(
                                series, item);
                        if (generator != null) {
                            tip = generator.generateToolTip(dataset, series, 
                                    item);
                        }
                        String url = null;
                        if (getURLGenerator() != null) {
                            url = getURLGenerator().generateURL(dataset, series, 
                                    item);
                        }
                        XYItemEntity entity = new XYItemEntity(dataAreaHotspot, 
                                dataset, series, item, tip, url);
                        entities.add(entity);
                    }
                }
            }

        }
=====================================================================
Found a 16 line (110 tokens) duplication in the following files: 
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 273 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

                plot.getRangeAxisEdge());

        double x2 = dataset.getXValue(series, Math.min(item + 1,
                itemCount - 1));
        double y2 = dataset.getYValue(series, Math.min(item + 1,
                itemCount - 1));
        if (Double.isNaN(y2)) {
            y2 = 0.0;
        }
        double transX2 = domainAxis.valueToJava2D(x2, dataArea,
                plot.getDomainAxisEdge());
        double transY2 = rangeAxis.valueToJava2D(y2, dataArea,
                plot.getRangeAxisEdge());

        double transZero = rangeAxis.valueToJava2D(0.0, dataArea,
                plot.getRangeAxisEdge());
=====================================================================
Found a 16 line (109 tokens) duplication in the following files: 
Starting at line 3952 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3934 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        Line2D line;
        if (orientation == PlotOrientation.HORIZONTAL) {
            double xx = axis.valueToJava2D(value, dataArea,
                    RectangleEdge.BOTTOM);
            line = new Line2D.Double(xx, dataArea.getMinY(), xx,
                    dataArea.getMaxY());
        }
        else {
            double yy = axis.valueToJava2D(value, dataArea,
                    RectangleEdge.LEFT);
            line = new Line2D.Double(dataArea.getMinX(), yy,
                    dataArea.getMaxX(), yy);
        }
        g2.setStroke(stroke);
        g2.setPaint(paint);
        g2.draw(line);
=====================================================================
Found a 20 line (109 tokens) duplication in the following files: 
Starting at line 736 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

                if (getItemShapeFilled(row, column)) {
                    if (this.useFillPaint) {
                        g2.setPaint(getItemFillPaint(row, column));
                    }
                    else {
                        g2.setPaint(getItemPaint(row, column));
                    }
                    g2.fill(shape);
                }
                if (this.drawOutlines) {
                    if (this.useOutlinePaint) {
                        g2.setPaint(getItemOutlinePaint(row, column));
                    }
                    else {
                        g2.setPaint(getItemPaint(row, column));
                    }
                    g2.setStroke(getItemOutlineStroke(row, column));
                    g2.draw(shape);
                }
            }
=====================================================================
Found a 45 line (109 tokens) duplication in the following files: 
Starting at line 488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Month.java
Starting at line 583 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java

        return result;
    }

    /**
     * Finds the first occurrence of '-', or if that character is not found,
     * the first occurrence of ',', or the first occurrence of ' ' or '.'
     *
     * @param s  the string to parse.
     *
     * @return The position of the separator character, or {@code -1} if
     *     none of the characters were found.
     */
    private static int findSeparator(String s) {
        int result = s.indexOf('-');
        if (result == -1) {
            result = s.indexOf(',');
        }
        if (result == -1) {
            result = s.indexOf(' ');
        }
        if (result == -1) {
            result = s.indexOf('.');
        }
        return result;
    }

    /**
     * Creates a year from a string, or returns {@code null} (format
     * exceptions suppressed).
     *
     * @param s  the string to parse.
     *
     * @return {@code null} if the string is not parseable, the year
     *         otherwise.
     */
    private static Year evaluateAsYear(String s) {
        Year result = null;
        try {
            result = Year.parseYear(s);
        }
        catch (TimePeriodFormatException e) {
            // suppress
        }
        return result;
    }
=====================================================================
Found a 24 line (109 tokens) duplication in the following files: 
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/Vector.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYCoordinate.java

        Vector that = (Vector) obj;
        if (this.x != that.x) {
            return false;
        }
        if (this.y != that.y) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 193;
        long temp = Double.doubleToLongBits(this.x);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.y);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }
=====================================================================
Found a 19 line (109 tokens) duplication in the following files: 
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/XYItemEntityTest.java

                new DefaultPieDataset<String>(), 1, 2, "Key", "ToolTip", "URL");
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);

        e1.setDataset(null);
=====================================================================
Found a 18 line (109 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        AreaRenderer r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        DefaultCategoryDataset<String,String> dataset0 = new DefaultCategoryDataset<>();
        dataset0.addValue(21.0, "R1", "C1");
        dataset0.addValue(22.0, "R2", "C1");
        DefaultCategoryDataset<String,String> dataset1 = new DefaultCategoryDataset<>();
        dataset1.addValue(23.0, "R3", "C1");
        dataset1.addValue(24.0, "R4", "C1");
        dataset1.addValue(25.0, "R5", "C1");
=====================================================================
Found a 19 line (109 tokens) duplication in the following files: 
Starting at line 199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                = new DefaultBoxAndWhiskerCategoryDataset<>() {

            @Override
            public Number getQ1Value(int row, int column) {
                return null;
            }

            @Override
            public Number getQ1Value(String rowKey, String columnKey) {
                return null;
            }
        };
        List<Double> values = new ArrayList<>();
        values.add(1.0);
        values.add(10.0);
        values.add(100.0);
        dataset.add(values, "row", "column");
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, new CategoryAxis("x"),
                new NumberAxis("y"), new BoxAndWhiskerRenderer());
=====================================================================
Found a 8 line (109 tokens) duplication in the following files: 
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1059 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
=====================================================================
Found a 20 line (109 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);
        return ChartFactory.createScatterPlot("Scatter Plot", "Domain",
=====================================================================
Found a 8 line (109 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testGetValue() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(
=====================================================================
Found a 9 line (109 tokens) duplication in the following files: 
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testSerialization() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d1
                = new DefaultIntervalCategoryDataset(starts, ends);
=====================================================================
Found a 80 line (108 tokens) duplication in the following files: 
Starting at line 4083 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4543 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        fireChangeEvent();
    }

    /**
     * Returns the fixed domain axis space.
     *
     * @return The fixed domain axis space (possibly {@code null}).
     *
     * @see #setFixedDomainAxisSpace(AxisSpace)
     */
    public AxisSpace getFixedDomainAxisSpace() {
        return this.fixedDomainAxisSpace;
    }

    /**
     * Sets the fixed domain axis space and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param space  the space ({@code null} permitted).
     *
     * @see #getFixedDomainAxisSpace()
     */
    public void setFixedDomainAxisSpace(AxisSpace space) {
        setFixedDomainAxisSpace(space, true);
    }

    /**
     * Sets the fixed domain axis space and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param space  the space ({@code null} permitted).
     * @param notify  notify listeners?
     *
     * @see #getFixedDomainAxisSpace()
     */
    public void setFixedDomainAxisSpace(AxisSpace space, boolean notify) {
        this.fixedDomainAxisSpace = space;
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Returns the fixed range axis space.
     *
     * @return The fixed range axis space (possibly {@code null}).
     *
     * @see #setFixedRangeAxisSpace(AxisSpace)
     */
    public AxisSpace getFixedRangeAxisSpace() {
        return this.fixedRangeAxisSpace;
    }

    /**
     * Sets the fixed range axis space and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param space  the space ({@code null} permitted).
     *
     * @see #getFixedRangeAxisSpace()
     */
    public void setFixedRangeAxisSpace(AxisSpace space) {
        setFixedRangeAxisSpace(space, true);
    }

    /**
     * Sets the fixed range axis space and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param space  the space ({@code null} permitted).
     * @param notify  notify listeners?
     *
     * @see #getFixedRangeAxisSpace()
     */
    public void setFixedRangeAxisSpace(AxisSpace space, boolean notify) {
        this.fixedRangeAxisSpace = space;
        if (notify) {
            fireChangeEvent();
        }
    }
=====================================================================
Found a 19 line (108 tokens) duplication in the following files: 
Starting at line 1019 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1048 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            Paint p = marker.getPaint();
            if (p instanceof GradientPaint) {
                GradientPaint gp = (GradientPaint) p;
                GradientPaintTransformer t = im.getGradientPaintTransformer();
                if (t != null) {
                    gp = t.transform(gp, rect);
                }
                g2.setPaint(gp);
            }
            else {
                g2.setPaint(p);
            }
            g2.fill(rect);

            // now draw the outlines, if visible...
            if (im.getOutlinePaint() != null && im.getOutlineStroke() != null) {
                if (orientation == PlotOrientation.VERTICAL) {
                    Line2D line = new Line2D.Double();
                    double x0 = dataArea.getMinX();
=====================================================================
Found a 13 line (108 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainCategoryPlotTest.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainXYPlotTest.java

        CategoryPlot<String, String> subplot1 = plot.getSubplots().get(0);
        NumberAxis yAxis = (NumberAxis) subplot1.getRangeAxis();
        yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero());
        assertEquals(1, this.events.size());

        // a redraw should NOT trigger another change event
        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        this.events.clear();
        chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0));
        assertTrue(this.events.isEmpty());
    }
=====================================================================
Found a 13 line (108 tokens) duplication in the following files: 
Starting at line 51 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 50 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

public class SlidingGanttCategoryDatasetTest {

    /**
     * Some checks for the equals() method.
     */
    @Test
    public void testEquals() {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        s1.add(new Task("Task 3", new Date(20L), new Date(21L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 11 line (108 tokens) duplication in the following files: 
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 381 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

    public void testCreateCopy1() {
        TimeSeries<String> series = new TimeSeries<>("Series");
        series.add(new Month(MonthConstants.JANUARY, 2003), 45.0);
        series.add(new Month(MonthConstants.FEBRUARY, 2003), 55.0);
        series.add(new Month(MonthConstants.JUNE, 2003), 35.0);
        series.add(new Month(MonthConstants.NOVEMBER, 2003), 85.0);
        series.add(new Month(MonthConstants.DECEMBER, 2003), 75.0);

        try {
            // copy a range before the start of the series data...
            TimeSeries<String> result1 = series.createCopy(
=====================================================================
Found a 67 line (107 tokens) duplication in the following files: 
Starting at line 638 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartUtils.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/imagemap/ImageMapUtils.java

        ImageMapUtils.writeImageMap(writer, name, info,
                toolTipTagFragmentGenerator,
                new StandardURLTagFragmentGenerator());

    }

    /**
     * Writes an image map to the specified writer.
     *
     * @param writer  the writer ({@code null} not permitted).
     * @param name  the map name ({@code null} not permitted).
     * @param info  the chart rendering info ({@code null} not permitted).
     * @param toolTipTagFragmentGenerator  a generator for the HTML fragment
     *     that will contain the tooltip text ({@code null} not permitted
     *     if {@code info} contains tooltip information).
     * @param urlTagFragmentGenerator  a generator for the HTML fragment that
     *     will contain the URL reference ({@code null} not permitted if
     *     {@code info} contains URLs).
     *
     * @throws IOException if there are any I/O errors.
     */
    public static void writeImageMap(PrintWriter writer, String name,
            ChartRenderingInfo info,
            ToolTipTagFragmentGenerator toolTipTagFragmentGenerator,
            URLTagFragmentGenerator urlTagFragmentGenerator)
            throws IOException {

        writer.println(ImageMapUtils.getImageMap(name, info,
                toolTipTagFragmentGenerator, urlTagFragmentGenerator));
    }

    /**
     * Creates an HTML image map.  This method maps to
     * {@link ImageMapUtils#getImageMap(String, ChartRenderingInfo,
     * ToolTipTagFragmentGenerator, URLTagFragmentGenerator)}, using default
     * generators.
     *
     * @param name  the map name ({@code null} not permitted).
     * @param info  the chart rendering info ({@code null} not permitted).
     *
     * @return The map tag.
     */
    public static String getImageMap(String name, ChartRenderingInfo info) {
        return ImageMapUtils.getImageMap(name, info,
                new StandardToolTipTagFragmentGenerator(),
                new StandardURLTagFragmentGenerator());
    }

    /**
     * Creates an HTML image map.  This method maps directly to
     * {@link ImageMapUtils#getImageMap(String, ChartRenderingInfo,
     * ToolTipTagFragmentGenerator, URLTagFragmentGenerator)}.
     *
     * @param name  the map name ({@code null} not permitted).
     * @param info  the chart rendering info ({@code null} not permitted).
     * @param toolTipTagFragmentGenerator  a generator for the HTML fragment
     *     that will contain the tooltip text ({@code null} not permitted
     *     if {@code info} contains tooltip information).
     * @param urlTagFragmentGenerator  a generator for the HTML fragment that
     *     will contain the URL reference ({@code null} not permitted if
     *     {@code info} contains URLs).
     *
     * @return The map tag.
     */
    public static String getImageMap(String name, ChartRenderingInfo info,
            ToolTipTagFragmentGenerator toolTipTagFragmentGenerator,
            URLTagFragmentGenerator urlTagFragmentGenerator) {
=====================================================================
Found a 36 line (107 tokens) duplication in the following files: 
Starting at line 1223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            if (entry.getValue() == dataset) {
                return entry.getKey();
            }
        }
        return -1;
    }

    /**
     * Maps a dataset to a particular domain axis.
     *
     * @param index  the dataset index (zero-based).
     * @param axisIndex  the axis index (zero-based).
     *
     * @see #getDomainAxisForDataset(int)
     */
    public void mapDatasetToDomainAxis(int index, int axisIndex) {
        List<Integer> axisIndices = new ArrayList<>(1);
        axisIndices.add(axisIndex);
        mapDatasetToDomainAxes(index, axisIndices);
    }

    /**
     * Maps the specified dataset to the axes in the list.  Note that the
     * conversion of data values into Java2D space is always performed using
     * the first axis in the list.
     *
     * @param index  the dataset index (zero-based).
     * @param axisIndices  the axis indices ({@code null} permitted).
     */
    public void mapDatasetToDomainAxes(int index, List<Integer> axisIndices) {
        Args.requireNonNegative(index, "index");
        checkAxisIndices(axisIndices);
        this.datasetToDomainAxesMap.put(index, new ArrayList<>(axisIndices));
        // fake a dataset change event to update axes...
        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));
    }
=====================================================================
Found a 89 line (107 tokens) duplication in the following files: 
Starting at line 1730 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1953 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        this.domainGridlinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns a flag that controls whether or not a zero baseline is
     * displayed for the range axis.
     *
     * @return A boolean.
     *
     * @see #setRangeZeroBaselineVisible(boolean)
     */
    public boolean isRangeZeroBaselineVisible() {
        return this.rangeZeroBaselineVisible;
    }

    /**
     * Sets the flag that controls whether or not the zero baseline is
     * displayed for the range axis, and sends a {@link PlotChangeEvent} to
     * all registered listeners.
     *
     * @param visible  the flag.
     *
     * @see #isRangeZeroBaselineVisible()
     */
    public void setRangeZeroBaselineVisible(boolean visible) {
        this.rangeZeroBaselineVisible = visible;
        fireChangeEvent();
    }

    /**
     * Returns the stroke used for the zero baseline against the range axis.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setRangeZeroBaselineStroke(Stroke)
     */
    public Stroke getRangeZeroBaselineStroke() {
        return this.rangeZeroBaselineStroke;
    }

    /**
     * Sets the stroke for the zero baseline for the range axis,
     * and sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getRangeZeroBaselineStroke()
     */
    public void setRangeZeroBaselineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.rangeZeroBaselineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint for the zero baseline (if any) plotted against the
     * range axis.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setRangeZeroBaselinePaint(Paint)
     */
    public Paint getRangeZeroBaselinePaint() {
        return this.rangeZeroBaselinePaint;
    }

    /**
     * Sets the paint for the zero baseline plotted against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getRangeZeroBaselinePaint()
     */
    public void setRangeZeroBaselinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.rangeZeroBaselinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the flag that controls whether the range grid-lines are visible.
     *
     * @return The flag.
     *
     * @see #setRangeGridlinesVisible(boolean)
     */
    public boolean isRangeGridlinesVisible() {
=====================================================================
Found a 60 line (107 tokens) duplication in the following files: 
Starting at line 2372 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        Collection<CategoryMarker> markers;
        if (layer == Layer.FOREGROUND) {
            markers = this.foregroundDomainMarkers.get(index);
        } else {
            markers = this.backgroundDomainMarkers.get(index);
        }
        if (markers == null) {
            return false;
        }
        boolean removed = markers.remove(marker);
        if (removed && notify) {
            fireChangeEvent();
        }
        return removed;
    }

    /**
     * Adds a marker for display (in the foreground) against the range axis and
     * sends a {@link PlotChangeEvent} to all registered listeners. Typically a
     * marker will be drawn by the renderer as a line perpendicular to the
     * range axis, however this is entirely up to the renderer.
     *
     * @param marker  the marker ({@code null} not permitted).
     *
     * @see #removeRangeMarker(Marker)
     */
    public void addRangeMarker(Marker marker) {
        addRangeMarker(marker, Layer.FOREGROUND);
    }

    /**
     * Adds a marker for display against the range axis and sends a
     * {@link PlotChangeEvent} to all registered listeners.  Typically a marker
     * will be drawn by the renderer as a line perpendicular to the range axis,
     * however this is entirely up to the renderer.
     *
     * @param marker  the marker ({@code null} not permitted).
     * @param layer  the layer (foreground or background) ({@code null}
     *               not permitted).
     *
     * @see #removeRangeMarker(Marker, Layer)
     */
    public void addRangeMarker(Marker marker, Layer layer) {
        addRangeMarker(0, marker, layer);
    }

    /**
     * Adds a marker for display by a particular renderer and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     * <P>
     * Typically a marker will be drawn by the renderer as a line perpendicular
     * to a range axis, however this is entirely up to the renderer.
     *
     * @param index  the renderer index.
     * @param marker  the marker.
     * @param layer  the layer.
     *
     * @see #removeRangeMarker(int, Marker, Layer)
     */
    public void addRangeMarker(int index, Marker marker, Layer layer) {
=====================================================================
Found a 19 line (107 tokens) duplication in the following files: 
Starting at line 503 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 575 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

            g2.setFont(this.font);
            this.content = TextUtils.createTextBlock(this.text, this.font,
                    this.paint, maxWidth, this.maximumLinesToDisplay,
                    new G2TextMeasurer(g2));
            this.content.setLineAlignment(this.textAlignment);
            Size2D contentSize = this.content.calculateDimensions(g2);

            // transpose the dimensions, because the title is rotated
            if (this.expandToFitSpace) {
                return new Size2D(contentSize.getHeight(), maxWidth);
            }
            else {
                return new Size2D(contentSize.height, contentSize.width);
            }
        }
        else {
            throw new RuntimeException("Unrecognised exception.");
        }
    }
=====================================================================
Found a 13 line (107 tokens) duplication in the following files: 
Starting at line 700 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 721 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11011
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
=====================================================================
Found a 17 line (107 tokens) duplication in the following files: 
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/TickLabelEntityTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/XYItemEntityTest.java

                3.0, 4.0), "ToolTip", "URL");
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);
=====================================================================
Found a 19 line (107 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/LegendItemEntityTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java

                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);

        e1.setDataset(new DefaultCategoryDataset<String, String>());
=====================================================================
Found a 13 line (107 tokens) duplication in the following files: 
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainXYPlotTest.java
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeCategoryPlotTest.java

        XYPlot<String> subplot1 = plot.getSubplots().get(0);
        NumberAxis yAxis = (NumberAxis) subplot1.getRangeAxis();
        yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero());
        assertEquals(1, this.events.size());

        // a redraw should NOT trigger another change event
        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        this.events.clear();
        chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0));
        assertTrue(this.events.isEmpty());
    }
=====================================================================
Found a 9 line (107 tokens) duplication in the following files: 
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testSerialization() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d1
                = new DefaultIntervalCategoryDataset(starts, ends);
=====================================================================
Found a 15 line (107 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        series.add(1.0, 1.1, 1.1, 1.1);
        assertEquals(5.5, series.getYValue(0), EPSILON);
        assertEquals(5.51, series.getYValue(1), EPSILON);
        assertEquals(6.6, series.getYValue(2), EPSILON);
        assertEquals(3.3, series.getYValue(3), EPSILON);
        assertEquals(4.4, series.getYValue(4), EPSILON);
        assertEquals(2.2, series.getYValue(5), EPSILON);
        assertEquals(1.1, series.getYValue(6), EPSILON);
    }

    /**
     * A simple check that the maximumItemCount attribute is working.
     */
    @Test
    public void testSetMaximumItemCount() {
=====================================================================
Found a 16 line (106 tokens) duplication in the following files: 
Starting at line 739 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

        int categoryCount = getColumnCount();
        if (seriesCount > 1) {
            double seriesGap = space * getItemMargin()
                               / (categoryCount * (seriesCount - 1));
            double seriesW = calculateSeriesWidth(space, domainAxis,
                    categoryCount, seriesCount);
            barW0 = barW0 + row * (seriesW + seriesGap)
                          + (seriesW / 2.0) - (state.getBarWidth() / 2.0);
        }
        else {
            barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),
                    dataArea, plot.getDomainAxisEdge()) - state.getBarWidth()
                    / 2.0;
        }
        return barW0;
    }
=====================================================================
Found a 30 line (106 tokens) duplication in the following files: 
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 400 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        double lclip = getLowerClip();
        double uclip = getUpperClip();

        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
            if (value >= uclip) {
                return; // bar is not visible
            }
            base = uclip;
            if (value <= lclip) {
                value = lclip;
            }
        } else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
            if (value >= uclip) {
                value = uclip;
            } else {
                if (value <= lclip) {
                    value = lclip;
                }
            }
        } else { // cases 9, 10, 11 and 12
            if (value <= lclip) {
                return; // bar is not visible
            }
            base = getLowerClip();
            if (value >= uclip) {
               value = uclip;
            }
        }

        RectangleEdge edge = plot.getRangeAxisEdge();
=====================================================================
Found a 88 line (106 tokens) duplication in the following files: 
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns {@code true} if outlines should be drawn for shapes, and
     * {@code false} otherwise.
     *
     * @return A boolean.
     *
     * @see #setDrawOutlines(boolean)
     */
    public boolean getDrawOutlines() {
        return this.drawOutlines;
    }

    /**
     * Sets the flag that controls whether outlines are drawn for
     * shapes, and sends a {@link RendererChangeEvent} to all registered
     * listeners.
     * <P>
     * In some cases, shapes look better if they do NOT have an outline, but
     * this flag allows you to set your own preference.
     *
     * @param flag  the flag.
     *
     * @see #getDrawOutlines()
     */
    public void setDrawOutlines(boolean flag) {
        this.drawOutlines = flag;
        fireChangeEvent();
    }

    /**
     * Returns the flag that controls whether the outline paint is used for
     * shape outlines.  If not, the regular series paint is used.
     *
     * @return A boolean.
     *
     * @see #setUseOutlinePaint(boolean)
     */
    public boolean getUseOutlinePaint() {
        return this.useOutlinePaint;
    }

    /**
     * Sets the flag that controls whether the outline paint is used for shape
     * outlines, and sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param use  the flag.
     *
     * @see #getUseOutlinePaint()
     */
    public void setUseOutlinePaint(boolean use) {
        this.useOutlinePaint = use;
        fireChangeEvent();
    }

    // SHAPES FILLED

    /**
     * Returns the flag used to control whether or not the shape for an item
     * is filled. The default implementation passes control to the
     * {@code getSeriesShapesFilled} method. You can override this method
     * if you require different behaviour.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return A boolean.
     */
    public boolean getItemShapeFilled(int series, int item) {
        return getSeriesShapesFilled(series);
    }

    /**
     * Returns the flag used to control whether or not the shapes for a series
     * are filled.
     *
     * @param series  the series index (zero-based).
     *
     * @return A boolean.
     */
    public boolean getSeriesShapesFilled(int series) {
        Boolean flag = this.seriesShapesFilledMap.get(series);
        if (flag != null) {
            return flag;
        }
=====================================================================
Found a 16 line (106 tokens) duplication in the following files: 
Starting at line 487 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 559 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

            g2.setFont(this.font);
            this.content = TextUtils.createTextBlock(this.text, this.font,
                    this.paint, maxWidth, this.maximumLinesToDisplay,
                    new G2TextMeasurer(g2));
            this.content.setLineAlignment(this.textAlignment);
            Size2D contentSize = this.content.calculateDimensions(g2);
            if (this.expandToFitSpace) {
                return new Size2D(maxWidth, contentSize.getHeight());
            }
            else {
                return contentSize;
            }
        }
        else if (position == RectangleEdge.LEFT || position
                == RectangleEdge.RIGHT) {
            float maxWidth = Float.MAX_VALUE;
=====================================================================
Found a 15 line (106 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

                = (TaskSeriesCollection) d2.getUnderlyingDataset();
        TaskSeries<String> s2 = u2.getSeries("Series");
        s2.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertEquals(d1, d2);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 10 line (106 tokens) duplication in the following files: 
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
        assertEquals(0.9, r.getLowerBound(), EPSILON);
        assertEquals(3.1, r.getUpperBound(), EPSILON);
=====================================================================
Found a 19 line (105 tokens) duplication in the following files: 
Starting at line 622 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendGraphic.java
Starting at line 946 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

        if (this.shapeVisible != that.shapeVisible) {
            return false;
        }
        if (!ShapeUtils.equal(this.shape, that.shape)) {
            return false;
        }
        if (this.shapeFilled != that.shapeFilled) {
            return false;
        }
        if (!PaintUtils.equal(this.fillPaint, that.fillPaint)) {
            return false;
        }
        if (!Objects.equals(this.fillPaintTransformer, that.fillPaintTransformer)) {
            return false;
        }
        if (this.shapeOutlineVisible != that.shapeOutlineVisible) {
            return false;
        }
        if (!PaintUtils.equal(this.outlinePaint, that.outlinePaint)) {
=====================================================================
Found a 15 line (105 tokens) duplication in the following files: 
Starting at line 1035 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1077 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                if (orientation == PlotOrientation.VERTICAL) {
                    Line2D line = new Line2D.Double();
                    double x0 = dataArea.getMinX();
                    double x1 = dataArea.getMaxX();
                    g2.setPaint(im.getOutlinePaint());
                    g2.setStroke(im.getOutlineStroke());
                    if (range.contains(start)) {
                        line.setLine(x0, start2d, x1, start2d);
                        g2.draw(line);
                    }
                    if (range.contains(end)) {
                        line.setLine(x0, end2d, x1, end2d);
                        g2.draw(line);
                    }
                } else { // PlotOrientation.HORIZONTAL
=====================================================================
Found a 15 line (105 tokens) duplication in the following files: 
Starting at line 1049 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1063 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                } else { // PlotOrientation.HORIZONTAL
                    Line2D line = new Line2D.Double();
                    double y0 = dataArea.getMinY();
                    double y1 = dataArea.getMaxY();
                    g2.setPaint(im.getOutlinePaint());
                    g2.setStroke(im.getOutlineStroke());
                    if (range.contains(start)) {
                        line.setLine(start2d, y0, start2d, y1);
                        g2.draw(line);
                    }
                    if (range.contains(end)) {
                        line.setLine(end2d, y0, end2d, y1);
                        g2.draw(line);
                    }
                }
=====================================================================
Found a 19 line (105 tokens) duplication in the following files: 
Starting at line 978 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                            dataArea.getMaxY());
                    break;
                default:
                    throw new IllegalStateException("Unrecognised orientation.");
            }

            final Composite originalComposite = g2.getComposite();
            g2.setComposite(AlphaComposite.getInstance(
                    AlphaComposite.SRC_OVER, marker.getAlpha()));
            g2.setPaint(marker.getPaint());
            g2.setStroke(marker.getStroke());
            g2.draw(line);

            String label = marker.getLabel();
            RectangleAnchor anchor = marker.getLabelAnchor();
            if (label != null) {
                Font labelFont = marker.getLabelFont();
                g2.setFont(labelFont);
                Point2D coords = calculateDomainMarkerTextAnchorPoint(
=====================================================================
Found a 17 line (105 tokens) duplication in the following files: 
Starting at line 685 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                    uvalue = intervalXYData.getEndXValue(series, item);
                    if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }
                    if (!Double.isNaN(lvalue)) {
                        minimum = Math.min(minimum, lvalue);
                        maximum = Math.max(maximum, lvalue);
                    }
                    if (!Double.isNaN(uvalue)) {
                        minimum = Math.min(minimum, uvalue);
                        maximum = Math.max(maximum, uvalue);
                    }
                }
            }
        }
        else {
=====================================================================
Found a 13 line (105 tokens) duplication in the following files: 
Starting at line 382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 403 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11011
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
=====================================================================
Found a 12 line (105 tokens) duplication in the following files: 
Starting at line 429 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 747 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);

        // TBLRC
        // 11111 - all
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 19 line (105 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/LegendItemEntityTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/XYItemEntityTest.java

                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);

        e1.setDataset(new DefaultCategoryDataset<String, String>());
=====================================================================
Found a 30 line (104 tokens) duplication in the following files: 
Starting at line 296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java

    }

    /**
     * Calculates the space required for the axes.
     *
     * @param g2  the graphics device.
     * @param plotArea  the plot area.
     *
     * @return The space required for the axes.
     */
    @Override
    protected AxisSpace calculateAxisSpace(Graphics2D g2,
                                           Rectangle2D plotArea) {

        AxisSpace space = new AxisSpace();
        PlotOrientation orientation = getOrientation();

        // work out the space required by the domain axis...
        AxisSpace fixed = getFixedDomainAxisSpace();
        if (fixed != null) {
            if (orientation == PlotOrientation.HORIZONTAL) {
                space.setLeft(fixed.getLeft());
                space.setRight(fixed.getRight());
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space.setTop(fixed.getTop());
                space.setBottom(fixed.getBottom());
            }
        }
        else {
=====================================================================
Found a 26 line (104 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 346 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

        double value = dataValue.doubleValue();
        double base = getBase();
        double lclip = getLowerClip();
        double uclip = getUpperClip();
        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
            if (value >= uclip) {
                return; // bar is not visible
            }
            base = uclip;
            if (value <= lclip) {
                value = lclip;
            }
        } else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
            if (value >= uclip) {
                value = uclip;
            }
            else {
                if (value <= lclip) {
                    value = lclip;
                }
            }
        } else { // cases 9, 10, 11 and 12
            if (value <= lclip) {
                return; // bar is not visible
            }
            base = lclip;
=====================================================================
Found a 13 line (104 tokens) duplication in the following files: 
Starting at line 999 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1202 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                        LengthAdjustmentType.EXPAND, anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(originalComposite);
        } else if (marker instanceof IntervalMarker) {
=====================================================================
Found a 8 line (104 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testGetValue() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(
=====================================================================
Found a 25 line (103 tokens) duplication in the following files: 
Starting at line 783 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 926 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 540 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                    TextAnchor rotationAnchor;
                    double angle = 0.0;
                    if (isVerticalTickLabels()) {
                        anchor = TextAnchor.CENTER_RIGHT;
                        rotationAnchor = TextAnchor.CENTER_RIGHT;
                        if (edge == RectangleEdge.TOP) {
                            angle = Math.PI / 2.0;
                        }
                        else {
                            angle = -Math.PI / 2.0;
                        }
                    }
                    else {
                        if (edge == RectangleEdge.TOP) {
                            anchor = TextAnchor.BOTTOM_CENTER;
                            rotationAnchor = TextAnchor.BOTTOM_CENTER;
                        }
                        else {
                            anchor = TextAnchor.TOP_CENTER;
                            rotationAnchor = TextAnchor.TOP_CENTER;
                        }
                    }

                    Tick tick = new NumberTick(currentTickValue, tickLabel, 
                            anchor, rotationAnchor, angle);
=====================================================================
Found a 10 line (103 tokens) duplication in the following files: 
Starting at line 212 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java

        if (this.topBlock != null) {
            this.topBlock.setBounds(new Rectangle2D.Double(0.0, 0.0, width,
                    h[0]));
        }
        if (this.bottomBlock != null) {
            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0,
                    height - h[1], width, h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
=====================================================================
Found a 42 line (103 tokens) duplication in the following files: 
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

    }

    /**
     * Adds a block to be managed by this instance.  This method is usually
     * called by the {@link BlockContainer}, you shouldn't need to call it
     * directly.
     *
     * @param block  the block.
     * @param key  a key that controls the position of the block.
     */
    @Override
    public void add(Block block, Object key) {
        // since the flow layout is relatively straightforward,
        // no information needs to be recorded here
    }

    /**
     * Calculates and sets the bounds of all the items in the specified
     * container, subject to the given constraint.  The {@code Graphics2D}
     * can be used by some items (particularly items containing text) to
     * calculate sizing parameters.
     *
     * @param container  the container whose items are being arranged.
     * @param constraint  the size constraint.
     * @param g2  the graphics device.
     *
     * @return The size of the container after arrangement of the contents.
     */
    @Override
    public Size2D arrange(BlockContainer container, Graphics2D g2,
                          RectangleConstraint constraint) {

        LengthConstraintType w = constraint.getWidthConstraintType();
        LengthConstraintType h = constraint.getHeightConstraintType();
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
                return arrangeNF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
=====================================================================
Found a 15 line (103 tokens) duplication in the following files: 
Starting at line 496 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/WaterfallBarRenderer.java

        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
=====================================================================
Found a 25 line (103 tokens) duplication in the following files: 
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/CategoryToPieDataset.java
Starting at line 399 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues.java

        if (that.getItemCount() != count) {
            return false;
        }
        for (int i = 0; i < count; i++) {
            Comparable k1 = getKey(i);
            Comparable k2 = that.getKey(i);
            if (!k1.equals(k2)) {
                return false;
            }

            Number v1 = getValue(i);
            Number v2 = that.getValue(i);
            if (v1 == null) {
                if (v2 != null) {
                    return false;
                }
            }
            else {
                if (!v1.equals(v2)) {
                    return false;
                }
            }
        }
        return true;
    }
=====================================================================
Found a 40 line (103 tokens) duplication in the following files: 
Starting at line 505 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues2D.java
Starting at line 449 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/KeyedObjects2D.java

                Number v2 = kv2D.getValue(r, c);
                if (v1 == null) {
                    if (v2 != null) {
                        return false;
                    }
                }
                else {
                    if (!v1.equals(v2)) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

    /**
     * Returns a hash code.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result;
        result = this.rowKeys.hashCode();
        result = 29 * result + this.columnKeys.hashCode();
        result = 29 * result + this.rows.hashCode();
        return result;
    }

    /**
     * Returns a clone.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 17 line (103 tokens) duplication in the following files: 
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryLabelEntityTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/LegendItemEntityTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/TickLabelEntityTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/XYItemEntityTest.java

                "R2", "C2");
        assertEquals(e1, e2);

        e1.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertNotEquals(e1, e2);
        e2.setArea(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
        assertEquals(e1, e2);

        e1.setToolTipText("New ToolTip");
        assertNotEquals(e1, e2);
        e2.setToolTipText("New ToolTip");
        assertEquals(e1, e2);

        e1.setURLText("New URL");
        assertNotEquals(e1, e2);
        e2.setURLText("New URL");
        assertEquals(e1, e2);
=====================================================================
Found a 22 line (103 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomCategoryURLGeneratorTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomXYURLGeneratorTest.java

        CustomCategoryURLGenerator g2 = new CustomCategoryURLGenerator();
        assertEquals(g1, g2);
        List<String> u1 = new ArrayList<>();
        u1.add("URL A1");
        u1.add("URL A2");
        u1.add("URL A3");
        g1.addURLSeries(u1);
        assertNotEquals(g1, g2);
        List<String> u2 = new ArrayList<>();
        u2.add("URL A1");
        u2.add("URL A2");
        u2.add("URL A3");
        g2.addURLSeries(u2);
        assertEquals(g1, g2);
    }

    /**
     * Confirm that cloning works.
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 47 line (102 tokens) duplication in the following files: 
Starting at line 389 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            AxisSpace subSpace = plot.calculateRangeAxisSpace(g2,
                    this.subplotAreas[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot within the specified area on a graphics device.
     *
     * @param g2  the graphics device.
     * @param area  the plot area (in Java2D space).
     * @param anchor  an anchor point in Java2D space ({@code null}
     *                permitted).
     * @param parentState  the state from the parent plot, if there is one
     *                     ({@code null} permitted).
     * @param info  collects chart drawing information ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);
=====================================================================
Found a 32 line (102 tokens) duplication in the following files: 
Starting at line 643 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 626 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            p.setFixedRangeAxisSpace(space, false);
        }
    }

    /**
     * Handles a 'click' on the plot by updating the anchor values.
     *
     * @param x  x-coordinate, where the click occurred.
     * @param y  y-coordinate, where the click occurred.
     * @param info  object containing information about the plot dimensions.
     */
    @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
        Rectangle2D dataArea = info.getDataArea();
        if (dataArea.contains(x, y)) {
            for (int i = 0; i < this.subplots.size(); i++) {
                XYPlot subplot = (XYPlot) this.subplots.get(i);
                PlotRenderingInfo subplotInfo = info.getSubplotInfo(i);
                subplot.handleClick(x, y, subplotInfo);
            }
        }
    }

    /**
     * Receives notification of a change to the plot's dataset.
     * <P>
     * The axis ranges are updated if necessary.
     *
     * @param event  information about the event (not used here).
     */
    @Override
    public void datasetChanged(DatasetChangeEvent event) {
=====================================================================
Found a 27 line (102 tokens) duplication in the following files: 
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java

                }
            }
        }

        double translatedBase;
        double translatedValue;
        boolean positive = (value > 0.0);
        boolean inverted = rangeAxis.isInverted();
        RectangleEdge barBase;
        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            }
            else {
                barBase = RectangleEdge.LEFT;
            }
        }
        else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            }
            else {
                barBase = RectangleEdge.TOP;
            }
        }
        RectangleEdge location = plot.getRangeAxisEdge();
        if (value > 0.0) {
=====================================================================
Found a 17 line (102 tokens) duplication in the following files: 
Starting at line 514 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        XYDataset dataset = plot.getDataset(datasetIndex);
        if (dataset != null) {
            if (getItemVisible(series, 0)) {
                String label = getLegendItemLabelGenerator().generateLabel(
                        dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
                Shape shape = lookupLegendShape(series);
=====================================================================
Found a 23 line (102 tokens) duplication in the following files: 
Starting at line 375 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 522 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

        double dataAreaX = dataArea.getHeight();
        double maxBoxPercent = 0.1;
        double maxBoxWidth = dataAreaX * maxBoxPercent;
        if (exactBoxWidth <= 0.0) {
            int itemCount = boxAndWhiskerData.getItemCount(series);
            exactBoxWidth = dataAreaX / itemCount * 4.5 / 7;
            if (exactBoxWidth < 3) {
                width = 3;
            }
            else if (exactBoxWidth > maxBoxWidth) {
                width = maxBoxWidth;
            }
            else {
                width = exactBoxWidth;
            }
        }

        g2.setPaint(getItemPaint(series, item));
        Stroke s = getItemStroke(series, item);
        g2.setStroke(s);

        // draw the upper shadow
        g2.draw(new Line2D.Double(yyMax, xx, yyQ3Median, xx));
=====================================================================
Found a 14 line (102 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java

                    Dimension d = component.getMinimumSize();
                    if (this.colWidth[c] < d.width) {
                        this.colWidth[c] = d.width;
                    }
                    if (this.rowHeight[r] < d.height) {
                        this.rowHeight[r] = d.height;
                    }
                }
            }
            int totalHeight = this.vGap * (nrows - 1);
            for (int r = 0; r < nrows; r++) {
                totalHeight = totalHeight + this.rowHeight[r];
            }
            int totalWidth = this.colWidth[0] + this.labelGap 
=====================================================================
Found a 18 line (102 tokens) duplication in the following files: 
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        assertEquals(1005.2819262292991, axis.getUpperBound(), EPSILON);
    }

    /**
     * Checks that the auto-range for the domain axis on an XYPlot is
     * working as expected.
     */
    @Test
    public void testXYAutoRange1() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 18 line (102 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 306 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        assertEquals(3.1694019256486126, axis.getUpperBound(), EPSILON);
    }

    /**
     * Checks that the auto-range for the range axis on an XYPlot is
     * working as expected.
     */
    @Test
    public void testXYAutoRange2() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 10 line (102 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java

    public void testEquals() {
        DefaultCategoryDataset<String, String> d = new DefaultCategoryDataset<>();
        d.addValue(1.0, "R1", "C1");
        d.addValue(2.0, "R1", "C2");
        d.addValue(3.0, "R2", "C1");
        d.addValue(4.0, "R2", "C2");
        CategoryItemEntity<String, String> e1 = new CategoryItemEntity<>(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), "ToolTip", "URL", d, 
                "R2", "C2");
        CategoryItemEntity<String, String> e2 = new CategoryItemEntity<>(
=====================================================================
Found a 8 line (102 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultIntervalCategoryDatasetTest.java

    public void testGetValue() {
        double[] starts_S1 = new double[] {0.1, 0.2, 0.3};
        double[] starts_S2 = new double[] {0.3, 0.4, 0.5};
        double[] ends_S1 = new double[] {0.5, 0.6, 0.7};
        double[] ends_S2 = new double[] {0.7, 0.8, 0.9};
        double[][] starts = new double[][] {starts_S1, starts_S2};
        double[][] ends = new double[][] {ends_S1, ends_S2};
        DefaultIntervalCategoryDataset d = new DefaultIntervalCategoryDataset(
=====================================================================
Found a 7 line (102 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

    public void testKeys() {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        s1.add(new Task("Task 3", new Date(20L), new Date(21L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 13 line (101 tokens) duplication in the following files: 
Starting at line 1073 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 999 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1202 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                        marker.getLabelOffset(), marker.getLabelOffsetType(),
                        anchor);
                Rectangle2D r = TextUtils.calcAlignedStringBounds(label, 
                        g2, (float) coords.getX(), (float) coords.getY(), 
                        marker.getLabelTextAnchor());
                g2.setPaint(marker.getLabelBackgroundColor());
                g2.fill(r);
                g2.setPaint(marker.getLabelPaint());
                TextUtils.drawAlignedString(label, g2,
                        (float) coords.getX(), (float) coords.getY(),
                        marker.getLabelTextAnchor());
            }
            g2.setComposite(savedComposite);
=====================================================================
Found a 30 line (101 tokens) duplication in the following files: 
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java

    }

    /**
     * Calculates the bar width and stores it in the renderer state.  We
     * override the method in the base class to take account of the
     * series-to-group mapping.
     *
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param rendererIndex  the renderer index.
     * @param state  the renderer state.
     */
    @Override
    protected void calculateBarWidth(CategoryPlot plot, Rectangle2D dataArea,
            int rendererIndex, CategoryItemRendererState state) {

        // calculate the bar width
        CategoryAxis xAxis = plot.getDomainAxisForDataset(rendererIndex);
        CategoryDataset data = plot.getDataset(rendererIndex);
        if (data != null) {
            PlotOrientation orientation = plot.getOrientation();
            double space = 0.0;
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
            int groups = this.seriesToGroupMap.getGroupCount();
=====================================================================
Found a 12 line (101 tokens) duplication in the following files: 
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java

    public void testEquals() {
        CategoryLabelPositions p1 = new CategoryLabelPositions(
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
        CategoryLabelPositions p2 = new CategoryLabelPositions(
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
        assertEquals(p1, p2);
=====================================================================
Found a 22 line (101 tokens) duplication in the following files: 
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(null, 2.0, 0.0, 4.0, 0.5, 4.5, 
                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }

    /**
     * Draws a chart where the dataset contains a null median value.
     */
    @Test
    public void testDrawWithNullMedian() {
=====================================================================
Found a 21 line (101 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("Series 1");
        s1.add(1.0, 1.0, 1.0, 2.0);
        s1.add(2.0, 2.0, 2.0, 2.0);
        s1.add(3.0, 3.0, 3.0, 3.0);
        assertEquals(3, s1.getItemCount());

        s1.remove(2.0);
        assertEquals(3.0, s1.getX(1));

        s1.remove(1.0);
        assertEquals(3.0, s1.getX(0));
    }

    private static final double EPSILON = 0.0000000001;

    /**
     * When items are added with duplicate x-values, we expect them to remain
     * in the order they were added.
     */
    @Test
    public void testAdditionOfDuplicateXValues() {
=====================================================================
Found a 25 line (100 tokens) duplication in the following files: 
Starting at line 972 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 1023 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

                    TextAnchor anchor;
                    TextAnchor rotationAnchor;
                    double angle = 0.0;
                    if (isVerticalTickLabels()) {
                        if (edge == RectangleEdge.LEFT) {
                            anchor = TextAnchor.BOTTOM_CENTER;
                            rotationAnchor = TextAnchor.BOTTOM_CENTER;
                            angle = -Math.PI / 2.0;
                        }
                        else {
                            anchor = TextAnchor.BOTTOM_CENTER;
                            rotationAnchor = TextAnchor.BOTTOM_CENTER;
                            angle = Math.PI / 2.0;
                        }
                    }
                    else {
                        if (edge == RectangleEdge.LEFT) {
                            anchor = TextAnchor.CENTER_RIGHT;
                            rotationAnchor = TextAnchor.CENTER_RIGHT;
                        }
                        else {
                            anchor = TextAnchor.CENTER_LEFT;
                            rotationAnchor = TextAnchor.CENTER_LEFT;
                        }
                    }
=====================================================================
Found a 14 line (100 tokens) duplication in the following files: 
Starting at line 3399 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3070 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        drawAnnotations(g2, dataArea);

        if (this.shadowGenerator != null && !suppressShadow) {
            BufferedImage shadowImage = this.shadowGenerator.createDropShadow(
                    dataImage);
            g2 = savedG2;
            g2.drawImage(shadowImage, (int) dataArea.getX()
                    + this.shadowGenerator.calculateOffsetX(),
                    (int) dataArea.getY()
                    + this.shadowGenerator.calculateOffsetY(), null);
            g2.drawImage(dataImage, (int) dataArea.getX(),
                    (int) dataArea.getY(), null);
        }
        g2.setClip(savedClip);
=====================================================================
Found a 24 line (100 tokens) duplication in the following files: 
Starting at line 274 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

        fireChangeEvent();
    }

    /**
     * Removes a subplot from the combined chart and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param subplot  the subplot ({@code null} not permitted).
     */
    public void remove(XYPlot subplot) {
        Args.nullNotPermitted(subplot, "subplot");
        int position = -1;
        int size = this.subplots.size();
        int i = 0;
        while (position == -1 && i < size) {
            if (this.subplots.get(i) == subplot) {
                position = i;
            }
            i++;
        }
        if (position != -1) {
            this.subplots.remove(position);
            subplot.setParent(null);
            subplot.removeChangeListener(this);
=====================================================================
Found a 18 line (100 tokens) duplication in the following files: 
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 281 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                space = xAxis.reserveSpace(g2, this, plotArea, xEdge, space);
            }
        }

        Rectangle2D adjustedPlotArea = space.shrink(plotArea, null);

        // work out the maximum height or width of the non-shared axes...
        int n = this.subplots.size();
        int totalWeight = 0;
        for (int i = 0; i < n; i++) {
            XYPlot sub = (XYPlot) this.subplots.get(i);
            totalWeight += sub.getWeight();
        }
        this.subplotAreas = new Rectangle2D[n];
        double x = adjustedPlotArea.getX();
        double y = adjustedPlotArea.getY();
        double usableSize = 0.0;
        if (orientation == PlotOrientation.HORIZONTAL) {
=====================================================================
Found a 15 line (100 tokens) duplication in the following files: 
Starting at line 534 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);
        CategoryDataset dataset = plot.getDataset(rendererIndex);
        if (dataset != null) {
            int columns = dataset.getColumnCount();
            int rows = dataset.getRowCount();
            double space = 0.0;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
            double categoryMargin = 0.0;
=====================================================================
Found a 89 line (100 tokens) duplication in the following files: 
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

    }

    /**
     * Returns the paint used for the error indicators.
     *
     * @return The paint used for the error indicators (possibly
     *         {@code null}).
     *
     * @see #setErrorIndicatorPaint(Paint)
     */
    public Paint getErrorIndicatorPaint() {
        return this.errorIndicatorPaint;
    }

    /**
     * Sets the paint used for the error indicators (if {@code null},
     * the item outline paint is used instead) and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} permitted).
     *
     * @see #getErrorIndicatorPaint()
     */
    public void setErrorIndicatorPaint(Paint paint) {
        this.errorIndicatorPaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the stroke used to draw the error indicators.  If this is
     * {@code null}, the renderer will use the item outline stroke).
     *
     * @return The stroke (possibly {@code null}).
     *
     * @see #setErrorIndicatorStroke(Stroke)
     */
    public Stroke getErrorIndicatorStroke() {
        return this.errorIndicatorStroke;
    }

    /**
     * Sets the stroke used to draw the error indicators, and sends a
     * {@link RendererChangeEvent} to all registered listeners.  If you set
     * this to {@code null}, the renderer will use the item outline
     * stroke.
     *
     * @param stroke  the stroke ({@code null} permitted).
     *
     * @see #getErrorIndicatorStroke()
     */
    public void setErrorIndicatorStroke(Stroke stroke) {
        this.errorIndicatorStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the range of values the renderer requires to display all the
     * items from the specified dataset. This takes into account the range
     * between the min/max values, possibly ignoring invisible series.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range (or {@code null} if the dataset is
     *         {@code null} or empty).
     */
    @Override
    public Range findRangeBounds(CategoryDataset dataset) {
         return findRangeBounds(dataset, true);
    }

    /**
     * Draws the bar with its standard deviation line range for a single
     * (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param data  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset data, int row, int column,
=====================================================================
Found a 33 line (100 tokens) duplication in the following files: 
Starting at line 221 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 844 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

    }

    /**
     * Draws the item (first pass). This method draws the lines
     * connecting the items. Instead of drawing separate lines,
     * a {@code GeneralPath} is constructed and drawn at the end of
     * the series painting.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param dataset  the dataset.
     * @param pass  the pass.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataArea  the area within which the data is being drawn.
     */
    protected void drawPrimaryLineAsPath(XYItemRendererState state,
                                         Graphics2D g2, XYPlot plot, XYDataset dataset, int pass,
                                         int series, int item, ValueAxis domainAxis, ValueAxis rangeAxis,
                                         Rectangle2D dataArea) {

        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();

        // get the data point...
        double x1 = dataset.getXValue(series, item);
        double y1 = dataset.getYValue(series, item);
        double transX1 = domainAxis.valueToJava2D(x1, dataArea, xAxisLocation);
        double transY1 = rangeAxis.valueToJava2D(y1, dataArea, yAxisLocation);
=====================================================================
Found a 16 line (100 tokens) duplication in the following files: 
Starting at line 269 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

                double yleft = (y0 + y1) / 2.0 + stackLeft[1];
                float transYLeft
                    = (float) rangeAxis.valueToJava2D(yleft, dataArea, edge1);
                if (orientation == PlotOrientation.VERTICAL) {
                    left.moveTo(transX1, transY1);
                    left.lineTo(transX1, transStack1);
                    left.lineTo(transXLeft, transStackLeft);
                    left.lineTo(transXLeft, transYLeft);
                } else {
                    left.moveTo(transY1, transX1);
                    left.lineTo(transStack1, transX1);
                    left.lineTo(transStackLeft, transXLeft);
                    left.lineTo(transYLeft, transXLeft);
                }
                left.closePath();
            } else {
=====================================================================
Found a 16 line (100 tokens) duplication in the following files: 
Starting at line 301 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 383 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

                double yright = (y1 + y2) / 2.0 + stackRight[1];
                float transYRight
                    = (float) rangeAxis.valueToJava2D(yright, dataArea, edge1);
                if (orientation == PlotOrientation.VERTICAL) {
                    right.moveTo(transX1, transStack1);
                    right.lineTo(transX1, transY1);
                    right.lineTo(transXRight, transYRight);
                    right.lineTo(transXRight, transStackRight);
                } else {
                    right.moveTo(transStack1, transX1);
                    right.lineTo(transY1, transX1);
                    right.lineTo(transYRight, transXRight);
                    right.lineTo(transStackRight, transXRight);
                }
                right.closePath();
            }
=====================================================================
Found a 31 line (100 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

            sumX += x;
            sumY += y;
            double xx = x * x;
            sumXX += xx;
            double xy = x * y;
            sumXY += xy;
        }
        double sxx = sumXX - (sumX * sumX) / n;
        double sxy = sumXY - (sumX * sumY) / n;
        double xbar = sumX / n;
        double ybar = sumY / n;

        double[] result = new double[2];
        result[1] = sxy / sxx;
        result[0] = ybar - result[1] * xbar;

        return result;

    }

    /**
     * Returns the parameters 'a' and 'b' for an equation y = a + bx, fitted to
     * the data using ordinary least squares regression. The result is returned
     * as a double[], where result[0] --&gt; a, and result[1] --&gt; b.
     *
     * @param data  the data.
     * @param series  the series (zero-based index).
     *
     * @return The parameters.
     */
    public static double[] getOLSRegression(XYDataset data, int series) {
=====================================================================
Found a 18 line (100 tokens) duplication in the following files: 
Starting at line 528 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesCollection.java
Starting at line 564 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesCollection.java

            int count = series.getItemCount();
            if (count > 0) {
                RegularTimePeriod start = series.getTimePeriod(0);
                RegularTimePeriod end = series.getTimePeriod(count - 1);
                Range temp;
                if (!includeInterval) {
                    temp = new Range(getX(start), getX(end));
                }
                else {
                    temp = new Range(
                            start.getFirstMillisecond(this.workingCalendar),
                            end.getLastMillisecond(this.workingCalendar));
                }
                result = Range.combine(result, temp);
            }
        }
        return result;
    }
=====================================================================
Found a 10 line (100 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/CategoryItemEntityTest.java

    public void testEquals() {
        DefaultCategoryDataset<String, String> d = new DefaultCategoryDataset<>();
        d.addValue(1.0, "R1", "C1");
        d.addValue(2.0, "R1", "C2");
        d.addValue(3.0, "R2", "C1");
        d.addValue(4.0, "R2", "C2");
        CategoryItemEntity<String, String> e1 = new CategoryItemEntity<>(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), "ToolTip", "URL", d, 
                "R2", "C2");
        CategoryItemEntity<String, String> e2 = new CategoryItemEntity<>(
=====================================================================
Found a 23 line (100 tokens) duplication in the following files: 
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.setRangeAxisLocation(AxisLocation.TOP_OR_RIGHT);
        assertEquals(plot1, plot2);

        // rangeAxisLocations...
        plot1.setRangeAxisLocation(11, AxisLocation.TOP_OR_RIGHT);
        assertNotEquals(plot1, plot2);
        plot2.setRangeAxisLocation(11, AxisLocation.TOP_OR_RIGHT);
        assertEquals(plot1, plot2);

        // datasetToDomainAxisMap...
        plot1.mapDatasetToDomainAxis(11, 11);
        assertNotEquals(plot1, plot2);
        plot2.mapDatasetToDomainAxis(11, 11);
        assertEquals(plot1, plot2);

        // datasetToRangeAxisMap...
        plot1.mapDatasetToRangeAxis(11, 11);
        assertNotEquals(plot1, plot2);
        plot2.mapDatasetToRangeAxis(11, 11);
        assertEquals(plot1, plot2);

        // renderer - no longer a separate field but test anyway...
        plot1.setRenderer(new AreaRenderer());
=====================================================================
Found a 7 line (100 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

                u1, 0, 5);
        TaskSeries<String> s2 = new TaskSeries<>("Series");
        s2.add(new Task("Task 1", new Date(0L), new Date(1L)));
        s2.add(new Task("Task 2", new Date(10L), new Date(11L)));
        s2.add(new Task("Task 3", new Date(20L), new Date(21L)));
        TaskSeriesCollection<String, String> u2 = new TaskSeriesCollection<>();
        u2.add(s2);
=====================================================================
Found a 22 line (99 tokens) duplication in the following files: 
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java

        RectangleEdge rangeAxisLocation = plot.getRangeAxisEdge();

        // Y0
        Number value0 = dataset.getEndValue(row, column);
        if (value0 == null) {
            return;
        }
        double java2dValue0 = rangeAxis.valueToJava2D(value0.doubleValue(),
                dataArea, rangeAxisLocation);

        // Y1
        Number value1 = dataset.getStartValue(row, column);
        if (value1 == null) {
            return;
        }
        double java2dValue1 = rangeAxis.valueToJava2D(value1.doubleValue(),
                dataArea, rangeAxisLocation);

        if (java2dValue1 < java2dValue0) {
            double temp = java2dValue1;
            java2dValue1 = java2dValue0;
            java2dValue0 = temp;
=====================================================================
Found a 28 line (99 tokens) duplication in the following files: 
Starting at line 346 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

        GradientBarPainter that = (GradientBarPainter) obj;
        if (this.g1 != that.g1) {
            return false;
        }
        if (this.g2 != that.g2) {
            return false;
        }
        if (this.g3 != that.g3) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int hash = 37;
        hash = HashUtils.hashCode(hash, this.g1);
        hash = HashUtils.hashCode(hash, this.g2);
        hash = HashUtils.hashCode(hash, this.g3);
        return hash;
    }

}
=====================================================================
Found a 22 line (99 tokens) duplication in the following files: 
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(null, 2.0, 0.0, 4.0, 0.5, 4.5, 
                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }

    /**
     * Draws a chart where the dataset contains a null median value.
     */
    @Test
    public void testDrawWithNullMedian() {
=====================================================================
Found a 19 line (99 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRendererTest.java

        StatisticalBarRenderer r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * Draws the chart with a {@code null} info object to make sure that
     * no exceptions are thrown (particularly by code in the renderer).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            DefaultStatisticalCategoryDataset<String, String> dataset
                    = new DefaultStatisticalCategoryDataset<>();
            dataset.add(1.0, 2.0, "S1", "C1");
            dataset.add(3.0, 4.0, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
=====================================================================
Found a 9 line (99 tokens) duplication in the following files: 
Starting at line 1400 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        series.add(1.0, 5.0);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));
        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));
        
        series.add(2.0, 10.0);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));
        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);
        assertEquals(6.25, DatasetUtils.findYValue(dataset, 0, 1.25), EPSILON);
=====================================================================
Found a 19 line (99 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

            Minute m = new Minute(new Date(0L));
            assertEquals(1970, m.getHour().getYear());
            assertEquals(1, m.getHour().getMonth());
            assertEquals(1, m.getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getHour().getHour());
            assertEquals(0, m.getMinute());
            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the minute-hour constructor should use it.
     */
    @Test
    public void testMinuteHourConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 9 line (99 tokens) duplication in the following files: 
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        VectorSeries<String> series = new VectorSeries<>("Series", false, true);
        series.add(5.0, 5.50, 5.50, 5.50);
        series.add(5.1, 5.51, 5.51, 5.51);
        series.add(6.0, 6.6, 6.6, 6.6);
        series.add(3.0, 3.3, 3.3, 3.3);
        series.add(4.0, 4.4, 4.4, 4.4);
        series.add(2.0, 2.2, 2.2, 2.2);
        series.add(1.0, 1.1, 1.1, 1.1);
        assertEquals(5.5, series.getVectorXValue(0), EPSILON);
=====================================================================
Found a 45 line (98 tokens) duplication in the following files: 
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/AxisEntity.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/JFreeChartEntity.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/PlotEntity.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/TitleEntity.java

        result = HashUtils.hashCode(result, getToolTipText());
        result = HashUtils.hashCode(result, getURLText());
        return result;
    }

    /**
     * Returns a clone of the entity.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem cloning the
     *         entity.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeShape(getArea(), stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        setArea(SerialUtils.readShape(stream));
    }

}
=====================================================================
Found a 34 line (98 tokens) duplication in the following files: 
Starting at line 2223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Clears all the domain markers for the plot and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @see #clearRangeMarkers()
     */
    public void clearDomainMarkers() {
        if (this.backgroundDomainMarkers != null) {
            Set<Integer> keys = this.backgroundDomainMarkers.keySet();
            for (Integer key : keys) {
                clearDomainMarkers(key);
            }
            this.backgroundDomainMarkers.clear();
        }
        if (this.foregroundDomainMarkers != null) {
            Set<Integer> keys = this.foregroundDomainMarkers.keySet();
            for (Integer key : keys) {
                clearDomainMarkers(key);
            }
            this.foregroundDomainMarkers.clear();
        }
        fireChangeEvent();
    }

    /**
     * Returns the list of domain markers (read only) for the specified layer.
     *
     * @param layer  the layer (foreground or background).
     *
     * @return The list of domain markers.
     */
    public Collection<CategoryMarker> getDomainMarkers(Layer layer) {
=====================================================================
Found a 36 line (98 tokens) duplication in the following files: 
Starting at line 2471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2390 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Clears all the range markers for the plot and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @see #clearDomainMarkers()
     */
    public void clearRangeMarkers() {
        if (this.backgroundRangeMarkers != null) {
            Set<Integer> keys = this.backgroundRangeMarkers.keySet();
            for (Integer key : keys) {
                clearRangeMarkers(key);
            }
            this.backgroundRangeMarkers.clear();
        }
        if (this.foregroundRangeMarkers != null) {
            Set<Integer> keys = this.foregroundRangeMarkers.keySet();
            for (Integer key : keys) {
                clearRangeMarkers(key);
            }
            this.foregroundRangeMarkers.clear();
        }
        fireChangeEvent();
    }

    /**
     * Returns the list of range markers (read only) for the specified layer.
     *
     * @param layer  the layer (foreground or background).
     *
     * @return The list of range markers.
     *
     * @see #getRangeMarkers(int, Layer)
     */
    public Collection<Marker> getRangeMarkers(Layer layer) {
=====================================================================
Found a 24 line (98 tokens) duplication in the following files: 
Starting at line 603 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

                    lineVisible, new Line2D.Double(-7.0, 0.0, 7.0, 0.0),
                    getItemStroke(series, 0), getItemPaint(series, 0));
            result.setLabelFont(lookupLegendTextFont(series));
            Paint labelPaint = lookupLegendTextPaint(series);
            if (labelPaint != null) {
                result.setLabelPaint(labelPaint);
            }
            result.setDataset(dataset);
            result.setDatasetIndex(datasetIndex);
            result.setSeriesKey(dataset.getRowKey(series));
            result.setSeriesIndex(series);
            return result;
        }
        return null;

    }

    /**
     * This renderer uses two passes to draw the data.
     *
     * @return The pass count ({@code 2} for this renderer).
     */
    @Override
    public int getPassCount() {
=====================================================================
Found a 12 line (98 tokens) duplication in the following files: 
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 362 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

            double[][] d1 = this.seriesList.get(i);
            double[][] d2 = (double[][]) that.seriesList.get(i);
            double[] d1x = d1[0];
            double[] d2x = d2[0];
            if (!Arrays.equals(d1x, d2x)) {
                return false;
            }
            double[] d1y = d1[1];
            double[] d2y = d2[1];
            if (!Arrays.equals(d1y, d2y)) {
                return false;
            }
=====================================================================
Found a 22 line (98 tokens) duplication in the following files: 
Starting at line 453 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java

        plot2.setRangeZeroBaselineStroke(new BasicStroke(1.23f));
        assertEquals(plot1, plot2);

        // shadowGenerator
        plot1.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,
                0.6f, 4, -Math.PI / 4));
        assertNotEquals(plot1, plot2);
        plot2.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,
                0.6f, 4, -Math.PI / 4));
        assertEquals(plot1, plot2);

        plot1.setShadowGenerator(null);
        assertNotEquals(plot1, plot2);
        plot2.setShadowGenerator(null);
        assertEquals(plot1, plot2);
    }

    /**
     * This test covers a flaw in the ObjectList equals() method.
     */
    @Test
    public void testEquals_ObjectList() {
=====================================================================
Found a 18 line (98 tokens) duplication in the following files: 
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java

        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a horizontal bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
=====================================================================
Found a 19 line (98 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 420 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

            Minute m = new Minute(new Date(0L));
            assertEquals(1970, m.getHour().getYear());
            assertEquals(1, m.getHour().getMonth());
            assertEquals(1, m.getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getHour().getHour());
            assertEquals(0, m.getMinute());
            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the minute-hour constructor should use it.
     */
    @Test
    public void testMinuteHourConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 19 line (97 tokens) duplication in the following files: 
Starting at line 488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java
Starting at line 582 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

    protected List refreshTicksHorizontal(Graphics2D g2, Rectangle2D dataArea,
            RectangleEdge edge) {

        List ticks = new java.util.ArrayList();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);

        double size = getTickUnit().getSize();
        int count = calculateVisibleTickCount();
        double lowestTickValue = calculateLowestVisibleTickValue();

        double previousDrawnTickLabelPos = 0.0;
        double previousDrawnTickLabelLength = 0.0;

        if (count <= ValueAxis.MAXIMUM_TICK_COUNT) {
            for (int i = 0; i < count; i++) {
                double currentTickValue = lowestTickValue + (i * size);
                double xx = valueToJava2D(currentTickValue, dataArea, edge);
=====================================================================
Found a 14 line (97 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/CloneUtils.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/CloneUtils.java

    public static <T> T copy(T object) throws CloneNotSupportedException {
        if (object == null) {
            return null;
        }
        if (object instanceof PublicCloneable) {
            PublicCloneable pc = (PublicCloneable) object;
            return (T) pc.clone();
        } else {
            try {
                Method method = object.getClass().getMethod("clone",
                        (Class[]) null);
                if (Modifier.isPublic(method.getModifiers())) {
                    return (T) method.invoke(object, (Object[]) null);
                } else {
=====================================================================
Found a 17 line (97 tokens) duplication in the following files: 
Starting at line 3646 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3664 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java

                    for (int column = 0; column < columnCount; column++) {
                        if (this.rowRenderingOrder == SortOrder.ASCENDING) {
                            for (int row = 0; row < rowCount; row++) {
                                renderer.drawItem(g2, state, dataArea, this,
                                        domainAxis, rangeAxis, currentDataset,
                                        row, column, pass);
                            }
                        }
                        else {
                            for (int row = rowCount - 1; row >= 0; row--) {
                                renderer.drawItem(g2, state, dataArea, this,
                                        domainAxis, rangeAxis, currentDataset,
                                        row, column, pass);
                            }
                        }
                    }
                }
=====================================================================
Found a 17 line (97 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
        Paint outlinePaint = lookupSeriesOutlinePaint(series);
        Stroke outlineStroke = lookupSeriesOutlineStroke(series);
=====================================================================
Found a 28 line (97 tokens) duplication in the following files: 
Starting at line 300 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            String rowKeyPrefix, String columnKeyPrefix, double[][] data) {

        DefaultCategoryDataset<String, String> result = new DefaultCategoryDataset<>();
        for (int r = 0; r < data.length; r++) {
            String rowKey = rowKeyPrefix + (r + 1);
            for (int c = 0; c < data[r].length; c++) {
                String columnKey = columnKeyPrefix + (c + 1);
                result.addValue(data[r][c], rowKey, columnKey);
            }
        }
        return result;

    }

    /**
     * Creates a {@link CategoryDataset} that contains a copy of the data in
     * an array.
     * <p>
     * Row and column keys are created by appending 0, 1, 2, ... to the
     * supplied prefixes.
     *
     * @param rowKeyPrefix  the row key prefix.
     * @param columnKeyPrefix  the column key prefix.
     * @param data  the data.
     *
     * @return The dataset.
     */
    public static CategoryDataset<String, String> createCategoryDataset(
=====================================================================
Found a 22 line (97 tokens) duplication in the following files: 
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(null, 2.0, 0.0, 4.0, 0.5, 4.5, 
                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }

    /**
     * Draws a chart where the dataset contains a null median value.
     */
    @Test
    public void testDrawWithNullMedian() {
=====================================================================
Found a 8 line (97 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        d.addSeries("S4", new double[][] {{1.0, 2.0, 1.5}, {9.9, 9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 0.0, 1.1));
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 1.0, 2.2));
        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 3, 2.0, 3.3));
        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4));

        // check a series with four items
        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,
=====================================================================
Found a 10 line (97 tokens) duplication in the following files: 
Starting at line 1396 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        XYSeries<String> series = new XYSeries<>("S1");
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>(series);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 100.0)));
        
        series.add(1.0, 5.0);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));
        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));
        
        series.add(2.0, 10.0);
=====================================================================
Found a 24 line (97 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/CategoryTableXYDatasetTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/CategoryTableXYDatasetTest.java

        d1.add(2.0, 2.2, "Series 1");

        CategoryTableXYDataset d2 = CloneUtils.clone(d1);
        assertNotSame(d1, d2);
        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        d1.add(3.0, 3.3, "Series 1");
        assertNotEquals(d1, d2);
        d2.add(3.0, 3.3, "Series 1");
        assertEquals(d1, d2);

        d1.setIntervalPositionFactor(0.33);
        assertNotEquals(d1, d2);
        d2.setIntervalPositionFactor(0.33);
        assertEquals(d1, d2);
    }

    /**
     * Another check for cloning - making sure it works for a customised
     * interval delegate.
     */
    @Test
    public void testCloning2() throws CloneNotSupportedException {
=====================================================================
Found a 46 line (96 tokens) duplication in the following files: 
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java

        result = 37 * result + this.stroke.hashCode();
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
        this.stroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 19 line (96 tokens) duplication in the following files: 
Starting at line 684 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java

    protected void selectHorizontalAutoTickUnit(Graphics2D g2,
            Rectangle2D dataArea, RectangleEdge edge) {

        // select a tick unit that is the next one bigger than the current
        // (log) range divided by 50
        Range range = getRange();
        double logAxisMin = calculateLog(Math.max(this.smallestValue, 
                range.getLowerBound()));
        double logAxisMax = calculateLog(range.getUpperBound());
        double size = (logAxisMax - logAxisMin) / 50;
        TickUnitSource tickUnits = getStandardTickUnits();
        TickUnit candidate = tickUnits.getCeilingTickUnit(size);
        TickUnit prevCandidate = candidate;
        boolean found = false;
        while (!found) {
        // while the tick labels overlap and there are more tick sizes available,
            // choose the next bigger label
            this.tickUnit = (NumberTickUnit) candidate;
            double tickLabelWidth = estimateMaximumTickLabelWidth(g2, 
=====================================================================
Found a 47 line (96 tokens) duplication in the following files: 
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            AxisSpace subSpace = plot.calculateRangeAxisSpace(g2,
                    this.subplotAreas[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each of the
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
     public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
=====================================================================
Found a 46 line (96 tokens) duplication in the following files: 
Starting at line 390 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

                    this.subplotAreas[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot within the specified area on a graphics device.
     *
     * @param g2  the graphics device.
     * @param area  the plot area (in Java2D space).
     * @param anchor  an anchor point in Java2D space ({@code null}
     *                permitted).
     * @param parentState  the state from the parent plot, if there is one
     *                     ({@code null} permitted).
     * @param info  collects chart drawing information ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);
=====================================================================
Found a 18 line (96 tokens) duplication in the following files: 
Starting at line 274 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

                (rectHeight - (seriesCount - 1 - row) * shift * 2));

        if (state.getElementHinting()) {
            beginElementGroup(g2, dataset.getRowKey(row), 
                    dataset.getColumnKey(column));
        }
        
        Paint itemPaint = getItemPaint(row, column);
        GradientPaintTransformer t = getGradientPaintTransformer();
        if (t != null && itemPaint instanceof GradientPaint) {
            itemPaint = t.transform((GradientPaint) itemPaint, bar);
        }
        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
=====================================================================
Found a 28 line (96 tokens) duplication in the following files: 
Starting at line 398 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/ComparableObjectSeries.java
Starting at line 916 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeries.java

        ComparableObjectSeries that = (ComparableObjectSeries) obj;
        if (this.maximumItemCount != that.maximumItemCount) {
            return false;
        }
        if (this.autoSort != that.autoSort) {
            return false;
        }
        if (this.allowDuplicateXValues != that.allowDuplicateXValues) {
            return false;
        }
        if (!Objects.equals(this.data, that.data)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = super.hashCode();
        // it is too slow to look at every data item, so let's just look at
        // the first, middle and last items...
        int count = getItemCount();
        if (count > 0) {
=====================================================================
Found a 50 line (96 tokens) duplication in the following files: 
Starting at line 476 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesCollection.java
Starting at line 479 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeTableXYDataset.java

        }
        return result;
    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getLowerBound();
        }
        return result;
    }

    /**
     * Returns the maximum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getDomainUpperBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getUpperBound();
        }
        return result;
    }

    /**
     * Returns the range of the values in this dataset's domain.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getDomainBounds(boolean includeInterval) {
=====================================================================
Found a 18 line (96 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java

        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // basic check for independence
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertNotEquals(d1, d2);
        TaskSeriesCollection<String, String> u2
                = (TaskSeriesCollection) d2.getUnderlyingDataset();
        TaskSeries<String> s2 = u2.getSeries("Series");
        s2.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertEquals(d1, d2);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
=====================================================================
Found a 31 line (96 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYIntervalSeriesCollectionTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("s1");
        c.addSeries(s1);
        c.removeSeries(0);
        assertEquals(0, c.getSeriesCount());
        c.addSeries(s1);

        boolean pass = false;
        try {
            c.removeSeries(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            c.removeSeries(1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * A test for bug report 1170825 (originally affected XYSeriesCollection,
     * this test is just copied over).
     */
    @Test
    public void test1170825() {
=====================================================================
Found a 11 line (95 tokens) duplication in the following files: 
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

    public void testXYAutoRange1() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getDomainAxis();
=====================================================================
Found a 22 line (95 tokens) duplication in the following files: 
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 444 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(null, 2.0, 0.0, 4.0, 0.5, 4.5, 
                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }

    /**
     * Draws a chart where the dataset contains a null median value.
     */
    @Test
    public void testDrawWithNullMedian() {
=====================================================================
Found a 14 line (95 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java

    public void testRemoveSeries() {
        TimeSeriesCollection<String> c1 = new TimeSeriesCollection<>();

        TimeSeries<String> s1 = new TimeSeries<>("Series 1");
        TimeSeries<String> s2 = new TimeSeries<>("Series 2");
        TimeSeries<String> s3 = new TimeSeries<>("Series 3");
        TimeSeries<String> s4 = new TimeSeries<>("Series 4");

        c1.addSeries(s1);
        c1.addSeries(s2);
        c1.addSeries(s3);
        c1.addSeries(s4);

        c1.removeSeries(s3);
=====================================================================
Found a 13 line (94 tokens) duplication in the following files: 
Starting at line 690 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 722 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java

        double start = getCategoryStart(categoryIndex, categoryCount, area,
                edge);
        double end = getCategoryEnd(categoryIndex, categoryCount, area, edge);
        double width = end - start;
        if (seriesCount == 1) {
            return start + width / 2.0;
        }
        else {
            double gap = (width * itemMargin) / (seriesCount - 1);
            double ww = (width * (1 - itemMargin)) / seriesCount;
            return start + (seriesIndex * (ww + gap)) + ww / 2.0;
        }
    }
=====================================================================
Found a 31 line (94 tokens) duplication in the following files: 
Starting at line 1310 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Maps a dataset to a particular range axis.
     *
     * @param index  the dataset index (zero-based).
     * @param axisIndex  the axis index (zero-based).
     *
     * @see #getRangeAxisForDataset(int)
     */
    public void mapDatasetToRangeAxis(int index, int axisIndex) {
        List<Integer> axisIndices = new ArrayList<>(1);
        axisIndices.add(axisIndex);
        mapDatasetToRangeAxes(index, axisIndices);
    }

    /**
     * Maps the specified dataset to the axes in the list.  Note that the
     * conversion of data values into Java2D space is always performed using
     * the first axis in the list.
     *
     * @param index  the dataset index (zero-based).
     * @param axisIndices  the axis indices ({@code null} permitted).
     */
    public void mapDatasetToRangeAxes(int index, List<Integer> axisIndices) {
        Args.requireNonNegative(index, "index");
        checkAxisIndices(axisIndices);
        this.datasetToRangeAxesMap.put(index, new ArrayList<>(axisIndices));
        // fake a dataset change event to update axes...
        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));
    }
=====================================================================
Found a 12 line (94 tokens) duplication in the following files: 
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 297 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

        this.subplotArea = new Rectangle2D[n];
        double x = adjustedPlotArea.getX();
        double y = adjustedPlotArea.getY();
        double usableSize = 0.0;
        if (orientation == PlotOrientation.VERTICAL) {
            usableSize = adjustedPlotArea.getWidth() - this.gap * (n - 1);
        }
        else if (orientation == PlotOrientation.HORIZONTAL) {
            usableSize = adjustedPlotArea.getHeight() - this.gap * (n - 1);
        }

        for (int i = 0; i < n; i++) {
=====================================================================
Found a 27 line (94 tokens) duplication in the following files: 
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/MiddlePinNeedle.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/ShipNeedle.java

        shape.add(new Area(pointer));
        if ((rotate != null) && (angle != 0)) {
            /// we have rotation
            getTransform().setToRotation(angle, rotate.getX(), rotate.getY());
            shape.transform(getTransform());
        }

        defaultDisplay(g2, shape);

    }

    /**
     * Tests another object for equality with this object.
     *
     * @param object  the object to test.
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object object) {
        if (object == null) {
            return false;
        }
        if (object == this) {
            return true;
        }
        if (super.equals(object) && object instanceof MiddlePinNeedle) {
=====================================================================
Found a 19 line (94 tokens) duplication in the following files: 
Starting at line 364 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java
Starting at line 907 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        if (this.outerRadius != that.outerRadius) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return The hash code.
     */
    @Override
    public int hashCode() {
        int result = 193;
        long temp = Double.doubleToLongBits(this.lowerBound);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.upperBound);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.innerRadius);
=====================================================================
Found a 49 line (94 tokens) duplication in the following files: 
Starting at line 319 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/IntervalXYDelegate.java

        return getY(series, item);
    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getLowerBound();
        }
        return result;
    }

    /**
     * Returns the maximum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getDomainUpperBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getUpperBound();
        }
        return result;
    }

    /**
     * Returns the range of the values in this dataset's domain.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getDomainBounds(boolean includeInterval) {
=====================================================================
Found a 49 line (94 tokens) duplication in the following files: 
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesCollection.java
Starting at line 299 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/IntervalXYDelegate.java

    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getLowerBound();
        }
        return result;
    }

    /**
     * Returns the maximum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getDomainUpperBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getUpperBound();
        }
        return result;
    }

    /**
     * Returns the range of the values in this dataset's domain.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getDomainBounds(boolean includeInterval) {
        Range result = null;
=====================================================================
Found a 69 line (94 tokens) duplication in the following files: 
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

        double[][] seriesArray = this.seriesList.get(series);
        return seriesArray[0].length;
    }

    /**
     * Returns the x-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The x-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getX(int, int)
     */
    @Override
    public double getXValue(int series, int item) {
        double[][] seriesData = this.seriesList.get(series);
        return seriesData[0][item];
    }

    /**
     * Returns the x-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The x-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getXValue(int, int)
     */
    @Override
    public Number getX(int series, int item) {
        return getXValue(series, item);
    }

    /**
     * Returns the y-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The y-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getY(int, int)
     */
    @Override
    public double getYValue(int series, int item) {
        double[][] seriesData = this.seriesList.get(series);
=====================================================================
Found a 12 line (94 tokens) duplication in the following files: 
Starting at line 622 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 641 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 9 line (94 tokens) duplication in the following files: 
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
        assertEquals(0.8, r.getLowerBound(), EPSILON);
=====================================================================
Found a 10 line (93 tokens) duplication in the following files: 
Starting at line 582 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 607 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

            if (axisEdge == RectangleEdge.LEFT) {
                for (int i = 0; i < this.subdivisions; i++) {
                    double v = base + (i * increment);
                    Paint p = this.scale.getPaint(v);
                    double vv0 = this.axis.valueToJava2D(v, target,
                            RectangleEdge.LEFT);
                    double vv1 = this.axis.valueToJava2D(v + increment, target,
                            RectangleEdge.LEFT);
                    double hh = Math.abs(vv1 - vv0) + 1.0;
                    r.setRect(target.getMaxX() - this.stripWidth,
=====================================================================
Found a 8 line (93 tokens) duplication in the following files: 
Starting at line 454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 380 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java

        temp = Double.doubleToLongBits(this.extent);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.innerRadius);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.outerRadius);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        result = 37 * result + HashUtils.hashCodeForPaint(
                this.backgroundPaint);
=====================================================================
Found a 53 line (93 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialCap.java
Starting at line 438 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPointer.java

        this.radius = radius;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint used to fill the cap.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setFillPaint(Paint)
     */
    public Paint getFillPaint() {
        return this.fillPaint;
    }

    /**
     * Sets the paint for the cap background and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getFillPaint()
     */
    public void setFillPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.fillPaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint used to draw the outline of the cap.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setOutlinePaint(Paint)
     */
    public Paint getOutlinePaint() {
        return this.outlinePaint;
    }

    /**
     * Sets the paint used to draw the outline of the cap and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getOutlinePaint()
     */
    public void setOutlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.outlinePaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }
=====================================================================
Found a 17 line (93 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 828 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 468 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 576 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

        CategoryDataset dataset = cp.getDataset(datasetIndex);
        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
        Paint outlinePaint = lookupSeriesOutlinePaint(series);
=====================================================================
Found a 7 line (93 tokens) duplication in the following files: 
Starting at line 1018 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 711 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

    private void drawHighFarOut(double aRadius, Graphics2D g2, double xx,
                                double m) {
        double side = aRadius * 2;
        g2.draw(new Line2D.Double(xx - side, m + side, xx + side, m + side));
        g2.draw(new Line2D.Double(xx - side, m + side, xx, m));
        g2.draw(new Line2D.Double(xx + side, m + side, xx, m));
    }
=====================================================================
Found a 9 line (93 tokens) duplication in the following files: 
Starting at line 2670 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/util/ExportUtils.java

        Args.nullNotPermitted(file, "file");
        try {
            Class<?> pdfDocClass = Class.forName("com.orsonpdf.PDFDocument");
            Object pdfDoc = pdfDocClass.getDeclaredConstructor().newInstance();
            Method m = pdfDocClass.getMethod("createPage", Rectangle2D.class);
            Rectangle2D rect = new Rectangle(w, h);
            Object page = m.invoke(pdfDoc, rect);
            Method m2 = page.getClass().getMethod("getGraphics2D");
            Graphics2D g2 = (Graphics2D) m2.invoke(page);
=====================================================================
Found a 48 line (93 tokens) duplication in the following files: 
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesCollection.java
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeTableXYDataset.java
Starting at line 299 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/IntervalXYDelegate.java

    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getLowerBound();
        }
        return result;
    }

    /**
     * Returns the maximum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The maximum value.
     */
    @Override
    public double getDomainUpperBound(boolean includeInterval) {
        double result = Double.NaN;
        Range r = getDomainBounds(includeInterval);
        if (r != null) {
            result = r.getUpperBound();
        }
        return result;
    }

    /**
     * Returns the range of the values in this dataset's domain.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The range.
     */
    @Override
    public Range getDomainBounds(boolean includeInterval) {
=====================================================================
Found a 11 line (93 tokens) duplication in the following files: 
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 736 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(14.0, size.width, EPSILON);
        assertEquals(16.0, size.height, EPSILON);

        // TBLRC
        // 11110
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        size = container.arrange(g2);
=====================================================================
Found a 15 line (93 tokens) duplication in the following files: 
Starting at line 453 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java
Starting at line 396 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.setRangeZeroBaselineStroke(new BasicStroke(1.23f));
        assertEquals(plot1, plot2);

        // shadowGenerator
        plot1.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,
                0.6f, 4, -Math.PI / 4));
        assertNotEquals(plot1, plot2);
        plot2.setShadowGenerator(new DefaultShadowGenerator(5, Color.GRAY,
                0.6f, 4, -Math.PI / 4));
        assertEquals(plot1, plot2);

        plot1.setShadowGenerator(null);
        assertNotEquals(plot1, plot2);
        plot2.setShadowGenerator(null);
        assertEquals(plot1, plot2);
=====================================================================
Found a 12 line (93 tokens) duplication in the following files: 
Starting at line 1217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testDomainMarkerIndices() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
        
        // add a second dataset, plotted against a second x axis
        DefaultCategoryDataset<String, String> dataset2 = new DefaultCategoryDataset<>();
        dataset2.setValue(1, "R1", "C1");
        plot.setDataset(99, dataset);    
=====================================================================
Found a 18 line (93 tokens) duplication in the following files: 
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java

        XYPlot<?> plot = (XYPlot<?>) this.chart.getPlot();
        XYItemRenderer renderer = plot.getRenderer();
        StandardXYToolTipGenerator tt = new StandardXYToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        XYToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Create a chart for testing.
     *
     * @return The chart.
     */
    private static JFreeChart createChart() {
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(1.0, 1.0);
        series1.add(2.0, 2.0);
        series1.add(3.0, 3.0);
=====================================================================
Found a 29 line (93 tokens) duplication in the following files: 
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultXYDataset<String> d = createSampleDataset1();
        assertEquals("S1", d.getSeriesKey(0));
        assertEquals("S2", d.getSeriesKey(1));

        // check for series key out of bounds
        boolean pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(2);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the indexOf(Comparable) method.
     */
    @Test
    public void testIndexOf() {
=====================================================================
Found a 24 line (92 tokens) duplication in the following files: 
Starting at line 1500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 924 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

                    tickLabel = this.tickUnit.dateToString(tickDate);
                }
                TextAnchor anchor, rotationAnchor;
                double angle = 0.0;
                if (isVerticalTickLabels()) {
                    anchor = TextAnchor.CENTER_RIGHT;
                    rotationAnchor = TextAnchor.CENTER_RIGHT;
                    if (edge == RectangleEdge.TOP) {
                        angle = Math.PI / 2.0;
                    }
                    else {
                        angle = -Math.PI / 2.0;
                    }
                }
                else {
                    if (edge == RectangleEdge.TOP) {
                        anchor = TextAnchor.BOTTOM_CENTER;
                        rotationAnchor = TextAnchor.BOTTOM_CENTER;
                    }
                    else {
                        anchor = TextAnchor.TOP_CENTER;
                        rotationAnchor = TextAnchor.TOP_CENTER;
                    }
                }
=====================================================================
Found a 26 line (92 tokens) duplication in the following files: 
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java
Starting at line 279 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

    protected Size2D arrangeFR(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        RectangleConstraint c1 = constraint.toUnconstrainedHeight();
        Size2D size1 = arrange(container, g2, c1);

        if (constraint.getHeightRange().contains(size1.getHeight())) {
            return size1;
        }
        else {
            double h = constraint.getHeightRange().constrain(size1.getHeight());
            RectangleConstraint c2 = constraint.toFixedHeight(h);
            return arrange(container, g2, c2);
        }
    }

    /**
     * Arrange with a fixed height and a width within a given range.
     *
     * @param container  the container.
     * @param constraint  the constraint.
     * @param g2  the graphics device.
     *
     * @return The size of the arrangement.
     */
    protected Size2D arrangeRF(BlockContainer container, Graphics2D g2,
=====================================================================
Found a 26 line (92 tokens) duplication in the following files: 
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java
Starting at line 254 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

    protected Size2D arrangeRF(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        RectangleConstraint c1 = constraint.toUnconstrainedWidth();
        Size2D size1 = arrange(container, g2, c1);

        if (constraint.getWidthRange().contains(size1.getWidth())) {
            return size1;
        }
        else {
            double w = constraint.getWidthRange().constrain(size1.getWidth());
            RectangleConstraint c2 = constraint.toFixedWidth(w);
            return arrange(container, g2, c2);
        }
    }

    /**
     * Arrange with a fixed width and no height constraint.
     *
     * @param container  the container.
     * @param constraint  the constraint.
     * @param g2  the graphics device.
     *
     * @return The size of the arrangement.
     */
    protected Size2D arrangeRN(BlockContainer container, Graphics2D g2,
=====================================================================
Found a 16 line (92 tokens) duplication in the following files: 
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

    public void remove(XYPlot subplot) {
        Args.nullNotPermitted(subplot, "subplot");
        int position = -1;
        int size = this.subplots.size();
        int i = 0;
        while (position == -1 && i < size) {
            if (this.subplots.get(i) == subplot) {
                position = i;
            }
            i++;
        }
        if (position != -1) {
            this.subplots.remove(position);
            subplot.setParent(null);
            subplot.removeChangeListener(this);
            ValueAxis domain = getDomainAxis();
=====================================================================
Found a 62 line (92 tokens) duplication in the following files: 
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the font used to display the label.
     *
     * @return The font (never {@code null}).
     *
     * @see #setFont(Font)
     */
    public Font getFont() {
        return this.font;
    }

    /**
     * Sets the font used to display the label and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param font  the font ({@code null} not permitted).
     *
     * @see #getFont()
     */
    public void setFont(Font font) {
        Args.nullNotPermitted(font, "font");
        this.font = font;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint used to display the label.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setPaint(Paint)
     */
    public Paint getPaint() {
        return this.paint;
    }

    /**
     * Sets the paint used to display the label and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getPaint()
     */
    public void setPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.paint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the angle used to calculate the anchor point.
     *
     * @return The angle (in degrees).
     *
     * @see #setAngle(double)
     * @see #getRadius()
     */
    public double getAngle() {
=====================================================================
Found a 17 line (92 tokens) duplication in the following files: 
Starting at line 61 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/RendererUtils.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/RendererUtils.java

    public static int findLiveItemsLowerBound(XYDataset dataset, int series,
            double xLow, double xHigh) {
        Args.nullNotPermitted(dataset, "dataset");
        if (xLow >= xHigh) {
            throw new IllegalArgumentException("Requires xLow < xHigh.");
        }
        int itemCount = dataset.getItemCount(series);
        if (itemCount <= 1) {
            return 0;
        }
        if (dataset.getDomainOrder() == DomainOrder.ASCENDING) {
            // for data in ascending order by x-value, we are (broadly) looking
            // for the index of the highest x-value that is less than xLow
            int low = 0;
            int high = itemCount - 1;
            double lowValue = dataset.getXValue(series, low);
            if (lowValue >= xLow) {
=====================================================================
Found a 41 line (92 tokens) duplication in the following files: 
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultTableXYDataset.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java

    public XYSeries<S> getSeries(int series) {
        Args.requireInRange(series, "series", 0, this.data.size() - 1);
        return this.data.get(series);
    }

    /**
     * Returns the key for a series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The key for a series.
     */
    @Override
    public S getSeriesKey(int series) {
        // check arguments...delegated
        return getSeries(series).getKey();
    }

    /**
     * Returns the number of items in the specified series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The number of items in the specified series.
     */
    @Override
    public int getItemCount(int series) {
        // check arguments...delegated
        return getSeries(series).getItemCount();
    }

    /**
     * Returns the x-value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The x-value for the specified series and item.
     */
    @Override
    public Number getX(int series, int item) {
=====================================================================
Found a 18 line (92 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        assertEquals(2.6066426411261268E7, axis.getUpperBound(), EPSILON);
    }

    /**
     * A simple test for the auto-range calculation looking at a
     * NumberAxis used as the range axis for a CategoryPlot.  In this
     * case, the original dataset is replaced with a new dataset.
     */
    @Test
    public void testAutoRange3() {
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        dataset.setValue(100.0, "Row 1", "Column 1");
        dataset.setValue(200.0, "Row 1", "Column 2");
        JFreeChart chart = ChartFactory.createLineChart("Test", "Categories",
                "Value", dataset, PlotOrientation.VERTICAL, false, false,
                false);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) chart.getPlot();
=====================================================================
Found a 12 line (92 tokens) duplication in the following files: 
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 23 line (92 tokens) duplication in the following files: 
Starting at line 282 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.setAnchorValue(100.0);
        assertEquals(plot1, plot2);

        // rangeCrosshairVisible
        plot1.setRangeCrosshairVisible(true);
        assertNotEquals(plot1, plot2);
        plot2.setRangeCrosshairVisible(true);
        assertEquals(plot1, plot2);

        // rangeCrosshairValue
        plot1.setRangeCrosshairValue(100.0);
        assertNotEquals(plot1, plot2);
        plot2.setRangeCrosshairValue(100.0);
        assertEquals(plot1, plot2);

        // rangeCrosshairStroke
        plot1.setRangeCrosshairStroke(stroke);
        assertNotEquals(plot1, plot2);
        plot2.setRangeCrosshairStroke(stroke);
        assertEquals(plot1, plot2);

        // rangeCrosshairPaint
        plot1.setRangeCrosshairPaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,
=====================================================================
Found a 13 line (92 tokens) duplication in the following files: 
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/PolarPlotTest.java
Starting at line 355 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/PolarPlotTest.java

        axis.setRange(0.0, 20.0);

        PolarPlot plot = new PolarPlot(null, axis, null);
        plot.setMargin(0);
        plot.setAngleOffset(0.0);

        Point point = plot.translateToJava2D(0.0, 10.0, axis, dataArea );
        assertEquals(75.0, point.getX(), 0.5);
        assertEquals(50.0, point.getY(), 0.5);

        point = plot.translateToJava2D(90.0, 5.0, axis, dataArea );
        assertEquals(50.0, point.getX(), 0.5);
        assertEquals(62.5, point.getY(), 0.5);
=====================================================================
Found a 16 line (92 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java
Starting at line 230 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        DefaultCategoryDataset<String,String> dataset0 = new DefaultCategoryDataset<>();
        dataset0.addValue(21.0, "R1", "C1");
        dataset0.addValue(22.0, "R2", "C1");
        DefaultCategoryDataset<String,String> dataset1 = new DefaultCategoryDataset<>();
        dataset1.addValue(23.0, "R3", "C1");
        dataset1.addValue(24.0, "R4", "C1");
        dataset1.addValue(25.0, "R5", "C1");
=====================================================================
Found a 29 line (92 tokens) duplication in the following files: 
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

public class ScatterPlotTest {

    /** A chart. */
    private JFreeChart chart;

    /**
     * Common test setup.
     */
    @BeforeEach
    public void setUp() {
        this.chart = createChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200, 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
          fail("No exception should be thrown.");
=====================================================================
Found a 19 line (92 tokens) duplication in the following files: 
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        @SuppressWarnings("unchecked")
        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
=====================================================================
Found a 10 line (92 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 249 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java

    public void test2502355_zoomInDomain() {
        DefaultXYDataset<String> dataset = new DefaultXYDataset<>();
        JFreeChart chart = ChartFactory.createXYLineChart("TestChart", "X",
                "Y", dataset, PlotOrientation.VERTICAL, false, false, false);
        XYPlot<?> plot = (XYPlot<?>) chart.getPlot();
        plot.setDomainAxis(1, new NumberAxis("X2"));
        ChartPanel panel = new ChartPanel(chart);
        chart.addChangeListener(this);
        this.chartChangeEvents.clear();
        panel.zoomInDomain(1.0, 2.0);
=====================================================================
Found a 10 line (92 tokens) duplication in the following files: 
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 267 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 303 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java

    public void test2502355_zoomInRange() {
        DefaultXYDataset<String> dataset = new DefaultXYDataset<>();
        JFreeChart chart = ChartFactory.createXYLineChart("TestChart", "X",
                "Y", dataset, PlotOrientation.VERTICAL, false, false, false);
        XYPlot<?> plot = (XYPlot<?>) chart.getPlot();
        plot.setRangeAxis(1, new NumberAxis("X2"));
        ChartPanel panel = new ChartPanel(chart);
        chart.addChangeListener(this);
        this.chartChangeEvents.clear();
        panel.zoomInRange(1.0, 2.0);
=====================================================================
Found a 10 line (92 tokens) duplication in the following files: 
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java
Starting at line 1076 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

    public void testGetRangeBounds2() {
        TimeZone tzone = TimeZone.getTimeZone("Europe/London");
        Calendar calendar = new GregorianCalendar(tzone, Locale.UK);
        calendar.clear();
        calendar.set(2014, Calendar.FEBRUARY, 23, 6, 0);
        long start = calendar.getTimeInMillis();
        calendar.clear();
        calendar.set(2014, Calendar.FEBRUARY, 24, 18, 0);
        long end = calendar.getTimeInMillis();
        Range range = new Range(start, end);
=====================================================================
Found a 8 line (92 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        DefaultXYDataset<String> d1 = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
        XYBarDataset<String> bd1 = new XYBarDataset<>(d1, 5.0);
        XYBarDataset<String> bd2 = CloneUtils.clone(bd1);
=====================================================================
Found a 12 line (91 tokens) duplication in the following files: 
Starting at line 1324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

        Rectangle2D labelBounds = TextUtils.getTextBounds(label, g2, fm);

        if (edge == RectangleEdge.TOP) {
            AffineTransform t = AffineTransform.getRotateInstance(
                    getLabelAngle(), labelBounds.getCenterX(),
                    labelBounds.getCenterY());
            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
            labelBounds = rotatedLabelBounds.getBounds2D();
            double labelx = labelLocationX(this.labelLocation, dataArea);
            double labely = state.getCursor() - insets.getBottom()
                            - labelBounds.getHeight() / 2.0;
            TextAnchor anchor = labelAnchorH(this.labelLocation);
=====================================================================
Found a 34 line (91 tokens) duplication in the following files: 
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 339 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Configures the axis.  This method is typically called when an axis
     * is assigned to a new plot.
     */
    @Override
    public void configure() {
        if (isAutoRange()) {
            autoAdjustRange();
        }
    }

    /**
     * Adjusts the axis range to match the data range that the axis is
     * required to display.
     */
    @Override
    protected void autoAdjustRange() {
        Plot plot = getPlot();
        if (plot == null) {
            return;  // no plot, no data
        }

        if (plot instanceof ValueAxisPlot) {
            ValueAxisPlot vap = (ValueAxisPlot) plot;

            Range r = vap.getDataRange(this);
            if (r == null) {
                r = getDefaultAutoRange();
            }

            double upper = r.getUpperBound();
            double lower = Math.max(r.getLowerBound(), this.smallestValue);
=====================================================================
Found a 37 line (91 tokens) duplication in the following files: 
Starting at line 514 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 847 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Calculates the positions of the tick labels for the axis, storing the
     * results in the tick label list (ready for drawing).
     *
     * @param g2  the graphics device.
     * @param state  the axis state.
     * @param dataArea  the area in which the plot should be drawn.
     * @param edge  the location of the axis.
     *
     * @return A list of ticks.
     */
    @Override
    public List refreshTicks(Graphics2D g2, AxisState state,
            Rectangle2D dataArea, RectangleEdge edge) {
        List result = new java.util.ArrayList();
        if (RectangleEdge.isTopOrBottom(edge)) {
            result = refreshTicksHorizontal(g2, dataArea, edge);
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            result = refreshTicksVertical(g2, dataArea, edge);
        }
        return result;
    }
    
    /**
     * Returns a list of ticks for an axis at the top or bottom of the chart.
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param dataArea  the data area ({@code null} not permitted).
     * @param edge  the edge ({@code null} not permitted).
     *
     * @return A list of ticks.
     */
    protected List refreshTicksHorizontal(Graphics2D g2, Rectangle2D dataArea,
            RectangleEdge edge) {
=====================================================================
Found a 15 line (91 tokens) duplication in the following files: 
Starting at line 175 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

    public void remove(CategoryPlot subplot) {
        Args.nullNotPermitted(subplot, "subplot");
        int position = -1;
        int size = this.subplots.size();
        int i = 0;
        while (position == -1 && i < size) {
            if (this.subplots.get(i) == subplot) {
                position = i;
            }
            i++;
        }
        if (position != -1) {
            this.subplots.remove(position);
            subplot.setParent(null);
            subplot.removeChangeListener(this);
=====================================================================
Found a 40 line (91 tokens) duplication in the following files: 
Starting at line 578 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 520 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                rangeAxis.pan(panRange);
            }
        }
    }

    /**
     * Returns the subplot (if any) that contains the (x, y) point (specified
     * in Java2D space).
     *
     * @param info  the chart rendering info ({@code null} not permitted).
     * @param source  the source point ({@code null} not permitted).
     *
     * @return A subplot (possibly {@code null}).
     */
    public XYPlot findSubplot(PlotRenderingInfo info, Point2D source) {
        Args.nullNotPermitted(info, "info");
        Args.nullNotPermitted(source, "source");
        XYPlot result = null;
        int subplotIndex = info.getSubplotIndex(source);
        if (subplotIndex >= 0) {
            result =  (XYPlot) this.subplots.get(subplotIndex);
        }
        return result;
    }

    /**
     * Sets the item renderer FOR ALL SUBPLOTS.  Registered listeners are
     * notified that the plot has been modified.
     * <P>
     * Note: usually you will want to set the renderer independently for each
     * subplot, which is NOT what this method does.
     *
     * @param renderer the new renderer.
     */
    @Override
    public void setRenderer(XYItemRenderer renderer) {
        super.setRenderer(renderer);  // not strictly necessary, since the
                                      // renderer set for the
                                      // parent plot is not used
        for (XYPlot p : this.subplots) {
=====================================================================
Found a 16 line (91 tokens) duplication in the following files: 
Starting at line 514 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1070 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

        XYDataset dataset = plot.getDataset(datasetIndex);
        if (dataset != null) {
            if (getItemVisible(series, 0)) {
                String label = getLegendItemLabelGenerator().generateLabel(
                        dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
=====================================================================
Found a 13 line (91 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java

    public Range findDomainBounds(XYDataset dataset) {
        Args.nullNotPermitted(dataset, "dataset");
        double minimum = Double.POSITIVE_INFINITY;
        double maximum = Double.NEGATIVE_INFINITY;
        int seriesCount = dataset.getSeriesCount();
        double lvalue;
        double uvalue;
        if (dataset instanceof VectorXYDataset) {
            VectorXYDataset vdataset = (VectorXYDataset) dataset;
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    double delta = vdataset.getVectorXValue(series, item);
=====================================================================
Found a 12 line (91 tokens) duplication in the following files: 
Starting at line 1145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testGetRendererForDataset2() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);

        // add a second dataset
        DefaultCategoryDataset<String, String> dataset2 = new DefaultCategoryDataset<>();
        dataset2.setValue(1, "R1", "C1");
        plot.setDataset(99, dataset2);
=====================================================================
Found a 19 line (91 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomCategoryURLGeneratorTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomXYURLGeneratorTest.java

        CustomCategoryURLGenerator g2 = CloneUtils.clone(g1);
        assertNotSame(g1, g2);
        assertSame(g1.getClass(), g2.getClass());
        assertEquals(g1, g2);

        // check independence
        List<String> u2 = new ArrayList<>();
        u2.add("URL XXX");
        g1.addURLSeries(u2);
        assertNotEquals(g1, g2);
        g2.addURLSeries(new ArrayList<>(u2));
        assertEquals(g1, g2);
    }

    /**
     * Checks that the class implements PublicCloneable.
     */
    @Test
    public void testPublicCloneable() {
=====================================================================
Found a 11 line (91 tokens) duplication in the following files: 
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java
Starting at line 256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java

        DefaultCategoryDataset<String,String> d = new DefaultCategoryDataset<>();
        d.removeValue("R1", "C1");
        d.addValue(1.0, "R1", "C1");
        d.removeValue("R1", "C1");
        assertEquals(0, d.getRowCount());
        assertEquals(0, d.getColumnCount());

        d.addValue(1.0, "R1", "C1");
        d.addValue(2.0, "R2", "C1");
        d.removeValue("R1", "C1");
        assertEquals(2.0, d.getValue(0, 0));
=====================================================================
Found a 8 line (91 tokens) duplication in the following files: 
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset, false);
=====================================================================
Found a 7 line (91 tokens) duplication in the following files: 
Starting at line 160 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/CategoryTableXYDatasetTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java

        d1.add(7.0, 2.2, "Series 1");
        assertEquals(3.0, d1.getXValue(0, 0), EPSILON);
        assertEquals(7.0, d1.getXValue(0, 1), EPSILON);
        assertEquals(1.0, d1.getStartXValue(0, 0), EPSILON);
        assertEquals(5.0, d1.getStartXValue(0, 1), EPSILON);
        assertEquals(5.0, d1.getEndXValue(0, 0), EPSILON);
        assertEquals(9.0, d1.getEndXValue(0, 1), EPSILON);
=====================================================================
Found a 17 line (91 tokens) duplication in the following files: 
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        s2 = new VectorSeries<>("s2", false, false);
        assertEquals(s1, s2);

        // add a value
        s1.add(1.0, 0.5, 1.5, 2.0);
        assertNotEquals(s1, s2);
        s2.add(1.0, 0.5, 1.5, 2.0);
        assertEquals(s2, s1);

        // add another value
        s1.add(2.0, 0.5, 1.5, 2.0);
        assertNotEquals(s1, s2);
        s2.add(2.0, 0.5, 1.5, 2.0);
        assertEquals(s2, s1);

        // remove a value
        s1.remove(new XYCoordinate(1.0, 0.5));
=====================================================================
Found a 15 line (90 tokens) duplication in the following files: 
Starting at line 480 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 606 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

                    if ((lastTick != null) && (lastX == x)
                            && (currentTickValue != cycleBound)) {
                        anchor = isInverted()
                            ? TextAnchor.BOTTOM_LEFT : TextAnchor.BOTTOM_RIGHT;
                        result.remove(result.size() - 1);
                        result.add(new CycleBoundTick(
                            this.boundMappedToLastCycle, lastTick.getNumber(),
                            lastTick.getText(), anchor, anchor,
                            lastTick.getAngle())
                        );
                        this.internalMarkerWhenTicksOverlap = true;
                        anchor = isInverted()
                            ? TextAnchor.BOTTOM_RIGHT : TextAnchor.BOTTOM_LEFT;
                    }
                    rotationAnchor = anchor;
=====================================================================
Found a 39 line (90 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

            return arrangeFR(container, g2, c);
        }
    }

    /**
     * Arranges the blocks in the container with a range constraint on the
     * width and a fixed height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeRF(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        Size2D s = arrangeNF(container, g2, constraint);
        if (constraint.getWidthRange().contains(s.width)) {
            return s;
        }
        else {
            RectangleConstraint c = constraint.toFixedWidth(
                    constraint.getWidthRange().constrain(s.getWidth()));
            return arrangeFF(container, g2, c);
        }
    }

    /**
     * Arranges the block with a range constraint on the width, and no
     * constraint on the height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size following the arrangement.
     */
    protected Size2D arrangeRN(BlockContainer container, Graphics2D g2,
=====================================================================
Found a 14 line (90 tokens) duplication in the following files: 
Starting at line 3439 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3044 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            if (getOrientation() == PlotOrientation.VERTICAL) {
                yy = yAxis.java2DToValue(anchor.getY(), dataArea, yAxisEdge);
            }
            else {
                yy = yAxis.java2DToValue(anchor.getX(), dataArea, yAxisEdge);
            }
            crosshairState.setCrosshairY(yy);
        }
        setRangeCrosshairValue(crosshairState.getCrosshairY(), false);
        if (isRangeCrosshairVisible()) {
            double y = getRangeCrosshairValue();
            Paint paint = getRangeCrosshairPaint();
            Stroke stroke = getRangeCrosshairStroke();
            drawRangeCrosshair(g2, dataArea, getOrientation(), y, yAxis,
=====================================================================
Found a 46 line (90 tokens) duplication in the following files: 
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

                    this.subplotAreas[i], null);
            space.ensureAtLeast(subSpace);

        }

        return space;
    }

    /**
     * Receives a chart element visitor.  Many plot subclasses will override
     * this method to handle their subcomponents.
     * 
     * @param visitor  the visitor ({@code null} not permitted).
     */
    @Override
    public void receive(ChartElementVisitor visitor) {
        subplots.forEach(subplot -> {
            subplot.receive(visitor);
        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each of the
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
     public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
=====================================================================
Found a 33 line (90 tokens) duplication in the following files: 
Starting at line 1085 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            g2.setComposite(savedComposite);
        }
    }

    /**
     * Calculates the {@code (x, y)} coordinates for drawing the label for a 
     * marker on the range axis.
     *
     * @param g2  the graphics device.
     * @param orientation  the plot orientation.
     * @param dataArea  the data area.
     * @param markerArea  the rectangle surrounding the marker.
     * @param markerOffset  the marker offset.
     * @param labelOffsetType  the label offset type.
     * @param anchor  the label anchor.
     *
     * @return The coordinates for drawing the marker label.
     */
    protected Point2D calculateDomainMarkerTextAnchorPoint(Graphics2D g2,
            PlotOrientation orientation, Rectangle2D dataArea,
            Rectangle2D markerArea, RectangleInsets markerOffset,
            LengthAdjustmentType labelOffsetType, RectangleAnchor anchor) {

        Rectangle2D anchorRect = null;
        if (orientation == PlotOrientation.HORIZONTAL) {
            anchorRect = markerOffset.createAdjustedRectangle(markerArea,
                    LengthAdjustmentType.CONTRACT, labelOffsetType);
        } else if (orientation == PlotOrientation.VERTICAL) {
            anchorRect = markerOffset.createAdjustedRectangle(markerArea,
                    labelOffsetType, LengthAdjustmentType.CONTRACT);
        }
        return anchor.getAnchorPoint(anchorRect);
    }
=====================================================================
Found a 23 line (90 tokens) duplication in the following files: 
Starting at line 1239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        if (!Objects.equals(this.defaultItemURLGenerator, that.defaultItemURLGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemLabelGenerator, that.legendItemLabelGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemURLGenerator, that.legendItemURLGenerator)) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a hash code for the renderer.
     *
     * @return The hash code.
     */
    @Override
    public int hashCode() {
        int result = super.hashCode();
=====================================================================
Found a 24 line (90 tokens) duplication in the following files: 
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 400 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        double lclip = getLowerClip();
        double uclip = getUpperClip();
        if (uclip <= 0.0) {  // cases 1, 2, 3 and 4
            if (value >= uclip) {
                return; // bar is not visible
            }
            base = uclip;
            if (value <= lclip) {
                value = lclip;
            }
        } else if (lclip <= 0.0) { // cases 5, 6, 7 and 8
            if (value >= uclip) {
                value = uclip;
            }
            else {
                if (value <= lclip) {
                    value = lclip;
                }
            }
        } else { // cases 9, 10, 11 and 12
            if (value <= lclip) {
                return; // bar is not visible
            }
            base = lclip;
=====================================================================
Found a 36 line (90 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/KeyHandler.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/ValueHandler.java

            throw new SAXException("Expecting </Key> but found " + qName);
        }

    }

    /**
     * Receives some (or all) of the text in the current element.
     *
     * @param ch  character buffer.
     * @param start  the start index.
     * @param length  the length of the valid character data.
     */
    @Override
    public void characters(char[] ch, int start, int length) {
        if (this.currentText != null) {
            this.currentText.append(String.copyValueOf(ch, start, length));
        }
    }

    /**
     * Returns the current text of the textbuffer.
     *
     * @return The current text.
     */
    protected String getCurrentText() {
        return this.currentText.toString();
    }

    /**
     * Removes all text from the textbuffer at the end of a CDATA section.
     */
    protected void clearCurrentText() {
        this.currentText.delete(0, this.currentText.length());
    }

}
=====================================================================
Found a 12 line (90 tokens) duplication in the following files: 
Starting at line 1307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testDomainMarkerIndices() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);
        
        // add a second dataset, plotted against a second x axis
        XYSeriesCollection<String> dataset2 = new XYSeriesCollection<>();
        dataset2.addSeries(new XYSeries<>("Series in dataset 2"));
        plot.setDataset(99, dataset);    
        NumberAxis xAxis2 = new NumberAxis("X2");
=====================================================================
Found a 16 line (90 tokens) duplication in the following files: 
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

        BarRenderer r = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset0, 
                new CategoryAxis("x"), new NumberAxis("y"), r);
        plot.setDataset(1, dataset1);
        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

    /**
     * Some checks for the findRangeBounds() method.
     */
    @Test
    public void testFindRangeBounds() {
=====================================================================
Found a 26 line (90 tokens) duplication in the following files: 
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                new NumberAxis("y"), new BoxAndWhiskerRenderer());
        JFreeChart chart = new JFreeChart(plot);
        boolean success;

        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    new ChartRenderingInfo());
            g2.dispose();
            success = true;
        }
        catch (Exception e) {
            success = false;
        }

        assertTrue(success);

    }

    /**
     * A check for bug 1572478 (for the horizontal orientation).
     */
    @Test
    public void testBug1572478Horizontal() {
=====================================================================
Found a 21 line (90 tokens) duplication in the following files: 
Starting at line 341 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 367 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }

    /**
     * Draws a chart where the dataset contains a null median value.
     */
    @Test
    public void testDrawWithNullMedian() {
=====================================================================
Found a 8 line (90 tokens) duplication in the following files: 
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1061 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 11 line (90 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java
Starting at line 185 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java

    public void testRemoveSeries_int() {
        OHLCSeriesCollection c1 = new OHLCSeriesCollection();
        OHLCSeries<String> s1 = new OHLCSeries<>("Series 1");
        OHLCSeries<String> s2 = new OHLCSeries<>("Series 2");
        OHLCSeries<String> s3 = new OHLCSeries<>("Series 3");
        OHLCSeries<String> s4 = new OHLCSeries<>("Series 4");
        c1.addSeries(s1);
        c1.addSeries(s2);
        c1.addSeries(s3);
        c1.addSeries(s4);
        c1.removeSeries(2);
=====================================================================
Found a 7 line (90 tokens) duplication in the following files: 
Starting at line 372 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

        s = (Second) s.next();
        assertEquals(2000, s.getMinute().getHour().getYear());
        assertEquals(12, s.getMinute().getHour().getMonth());
        assertEquals(12, s.getMinute().getHour().getDayOfMonth());
        assertEquals(1, s.getMinute().getHour().getHour());
        assertEquals(30, s.getMinute().getMinute());
        assertEquals(56, s.getSecond());
=====================================================================
Found a 7 line (90 tokens) duplication in the following files: 
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            s = (Second) s.next();
            assertEquals(1970, s.getMinute().getHour().getYear());
            assertEquals(1, s.getMinute().getHour().getMonth());
            assertEquals(1, s.getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, s.getMinute().getHour().getHour());
            assertEquals(0, s.getMinute().getMinute());
            assertEquals(1, s.getSecond());
=====================================================================
Found a 14 line (90 tokens) duplication in the following files: 
Starting at line 244 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("S1");
        s1.add(1.0, 1.1, 1.1, 1.1);
        s1.add(2.0, 2.2, 2.2, 2.2);
        s1.add(3.0, 3.3, 3.3, 3.3);
        s1.setMaximumItemCount(2);
        assertEquals(2.0, s1.getX(0).doubleValue(), EPSILON);
        assertEquals(3.0, s1.getX(1).doubleValue(), EPSILON);
    }

    /**
     * Some checks for the clear() method.
     */
    @Test
    public void testClear() {
=====================================================================
Found a 9 line (89 tokens) duplication in the following files: 
Starting at line 590 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/flow/FlowPlot.java
Starting at line 648 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/flow/FlowPlot.java

                Color ncol = lookupNodeColor(nodeKey);
                if (hasNodeSelections) {
                    if (!Boolean.TRUE.equals(dataset.getNodeProperty(nodeKey, NodeKey.SELECTED_PROPERTY_KEY))) {
                        int g = (ncol.getRed() + ncol.getGreen() + ncol.getBlue()) / 3;
                        ncol = new Color(g, g, g, ncol.getAlpha());
                    }
                }
                g2.setPaint(ncol);
                g2.fill(nodeRect);
=====================================================================
Found a 10 line (89 tokens) duplication in the following files: 
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

        int itemCount = dataset.getItemCount(series);
        double x0 = dataset.getXValue(series, Math.max(item - 1, 0));
        double y0 = dataset.getYValue(series, Math.max(item - 1, 0));
        if (Double.isNaN(y0)) {
            y0 = 0.0;
        }
        double transX0 = domainAxis.valueToJava2D(x0, dataArea,
                plot.getDomainAxisEdge());
        double transY0 = rangeAxis.valueToJava2D(y0, dataArea,
                plot.getRangeAxisEdge());
=====================================================================
Found a 19 line (89 tokens) duplication in the following files: 
Starting at line 2377 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 2404 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                return new int[] {high, high};
            }
            int mid = (low + high) / 2;
            while (high - low > 1) {
                double midV = dataset.getXValue(series, mid);
                if (x == midV) {
                    return new int[] {mid, mid};
                }
                if (midV < x) {
                    low = mid;
                }
                else {
                    high = mid;
                }
                mid = (low + high) / 2;
            }
            return new int[] {low, high};
        }
        else if (dataset.getDomainOrder() == DomainOrder.DESCENDING) {
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 270 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 588 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01111
        container.clear();
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 346 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 664 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(33.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10111
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 704 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11011
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 407 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 725 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11101
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 21 line (89 tokens) duplication in the following files: 
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/AbstractDialLayerTest.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialCapTest.java

        DialCap c2 = CloneUtils.clone(c1);
        assertNotSame(c1, c2);
        assertSame(c1.getClass(), c2.getClass());
        assertEquals(c1, c2);

        // check that the listener lists are independent
        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();
        c1.addChangeListener(l1);
        assertTrue(c1.hasListener(l1));
        assertFalse(c2.hasListener(l1));
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
        // test a default instance
        DialCap c1 = new DialCap();
        DialCap c2 = TestUtils.serialised(c1);
        assertEquals(c1, c2);
=====================================================================
Found a 10 line (89 tokens) duplication in the following files: 
Starting at line 191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LevelRendererTest.java
Starting at line 246 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        LevelRenderer r = new LevelRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset0, new CategoryAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, dataset1);
        JFreeChart chart = new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }
=====================================================================
Found a 18 line (89 tokens) duplication in the following files: 
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        XYPlot<String> plot = (XYPlot) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot) this.chart.getPlot();
=====================================================================
Found a 27 line (89 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java
Starting at line 55 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java

        DefaultCategoryDataset<String, String> d = new DefaultCategoryDataset<>();
        d.addValue(1.0, "R1", "C1");
        assertEquals(1.0, d.getValue("R1", "C1"));
        boolean pass = false;
        try {
            d.getValue("XX", "C1");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            d.getValue("R1", "XX");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * A simple check for the getValue(int, int) method.
     */
    @Test
    public void testGetValue2() {
=====================================================================
Found a 11 line (89 tokens) duplication in the following files: 
Starting at line 101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // basic check for independence
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertNotEquals(d1, d2);
        TaskSeriesCollection<String, String> u2 = d2.getTasks();
        TaskSeries<String> s2 = u2.getSeries("Series");
        s2.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertEquals(d1, d2);
    }
=====================================================================
Found a 7 line (89 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            Second s = new Second(new Date(0L));
            assertEquals(1970, s.getMinute().getHour().getYear());
            assertEquals(1, s.getMinute().getHour().getMonth());
            assertEquals(1, s.getMinute().getHour().getDayOfMonth());
            assertEquals(hoursOffset, s.getMinute().getHour().getHour());
            assertEquals(0, s.getMinute().getMinute());
            assertEquals(0, s.getSecond());
=====================================================================
Found a 29 line (89 tokens) duplication in the following files: 
Starting at line 68 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultIntervalXYDataset<String> d = createSampleDataset1();
        assertEquals("S1", d.getSeriesKey(0));
        assertEquals("S2", d.getSeriesKey(1));

        // check for series key out of bounds
        boolean pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(2);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the getItemCount() method.
     */
    @Test
    public void testGetItemCount() {
=====================================================================
Found a 59 line (88 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/encoders/SunJPEGEncoderAdapter.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/encoders/SunPNGEncoderAdapter.java

    }

    /**
     * Returns {@code false} always, indicating that this encoder does not
     * encode alpha transparency.
     *
     * @return {@code false}.
     */
    @Override
    public boolean isEncodingAlpha() {
        return false;
    }

    /**
     * Set whether the encoder should encode alpha transparency (this is not
     * supported for JPEG, so this method does nothing).
     *
     * @param encodingAlpha  ignored.
     */
    @Override
    public void setEncodingAlpha(boolean encodingAlpha) {
        //  No op
    }

    /**
     * Encodes an image in JPEG format.
     *
     * @param bufferedImage  the image to be encoded ({@code null} not
     *     permitted).
     *
     * @return The byte[] that is the encoded image.
     *
     * @throws IOException if there is an I/O problem.
     * @throws NullPointerException if {@code bufferedImage} is
     *     {@code null}.
     */
    @Override
    public byte[] encode(BufferedImage bufferedImage) throws IOException {
        ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
        encode(bufferedImage, outputStream);
        return outputStream.toByteArray();
    }

    /**
     * Encodes an image in JPEG format and writes it to an output stream.
     *
     * @param bufferedImage  the image to be encoded ({@code null} not
     *     permitted).
     * @param outputStream  the OutputStream to write the encoded image to
     *     ({@code null} not permitted).
     *
     * @throws IOException if there is an I/O problem.
     * @throws NullPointerException if {@code bufferedImage} is {@code null}.
     */
    @Override
    public void encode(BufferedImage bufferedImage, OutputStream outputStream)
            throws IOException {
        Args.nullNotPermitted(bufferedImage, "bufferedImage");
        Args.nullNotPermitted(outputStream, "outputStream");
=====================================================================
Found a 16 line (88 tokens) duplication in the following files: 
Starting at line 4585 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (!Objects.equals(this.datasets, that.datasets)){
            return false;
        }
        if (!Objects.equals(this.backgroundDomainMarkers, that.backgroundDomainMarkers)) {
            return false;
        }
        if (!Objects.equals(this.foregroundRangeMarkers, that.foregroundRangeMarkers)) {
            return false;
        }
        if (!Objects.equals(this.backgroundRangeMarkers, that.backgroundRangeMarkers)) {
            return false;
        }
        if (!Objects.equals(this.annotations, that.annotations)) {
            return false;
        }
        if (this.weight != that.weight) {
=====================================================================
Found a 42 line (88 tokens) duplication in the following files: 
Starting at line 1226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 2829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        visitor.visit(this);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).
     * <P>
     * This plot relies on a {@link PolarItemRenderer} to draw each
     * item in the plot.  This allows the visual representation of the data to
     * be changed easily.
     * <P>
     * The optional info argument collects information about the rendering of
     * the plot (dimensions, tooltip information etc).  Just pass in
     * {@code null} if you do not need this information.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axes and
     *              labels) should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  ignored.
     * @param info  collects chart drawing information ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // if the plot area is too small, just return...
        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);
        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);
        if (b1 || b2) {
            return;
        }

        // record the plot area...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for the plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);
=====================================================================
Found a 16 line (88 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 828 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 468 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 576 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

        CategoryDataset dataset = cp.getDataset(datasetIndex);
        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 12 line (88 tokens) duplication in the following files: 
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/YIntervalRenderer.java

            double x = intervalDataset.getXValue(series, item);
            double yLow = intervalDataset.getStartYValue(series, item);
            double yHigh  = intervalDataset.getEndYValue(series, item);

            RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
            RectangleEdge yAxisLocation = plot.getRangeAxisEdge();

            double xx = domainAxis.valueToJava2D(x, dataArea, xAxisLocation);
            double yyLow = rangeAxis.valueToJava2D(yLow, dataArea,
                    yAxisLocation);
            double yyHigh = rangeAxis.valueToJava2D(yHigh, dataArea,
                    yAxisLocation);
=====================================================================
Found a 16 line (88 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        LogAxis a2 = TestUtils.serialised(a1);
        assertEquals(a1, a2);
    }

    /**
     * A simple test for the auto-range calculation looking at a
     * LogAxis used as the range axis for a CategoryPlot.
     */
    @Test
    public void testAutoRange1() {
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        dataset.setValue(100.0, "Row 1", "Column 1");
        dataset.setValue(200.0, "Row 1", "Column 2");
        JFreeChart chart = ChartFactory.createBarChart("Test", "Categories",
                "Value", dataset);
        CategoryPlot<?, ?> plot = (CategoryPlot) chart.getPlot();
=====================================================================
Found a 16 line (88 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java
Starting at line 230 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        DefaultCategoryDataset<String,String> dataset0 = new DefaultCategoryDataset<>();
        dataset0.addValue(21.0, "R1", "C1");
        dataset0.addValue(22.0, "R2", "C1");
        DefaultCategoryDataset<String,String> dataset1 = new DefaultCategoryDataset<>();
        dataset1.addValue(23.0, "R3", "C1");
        dataset1.addValue(24.0, "R4", "C1");
        dataset1.addValue(25.0, "R5", "C1");
=====================================================================
Found a 12 line (88 tokens) duplication in the following files: 
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBubbleRendererTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        XYAreaRenderer r = new XYAreaRenderer();
        XYPlot<String> plot = new XYPlot<>(d1, new NumberAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, d2);
        JFreeChart chart = new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("S5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

}
=====================================================================
Found a 9 line (88 tokens) duplication in the following files: 
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 535 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java

    public void test697153() {

        TaskSeries<String> s1 = new TaskSeries<>("S1");
        s1.add(new Task("Task 1", new SimpleTimePeriod(new Date(),
                new Date())));
        s1.add(new Task("Task 2", new SimpleTimePeriod(new Date(),
                new Date())));
        s1.add(new Task("Task 3", new SimpleTimePeriod(new Date(),
                new Date())));
=====================================================================
Found a 8 line (88 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1061 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] x1End = new double[] {1.1, 2.1, Double.NaN};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 8 line (88 tokens) duplication in the following files: 
Starting at line 474 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 489 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java

    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
        cal.set(Calendar.MILLISECOND, 555);
        Millisecond m = new Millisecond(555, 55, 47, 3, 16, 1, 2006);
        assertEquals(cal.getTime(), m.getStart());
=====================================================================
Found a 10 line (88 tokens) duplication in the following files: 
Starting at line 1083 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 1125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        calendar.set(2014, Calendar.FEBRUARY, 24, 18, 0);
        long end = calendar.getTimeInMillis();
        Range range = new Range(start, end);
        
        TimeSeries<String> ts = new TimeSeries<>("Time Series");
        assertNull(ts.findValueRange(range, TimePeriodAnchor.START, tzone));
        assertNull(ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone));
        assertNull(ts.findValueRange(range, TimePeriodAnchor.END, tzone));
        
        ts.add(new Day(23, 2, 2014), 5.0);
=====================================================================
Found a 7 line (88 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

    public void testPublicCloneable() {
        DefaultXYDataset<String> d1 = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
        XYBarDataset<String> bd1 = new XYBarDataset<>(d1, 5.0);
=====================================================================
Found a 25 line (87 tokens) duplication in the following files: 
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java

        if (!Arrays.equals(this.polygon, that.polygon)) {
            return false;
        }
        if (!Objects.equals(this.stroke, that.stroke)) {
            return false;
        }
        if (!PaintUtils.equal(this.outlinePaint, that.outlinePaint)) {
            return false;
        }
        if (!PaintUtils.equal(this.fillPaint, that.fillPaint)) {
            return false;
        }
        // seem to be the same
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 193;
        result = 37 * result + HashUtils.hashCodeForDoubleArray(
=====================================================================
Found a 22 line (87 tokens) duplication in the following files: 
Starting at line 1502 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 783 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 540 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                TextAnchor anchor, rotationAnchor;
                double angle = 0.0;
                if (isVerticalTickLabels()) {
                    anchor = TextAnchor.CENTER_RIGHT;
                    rotationAnchor = TextAnchor.CENTER_RIGHT;
                    if (edge == RectangleEdge.TOP) {
                        angle = Math.PI / 2.0;
                    }
                    else {
                        angle = -Math.PI / 2.0;
                    }
                }
                else {
                    if (edge == RectangleEdge.TOP) {
                        anchor = TextAnchor.BOTTOM_CENTER;
                        rotationAnchor = TextAnchor.BOTTOM_CENTER;
                    }
                    else {
                        anchor = TextAnchor.TOP_CENTER;
                        rotationAnchor = TextAnchor.TOP_CENTER;
                    }
                }
=====================================================================
Found a 22 line (87 tokens) duplication in the following files: 
Starting at line 1617 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 634 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                TextAnchor anchor, rotationAnchor;
                double angle = 0.0;
                if (isVerticalTickLabels()) {
                    anchor = TextAnchor.BOTTOM_CENTER;
                    rotationAnchor = TextAnchor.BOTTOM_CENTER;
                    if (edge == RectangleEdge.LEFT) {
                        angle = -Math.PI / 2.0;
                    }
                    else {
                        angle = Math.PI / 2.0;
                    }
                }
                else {
                    if (edge == RectangleEdge.LEFT) {
                        anchor = TextAnchor.CENTER_RIGHT;
                        rotationAnchor = TextAnchor.CENTER_RIGHT;
                    }
                    else {
                        anchor = TextAnchor.CENTER_LEFT;
                        rotationAnchor = TextAnchor.CENTER_LEFT;
                    }
                }
=====================================================================
Found a 14 line (87 tokens) duplication in the following files: 
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 1604 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        }
        String tip = null;
        XYToolTipGenerator generator = getToolTipGenerator(series, item);
        if (generator != null) {
            tip = generator.generateToolTip(dataset, series, item);
        }
        String url = null;
        if (getURLGenerator() != null) {
            url = getURLGenerator().generateURL(dataset, series, item);
        }
        XYItemEntity entity = new XYItemEntity(hotspot, dataset, series, item,
                tip, url);
        entities.add(entity);
    }
=====================================================================
Found a 10 line (87 tokens) duplication in the following files: 
Starting at line 202 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

    public void testXYAutoRange1() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 10 line (87 tokens) duplication in the following files: 
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

    public void testXYAutoRange2() {
        XYSeries<String> series = new XYSeries<>("Series 1");
        series.add(1.0, 1.0);
        series.add(2.0, 2.0);
        series.add(3.0, 3.0);
        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        dataset.addSeries(series);
        JFreeChart chart = ChartFactory.createScatterPlot("Test", "X", "Y",
                dataset);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 11 line (87 tokens) duplication in the following files: 
Starting at line 1238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testGetRendererForDataset2() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);

        // add a second dataset
        XYSeriesCollection<String> dataset2 = new XYSeriesCollection<>();
        dataset2.addSeries(new XYSeries<>("Series in dataset 2"));
        plot.setDataset(99, dataset2);
=====================================================================
Found a 15 line (87 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 246 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LevelRendererTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

    }

    /**
     * A check for the datasetIndex and seriesIndex fields in the LegendItem
     * returned by the getLegendItem() method.
     */
    @Test
    public void testGetLegendItemSeriesIndex() {
        DefaultCategoryDataset<String,String> dataset0 = new DefaultCategoryDataset<>();
        dataset0.addValue(21.0, "R1", "C1");
        dataset0.addValue(22.0, "R2", "C1");
        DefaultCategoryDataset<String,String> dataset1 = new DefaultCategoryDataset<>();
        dataset1.addValue(23.0, "R3", "C1");
        dataset1.addValue(24.0, "R4", "C1");
        dataset1.addValue(25.0, "R5", "C1");
=====================================================================
Found a 12 line (87 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java

        AreaRenderer r = new AreaRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset0, new CategoryAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, dataset1);
        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

}
=====================================================================
Found a 10 line (87 tokens) duplication in the following files: 
Starting at line 212 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBubbleRendererTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        StandardXYItemRenderer r = new StandardXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(d1, new NumberAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, d2);
        JFreeChart chart = new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("S5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }
=====================================================================
Found a 14 line (87 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("Series 1", false, true);
        s1.add(1.0, 1.0, 1.0, 2.0);
        s1.add(3.0, 3.0, 3.0, 3.0);
        s1.add(2.0, 2.0, 2.0, 2.0);
        assertEquals(0, s1.indexOf(1.0));
        assertEquals(1, s1.indexOf(3.0));
        assertEquals(2, s1.indexOf(2.0));
    }

    /**
     * Simple test for the remove() method.
     */
    @Test
    public void testRemove() {
=====================================================================
Found a 54 line (86 tokens) duplication in the following files: 
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 545 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        PiePlot plot = new PiePlot(dataset);
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());
        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
        if (tooltips) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator());
        }
        if (urls) {
            plot.setURLGenerator(new StandardPieURLGenerator());
        }
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;
    }

    /**
     * Creates a pie chart with default settings that compares 2 datasets.
     * The colour of each section will be determined by the move from the value
     * for the same key in {@code previousDataset}. ie if value1 &gt; 
     * value2 then the section will be in green (unless 
     * {@code greenForIncrease} is {@code false}, in which case it 
     * would be {@code red}). Each section can have a shade of red or 
     * green as the difference can be tailored between 0% (black) and 
     * percentDiffForMaxScale% (bright red/green).
     * <p>
     * For instance if {@code percentDiffForMaxScale} is 10 (10%), a
     * difference of 5% will have a half shade of red/green, a difference of
     * 10% or more will have a maximum shade/brightness of red/green.
     * <P>
     * The chart object returned by this method uses a {@link PiePlot} instance
     * as the plot.
     * <p>
     * Written by <a href="mailto:opensource@objectlab.co.uk">Benoit
     * Xhenseval</a>.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     * @param previousDataset  the dataset for the last run, this will be used
     *                         to compare each key in the dataset
     * @param percentDiffForMaxScale scale goes from bright red/green to black,
     *                               percentDiffForMaxScale indicate the change
     *                               required to reach top scale.
     * @param greenForIncrease  an increase since previousDataset will be
     *                          displayed in green (decrease red) if true.
     * @param legend  a flag specifying whether or not a legend is required.
     * @param tooltips  configure chart to generate tool tips?
     * @param locale  the locale ({@code null} not permitted).
     * @param subTitle displays a subtitle with colour scheme if true
     * @param showDifference  create a new dataset that will show the %
     *                        difference between the two datasets.
     *
     * @return A pie chart.
     */
    public static JFreeChart createPieChart(String title, PieDataset dataset,
=====================================================================
Found a 20 line (86 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/ArrayUtils.java
Starting at line 1421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java
Starting at line 770 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java

    public static boolean equal(float[][] array1, float[][] array2) {
        if (array1 == null) {
            return (array2 == null);
        }

        if (array2 == null) {
            return false;
        }

        if (array1.length != array2.length) {
            return false;
        }

        for (int i = 0; i < array1.length; i++) {
            if (!Arrays.equals(array1[i], array2[i])) {
                return false;
            }
        }
        return true;
    }
=====================================================================
Found a 14 line (86 tokens) duplication in the following files: 
Starting at line 3153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2762 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            if (this.orientation.isHorizontal()) {
                space.ensureAtLeast(this.fixedRangeAxisSpace.getTop(),
                        RectangleEdge.TOP);
                space.ensureAtLeast(this.fixedRangeAxisSpace.getBottom(),
                        RectangleEdge.BOTTOM);
            } else if (this.orientation == PlotOrientation.VERTICAL) {
                space.ensureAtLeast(this.fixedRangeAxisSpace.getLeft(),
                        RectangleEdge.LEFT);
                space.ensureAtLeast(this.fixedRangeAxisSpace.getRight(),
                        RectangleEdge.RIGHT);
            }
        } else {
            // reserve space for the range axes (if any)...
            for (ValueAxis yAxis : this.rangeAxes.values()) {
=====================================================================
Found a 24 line (86 tokens) duplication in the following files: 
Starting at line 3477 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3098 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (Map.Entry<Integer, CategoryDataset<R, C>> entry : 
                this.datasets.entrySet()) {
            if (entry.getValue() != null) {
                result.add(entry.getKey());
            }
        }
        Collections.sort(result);
        if (order == DatasetRenderingOrder.REVERSE) {
            Collections.reverse(result);
        }
        return result;
    }
    
    /**
     * Returns the indices of the non-null renderers for the plot, in the 
     * specified order.
     * 
     * @param order  the rendering order {@code null} not permitted).
     * 
     * @return A list of indices.
     */
    private List<Integer> getRendererIndices(DatasetRenderingOrder order) {
        List<Integer> result = new ArrayList<>();
        for (Map.Entry<Integer, CategoryItemRenderer> entry: 
=====================================================================
Found a 34 line (86 tokens) duplication in the following files: 
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 525 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        this.anchor = anchor;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns {@code true} to indicate that this layer should be
     * clipped within the dial window.
     *
     * @return {@code true}.
     */
    @Override
    public boolean isClippedToWindow() {
        return true;
    }

    /**
     * Draws the background to the specified graphics device.  If the dial
     * frame specifies a window, the clipping region will already have been
     * set to this window before this method is called.
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param plot  the plot (ignored here).
     * @param frame  the dial frame (ignored here).
     * @param view  the view rectangle ({@code null} not permitted).
     */
    @Override
    public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,
            Rectangle2D view) {

        // work out the anchor point
        Rectangle2D f = DialPlot.rectangleByRadius(frame, this.radius,
                this.radius);
        Arc2D arc = new Arc2D.Double(f, this.angle, 0.0, Arc2D.OPEN);
        Point2D pt = arc.getStartPoint();
=====================================================================
Found a 28 line (86 tokens) duplication in the following files: 
Starting at line 405 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues.java
Starting at line 306 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DefaultPieDataset.java

            Comparable k2 = that.getKey(i);
            if (!k1.equals(k2)) {
                return false;
            }
            Number v1 = getValue(i);
            Number v2 = that.getValue(i);
            if (v1 == null) {
                if (v2 != null) {
                    return false;
                }
            }
            else {
                if (!v1.equals(v2)) {
                    return false;
                }
            }
        }
        return true;
    }

    /**
     * Returns a hash code.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        return (this.keys != null ? this.keys.hashCode() : 0);
=====================================================================
Found a 10 line (86 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java

        AreaRenderer r = new AreaRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset0, new CategoryAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, dataset1);
        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }
=====================================================================
Found a 7 line (86 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        DefaultXYDataset<String> d1 = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
        XYBarDataset<String> bd1 = new XYBarDataset<>(d1, 5.0);
=====================================================================
Found a 17 line (85 tokens) duplication in the following files: 
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);

        LegendItem item = new LegendItem(label, description, toolTipText,
=====================================================================
Found a 29 line (85 tokens) duplication in the following files: 
Starting at line 208 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

                          + (groupW / 2.0) - (state.getBarWidth() / 2.0);
        }
        else {
            barW0 = domainAxis.getCategoryMiddle(column, getColumnCount(),
                    dataArea, plot.getDomainAxisEdge())
                    - state.getBarWidth() / 2.0;
        }
        return barW0;
    }

    /**
     * Draws a stacked bar for a specific item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the plot area.
     * @param plot  the plot.
     * @param domainAxis  the domain (category) axis.
     * @param rangeAxis  the range (value) axis.
     * @param dataset  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row,
            int column, int pass) {
=====================================================================
Found a 19 line (85 tokens) duplication in the following files: 
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 281 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java

        boolean positive = (value > 0.0);
        boolean inverted = rangeAxis.isInverted();
        RectangleEdge barBase;
        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            }
            else {
                barBase = RectangleEdge.LEFT;
            }
        }
        else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            }
            else {
                barBase = RectangleEdge.TOP;
            }
        }
=====================================================================
Found a 17 line (85 tokens) duplication in the following files: 
Starting at line 280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java

        boolean positive = (y1 > 0.0);
        boolean inverted = rangeAxis.isInverted();
        RectangleEdge barBase;
        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            } else {
                barBase = RectangleEdge.LEFT;
            }
        } else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            } else {
                barBase = RectangleEdge.TOP;
            }
        }
        if (pass == 0 && getShadowsVisible()) {
=====================================================================
Found a 8 line (85 tokens) duplication in the following files: 
Starting at line 286 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java

            if (orientation == PlotOrientation.HORIZONTAL) {
                drState.lowerCoordinates.add(new double[] {yyLow, xx});
                drState.upperCoordinates.add(new double[] {yyHigh, xx});
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                drState.lowerCoordinates.add(new double[] {xx, yyLow});
                drState.upperCoordinates.add(new double[] {xx, yyHigh});
            }
=====================================================================
Found a 18 line (85 tokens) duplication in the following files: 
Starting at line 319 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java
Starting at line 359 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java

                    cap2 = new Line2D.Double(yy - adj, xx1, yy + adj, xx1);
                }
                if (this.errorPaint != null) {
                    g2.setPaint(this.errorPaint);
                }
                else {
                    g2.setPaint(getItemPaint(series, item));
                }
                if (this.errorStroke != null) {
                    g2.setStroke(this.errorStroke);
                }
                else {
                    g2.setStroke(getItemStroke(series, item));
                }
                g2.draw(line);
                g2.draw(cap1);
                g2.draw(cap2);
            }
=====================================================================
Found a 16 line (85 tokens) duplication in the following files: 
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

            double y = data.getYValue(series, i);
            sumX += x;
            sumY += y;
            double xx = x * x;
            sumXX += xx;
            double xy = x * y;
            sumXY += xy;
        }
        double sxx = sumXX - (sumX * sumX) / n;
        double sxy = sumXY - (sumX * sumY) / n;
        double xbar = sumX / n;
        double ybar = sumY / n;

        double[] result = new double[2];
        result[1] = sxy / sxx;
        result[0] = ybar - result[1] * xbar;
=====================================================================
Found a 37 line (85 tokens) duplication in the following files: 
Starting at line 1204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeries.java
Starting at line 617 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeries.java

    }

    /**
     * A function to find the minimum of two values, but ignoring any
     * Double.NaN values.
     *
     * @param a  the first value.
     * @param b  the second value.
     *
     * @return The minimum of the two values.
     */
    private double minIgnoreNaN(double a, double b) {
        if (Double.isNaN(a)) {
            return b;
        }
        if (Double.isNaN(b)) {
            return a;
        }
        return Math.min(a, b);
    }

    /**
     * A function to find the maximum of two values, but ignoring any
     * Double.NaN values.
     *
     * @param a  the first value.
     * @param b  the second value.
     *
     * @return The maximum of the two values.
     */
    private double maxIgnoreNaN(double a, double b) {
        if (Double.isNaN(a)) {
            return b;
        }
        if (Double.isNaN(b)) {
            return a;
        }
=====================================================================
Found a 45 line (85 tokens) duplication in the following files: 
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java

    public DefaultIntervalXYDataset() {
        this.seriesKeys = new ArrayList<>();
        this.seriesList = new ArrayList<>();
    }

    /**
     * Returns the number of series in the dataset.
     *
     * @return The series count.
     */
    @Override
    public int getSeriesCount() {
        return this.seriesList.size();
    }

    /**
     * Returns the key for a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     *
     * @return The key for the series.
     *
     * @throws IllegalArgumentException if {@code series} is not in the
     *     specified range.
     */
    @Override
    public S getSeriesKey(int series) {
        Args.requireInRange(series, "series", 0, this.seriesKeys.size() - 1);
        return this.seriesKeys.get(series);
    }

    /**
     * Returns the number of items in the specified series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     *
     * @return The item count.
     *
     * @throws IllegalArgumentException if {@code series} is not in the
     *     specified range.
     */
    @Override
    public int getItemCount(int series) {
=====================================================================
Found a 9 line (85 tokens) duplication in the following files: 
Starting at line 1030 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1074 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

    public void testPreviousStandardDateMillisecondA() {
        MyDateAxis axis = new MyDateAxis("Millisecond");
        Millisecond m0 = new Millisecond(458, 58, 31, 12, 1, 4, 2007);
        Millisecond m1 = new Millisecond(459, 58, 31, 12, 1, 4, 2007);

        Date d0 = new Date(m0.getFirstMillisecond());
        Date end = new Date(m1.getLastMillisecond());

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.MILLISECOND, 1);
=====================================================================
Found a 8 line (85 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 9 line (85 tokens) duplication in the following files: 
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 17 line (85 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LayeredBarRendererTest.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LevelRendererTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/MinMaxCategoryRendererTest.java

        LayeredBarRenderer r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * Draws the chart with a {@code null} info object to make sure that
     * no exceptions are thrown (particularly by code in the renderer).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
            dataset.addValue(1.0, "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new LayeredBarRenderer());
=====================================================================
Found a 11 line (85 tokens) duplication in the following files: 
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/RendererXYPackageUtils.java
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/RendererXYPackageUtils.java

        XYSeriesCollection<String> result = new XYSeriesCollection<>();
        XYSeries<String> series1 = new XYSeries<>("Series 1", false, false);
        series1.add(1.0, 2.0);
        series1.add(2.0, 5.0);
        XYSeries<String> series2 = new XYSeries<>("Series 2", false, false);
        series2.add(1.0, 4.0);
        series2.add(2.0, 3.0);
        result.addSeries(series1);
        result.addSeries(series2);
        return result;
    }
=====================================================================
Found a 12 line (85 tokens) duplication in the following files: 
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 160 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDotRendererTest.java
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/YIntervalRendererTest.java

        XYAreaRenderer2 r = new XYAreaRenderer2();
        XYPlot<String> plot = new XYPlot<>(d1, new NumberAxis("x"),
                new NumberAxis("y"), r);
        plot.setDataset(1, d2);
        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("S5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

}
=====================================================================
Found a 10 line (85 tokens) duplication in the following files: 
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // try a dataset with some content...
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] z1 = new double[] {7.0, 8.0, 9.0};
        double[][] data1 = new double[][] {x1, y1, z1};
        d1.addSeries("S1", data1);
        d2 = CloneUtils.clone(d1);
=====================================================================
Found a 55 line (84 tokens) duplication in the following files: 
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 95 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

        super(null, domainAxis, null, null);
        this.subplots = new ArrayList<>();
        this.gap = 5.0;
    }

    /**
     * Returns the space between subplots.  The default value is 5.0.
     *
     * @return The gap (in Java2D units).
     *
     * @see #setGap(double)
     */
    public double getGap() {
        return this.gap;
    }

    /**
     * Sets the amount of space between subplots and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param gap  the gap between subplots (in Java2D units).
     *
     * @see #getGap()
     */
    public void setGap(double gap) {
        this.gap = gap;
        fireChangeEvent();
    }

    /**
     * Adds a subplot to the combined chart and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * <br><br>
     * The domain axis for the subplot will be set to {@code null}.  You
     * must ensure that the subplot has a non-null range axis.
     *
     * @param subplot  the subplot ({@code null} not permitted).
     */
    public void add(CategoryPlot subplot) {
        add(subplot, 1);
    }

    /**
     * Adds a subplot to the combined chart and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     * <br><br>
     * The domain axis for the subplot will be set to {@code null}.  You
     * must ensure that the subplot has a non-null range axis.
     *
     * @param subplot  the subplot ({@code null} not permitted).
     * @param weight  the weight (must be &gt;= 1).
     */
    public void add(CategoryPlot subplot, int weight) {
        Args.nullNotPermitted(subplot, "subplot");
        if (weight < 1) {
=====================================================================
Found a 14 line (84 tokens) duplication in the following files: 
Starting at line 547 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

            double maxWidth = space * getMaximumBarWidth();
            double categoryMargin = 0.0;
            double currentItemMargin = 0.0;
            if (columns > 1) {
                categoryMargin = domainAxis.getCategoryMargin();
            }
            if (rows > 1) {
                currentItemMargin = getItemMargin();
            }
            double used = space * (1 - domainAxis.getLowerMargin()
                                     - domainAxis.getUpperMargin()
                                     - categoryMargin - currentItemMargin);
            if ((rows * columns) > 0) {
                state.setBarWidth(Math.min(used / (dataset.getColumnCount()
=====================================================================
Found a 9 line (84 tokens) duplication in the following files: 
Starting at line 365 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java
Starting at line 515 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java

                int datasetIndex = plot.indexOf(dataset);
                Comparable columnKey = dataset.getColumnKey(column);
                Comparable rowKey = dataset.getRowKey(row);
                double xx = domainAxis.getCategorySeriesMiddle(columnKey,
                        rowKey, dataset, getItemMargin(), dataArea,
                        plot.getDomainAxisEdge());
                updateCrosshairValues(state.getCrosshairState(),
                        dataset.getRowKey(row), dataset.getColumnKey(column),
                        value1.doubleValue(), datasetIndex, xx,
=====================================================================
Found a 17 line (84 tokens) duplication in the following files: 
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java
Starting at line 199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
            int column, RectangularShape bar, RectangleEdge base,
            boolean pegShadow) {

        // handle a special case - if the bar colour has alpha == 0, it is
        // invisible so we shouldn't draw any shadow
        Paint itemPaint = renderer.getItemPaint(row, column);
        if (itemPaint instanceof Color) {
            Color c = (Color) itemPaint;
            if (c.getAlpha() == 0) {
                return;
            }
        }

        RectangularShape shadow = createShadow(bar, renderer.getShadowXOffset(),
                renderer.getShadowYOffset(), base, pegShadow);
        g2.setPaint(renderer.getShadowPaint());
=====================================================================
Found a 16 line (84 tokens) duplication in the following files: 
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

            String label = getLegendItemLabelGenerator().generateLabel(
                    dataset, series);
            String description = label;
            String toolTipText = null;
            if (getLegendItemToolTipGenerator() != null) {
                toolTipText = getLegendItemToolTipGenerator().generateLabel(
                        dataset, series);
            }
            String urlText = null;
            if (getLegendItemURLGenerator() != null) {
                urlText = getLegendItemURLGenerator().generateLabel(
                        dataset, series);
            }
            Shape shape = lookupLegendShape(series);
            Paint paint = lookupSeriesPaint(series);
            Paint fillPaint = (this.useFillPaint
=====================================================================
Found a 10 line (84 tokens) duplication in the following files: 
Starting at line 514 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 555 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java

    public Number getStartValue(R rowKey, C columnKey, int subinterval) {
        Number result = null;
        int row = getRowIndex(rowKey);
        TaskSeries<R> series = this.data.get(row);
        Task task = series.get(columnKey.toString());
        if (task != null) {
            Task sub = task.getSubtask(subinterval);
            if (sub != null) {
                TimePeriod duration = sub.getDuration();
                result = duration.getStart().getTime();
=====================================================================
Found a 15 line (84 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

            sumX += x;
            sumY += y;
            double xx = x * x;
            sumXX += xx;
            double xy = x * y;
            sumXY += xy;
        }
        double sxx = sumXX - (sumX * sumX) / n;
        double sxy = sumXY - (sumX * sumY) / n;
        double xbar = sumX / n;
        double ybar = sumY / n;

        double[] result = new double[2];
        result[1] = sxy / sxx;
        result[0] = ybar - result[1] * xbar;
=====================================================================
Found a 9 line (84 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 9 line (84 tokens) duplication in the following files: 
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 17 line (84 tokens) duplication in the following files: 
Starting at line 800 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 813 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        BarRenderer rendererB  = (BarRenderer) p2.getRenderer(1);
        assertTrue(datasetA.hasListener(p2));
        assertTrue(domainAxisA.hasListener(p2));
        assertTrue(rangeAxisA.hasListener(p2));
        assertTrue(rendererA.hasListener(p2));
        assertTrue(datasetB.hasListener(p2));
        assertTrue(domainAxisB.hasListener(p2));
        assertTrue(rangeAxisB.hasListener(p2));
        assertTrue(rendererB.hasListener(p2));
    }

    /**
     * A test for a bug where setting the renderer doesn't register the plot
     * as a RendererChangeListener.
     */
    @Test
    public void testSetRenderer() {
=====================================================================
Found a 17 line (84 tokens) duplication in the following files: 
Starting at line 862 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 972 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryPlot<String, String> plot = new CategoryPlot<>();
        Marker m = new ValueMarker(1.0);
        plot.addRangeMarker(m);
        List<EventListener> listeners = Arrays.asList(m.getListeners(
                MarkerChangeListener.class));
        assertTrue(listeners.contains(plot));
        plot.clearRangeMarkers();
        listeners = Arrays.asList(m.getListeners(MarkerChangeListener.class));
        assertFalse(listeners.contains(plot));
    }

    /**
     * A test for bug 1654215 (where a renderer is added to the plot without
     * a corresponding dataset and it throws an exception at drawing time).
     */
    @Test
    public void test1654215() {
=====================================================================
Found a 8 line (84 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java

    public void testRemove() {
        OHLCSeries<String> s1 = new OHLCSeries<>("s1");
        s1.add(new Year(2006), 2.0, 4.0, 1.0, 3.0);
        s1.add(new Year(2011), 2.1, 4.1, 1.1, 3.1);
        s1.add(new Year(2010), 2.2, 4.2, 1.2, 3.2);
        assertEquals(3, s1.getItemCount());

        s1.remove(new Year(2010));
=====================================================================
Found a 17 line (83 tokens) duplication in the following files: 
Starting at line 404 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 554 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

        List result = new java.util.ArrayList();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);

        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }

        double unit = getTickUnit().getSize();
        double cycleBound = getCycleBound();
        double currentTickValue = Math.ceil(cycleBound / unit) * unit;
        double upperValue = getRange().getUpperBound();
        boolean cycled = false;

        boolean boundMapping = this.boundMappedToLastCycle;
        this.boundMappedToLastCycle = false;
=====================================================================
Found a 36 line (83 tokens) duplication in the following files: 
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BlockBorder.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/LookupPaintScale.java

        if (!this.insets.equals(that.insets)) {
            return false;
        }
        if (!PaintUtils.equal(this.paint, that.paint)) {
            return false;
        }
        return true;
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 39 line (83 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

    }

    /**
     * Adds a block to be managed by this instance.  This method is usually
     * called by the {@link BlockContainer}, you shouldn't need to call it
     * directly.
     *
     * @param block  the block.
     * @param key  a key that controls the position of the block.
     */
    @Override
    public void add(Block block, Object key) {
        // since the flow layout is relatively straightforward,
        // no information needs to be recorded here
    }

    /**
     * Calculates and sets the bounds of all the items in the specified
     * container, subject to the given constraint.  The {@code Graphics2D}
     * can be used by some items (particularly items containing text) to
     * calculate sizing parameters.
     *
     * @param container  the container whose items are being arranged.
     * @param g2  the graphics device.
     * @param constraint  the size constraint.
     *
     * @return The size of the container after arrangement of the contents.
     */
    @Override
    public Size2D arrange(BlockContainer container, Graphics2D g2,
                          RectangleConstraint constraint) {

        LengthConstraintType w = constraint.getWidthConstraintType();
        LengthConstraintType h = constraint.getHeightConstraintType();
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
=====================================================================
Found a 8 line (83 tokens) duplication in the following files: 
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

        double maxWidth = 0.0;
        List<Block> blocks = container.getBlocks();
        int blockCount = blocks.size();
        if (blockCount > 0) {
            Size2D[] sizes = new Size2D[blocks.size()];
            for (int i = 0; i < blocks.size(); i++) {
                Block block = blocks.get(i);
                sizes[i] = block.arrange(g2, RectangleConstraint.NONE);
=====================================================================
Found a 13 line (83 tokens) duplication in the following files: 
Starting at line 3218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2812 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (Entry<Integer, CategoryAxis> entry : this.domainAxes.entrySet()) {
            if (entry.getValue() != null) {
                entry.getValue().receive(visitor);
            }
        }
        // visit the range axes
        for (Entry<Integer, ValueAxis> entry : this.rangeAxes.entrySet()) {
            if (entry.getValue() != null) {
                entry.getValue().receive(visitor);
            }
        }
        // visit the renderers
        for (Entry<Integer, CategoryItemRenderer> entry : this.renderers.entrySet()) {
=====================================================================
Found a 26 line (83 tokens) duplication in the following files: 
Starting at line 3500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (Map.Entry<Integer, CategoryItemRenderer> entry: 
                this.renderers.entrySet()) {
            if (entry.getValue() != null) {
                result.add(entry.getKey());
            }
        }
        Collections.sort(result);
        if (order == DatasetRenderingOrder.REVERSE) {
            Collections.reverse(result);
        }
        return result;        
    }
    
    /**
     * Draws the plot background (the background color and/or image).
     * <P>
     * This method will be called during the chart drawing process and is
     * declared public so that it can be accessed by the renderers used by
     * certain subclasses.  You shouldn't need to call this method directly.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot should be drawn.
     */
    @Override
    public void drawBackground(Graphics2D g2, Rectangle2D area) {
        fillBackground(g2, area, this.orientation);
=====================================================================
Found a 15 line (83 tokens) duplication in the following files: 
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 18 line (83 tokens) duplication in the following files: 
Starting at line 344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 492 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

                                     lowVal, rectY + rectHeight * 0.75);
            g2.draw(line);
        }

        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
                    (value < 0.0));
        }

        // add an item entity, if this information is being collected
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }

    }
=====================================================================
Found a 15 line (83 tokens) duplication in the following files: 
Starting at line 1623 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1791 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            return info.getDomainLowerBound(true);
        }
        else {
            double minimum = Double.POSITIVE_INFINITY;
            int seriesCount = dataset.getSeriesCount();
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {

                    double value;
                    if (dataset instanceof IntervalXYDataset) {
                        @SuppressWarnings("unchecked")
                        IntervalXYDataset<S> intervalXYData
                            = (IntervalXYDataset) dataset;
                        value = intervalXYData.getStartXValue(series, item);
=====================================================================
Found a 17 line (83 tokens) duplication in the following files: 
Starting at line 1680 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1911 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            return info.getDomainUpperBound(true);
        }

        // hasn't implemented DomainInfo, so iterate...
        else {
            double maximum = Double.NEGATIVE_INFINITY;
            int seriesCount = dataset.getSeriesCount();
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {

                    double value;
                    if (dataset instanceof IntervalXYDataset) {
                        @SuppressWarnings("unchecked")
                        IntervalXYDataset<S> intervalXYData
                            = (IntervalXYDataset) dataset;
                        value = intervalXYData.getEndXValue(series, item);
=====================================================================
Found a 28 line (83 tokens) duplication in the following files: 
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

        if (this.second != that.second) {
            return false;
        }
        if (this.minute != that.minute) {
            return false;
        }
        if (this.hour != that.hour) {
            return false;
        }
        if (!this.day.equals(that.day)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this object instance.  The approach described by
     * Joshua Bloch in "Effective Java" has been used here:
     * <p>
     * {@code http://developer.java.sun.com/developer/Books/effectivejava
     * /Chapter3.pdf}
     *
     * @return A hashcode.
     */
    @Override
    public int hashCode() {
        int result = 17;
        result = 37 * result + this.millisecond;
=====================================================================
Found a 27 line (83 tokens) duplication in the following files: 
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

        this.chart = createBarChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
        }
    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {
=====================================================================
Found a 8 line (83 tokens) duplication in the following files: 
Starting at line 593 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 753 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);
=====================================================================
Found a 8 line (83 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (83 tokens) duplication in the following files: 
Starting at line 224 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(3.3f), Color.GREEN);
=====================================================================
Found a 18 line (83 tokens) duplication in the following files: 
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java

        XYPlot<String> plot = (XYPlot<String>) this.chart.getPlot();
        plot.setDataset(dataset);
        assertTrue(l.flag);
        ValueAxis axis = plot.getRangeAxis();
        Range range = axis.getRange();
        assertTrue(range.getLowerBound() <= 10, 
                "Expecting the lower bound of the range to be around 10: " + range.getLowerBound());
        assertTrue(range.getUpperBound() >= 30, 
                "Expecting the upper bound of the range to be around 30: " + range.getUpperBound());
    }

    /**
     * Check that setting a tool tip generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesToolTipGenerator() {
        XYPlot<?> plot = (XYPlot<?>) this.chart.getPlot();
=====================================================================
Found a 18 line (83 tokens) duplication in the following files: 
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
        cal.set(Calendar.MILLISECOND, 555);
=====================================================================
Found a 52 line (82 tokens) duplication in the following files: 
Starting at line 676 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java

            fireChangeEvent();
        }
    }

    /**
     * Returns the font used for the tick labels (if showing).
     *
     * @return The font (never {@code null}).
     *
     * @see #setTickLabelFont(Font)
     */
    public Font getTickLabelFont() {
        return this.tickLabelFont;
    }

    /**
     * Sets the font for the tick labels and sends an {@link AxisChangeEvent}
     * to all registered listeners.
     *
     * @param font  the font ({@code null} not allowed).
     *
     * @see #getTickLabelFont()
     */
    public void setTickLabelFont(Font font) {
        Args.nullNotPermitted(font, "font");
        if (!this.tickLabelFont.equals(font)) {
            this.tickLabelFont = font;
            fireChangeEvent();
        }
    }

    /**
     * Returns the color/shade used for the tick labels.
     *
     * @return The paint used for the tick labels.
     *
     * @see #setTickLabelPaint(Paint)
     */
    public Paint getTickLabelPaint() {
        return this.tickLabelPaint;
    }

    /**
     * Sets the paint used to draw tick labels (if they are showing) and
     * sends an {@link AxisChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getTickLabelPaint()
     */
    public void setTickLabelPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
=====================================================================
Found a 10 line (82 tokens) duplication in the following files: 
Starting at line 358 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java
Starting at line 391 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

        double maxH = 0.0;
        for (int r = 0; r < this.rows; r++) {
            for (int c = 0; c < this.columns; c++) {
                int index = r * this.columns + c;
                if (index >= blocks.size()) {
                    break;
                }
                Block b = blocks.get(index);
                if (b != null) {
                    Size2D s = b.arrange(g2, bc);
=====================================================================
Found a 24 line (82 tokens) duplication in the following files: 
Starting at line 2508 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3790 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Returns a collection of range markers for a particular renderer and
     * layer.
     *
     * @param index  the renderer index.
     * @param layer  the layer.
     *
     * @return A collection of markers (possibly {@code null}).
     */
    public Collection<Marker> getRangeMarkers(int index, Layer layer) {
        Collection<Marker> result = null;
        if (layer == Layer.FOREGROUND) {
            result = this.foregroundRangeMarkers.get(index);
        }
        else if (layer == Layer.BACKGROUND) {
            result = this.backgroundRangeMarkers.get(index);
        }
        if (result != null) {
            result = Collections.unmodifiableCollection(result);
        }
        return result;
    }
=====================================================================
Found a 12 line (82 tokens) duplication in the following files: 
Starting at line 3953 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3865 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 3935 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (orientation == PlotOrientation.HORIZONTAL) {
            double xx = axis.valueToJava2D(value, dataArea,
                    RectangleEdge.BOTTOM);
            line = new Line2D.Double(xx, dataArea.getMinY(), xx,
                    dataArea.getMaxY());
        }
        else {
            double yy = axis.valueToJava2D(value, dataArea,
                    RectangleEdge.LEFT);
            line = new Line2D.Double(dataArea.getMinX(), yy,
                    dataArea.getMaxX(), yy);
        }
=====================================================================
Found a 23 line (82 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/MiddlePinNeedle.java
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PinNeedle.java

                                                midY - lenX, lenX, lenX);

        shape = new Area(circle);
        shape.add(new Area(pointer));
        if ((rotate != null) && (angle != 0)) {
            /// we have rotation
            getTransform().setToRotation(angle, rotate.getX(), rotate.getY());
            shape.transform(getTransform());
        }

        defaultDisplay(g2, shape);

    }

    /**
     * Tests another object for equality with this object.
     *
     * @param object  the object to test.
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object object) {
=====================================================================
Found a 13 line (82 tokens) duplication in the following files: 
Starting at line 2265 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 2860 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java

        if (this.direction == Rotation.CLOCKWISE) {
            angle1 = state.getLatestAngle();
            angle2 = angle1 - value / state.getTotal() * 360.0;
        }
        else if (this.direction == Rotation.ANTICLOCKWISE) {
            angle1 = state.getLatestAngle();
            angle2 = angle1 + value / state.getTotal() * 360.0;
        }
        else {
            throw new IllegalStateException("Rotation type not recognised.");
        }

        double angle = (angle2 - angle1);
=====================================================================
Found a 13 line (82 tokens) duplication in the following files: 
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java

            double transY2 = rangeAxis.valueToJava2D(getRangeBase(), dataArea,
                    plot.getRangeAxisEdge());

            // avoid possible sun.dc.pr.PRException: endPath: bad path
            transY2 = restrictValueToDataArea(transY2, plot, dataArea);

            // The first point is (x, this.baseYValue)
            if (orientation == PlotOrientation.VERTICAL) {
                this.pArea.addPoint((int) transX1, (int) transY2);
            }
            else if (orientation == PlotOrientation.HORIZONTAL) {
                this.pArea.addPoint((int) transY2, (int) transX1);
            }
=====================================================================
Found a 27 line (82 tokens) duplication in the following files: 
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

        assertSame(url2, url1);
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
        }
    }

    /**
     * Replaces the chart's dataset and then checks that the new dataset is OK.
     */
    @Test
    public void testReplaceDataset() {
=====================================================================
Found a 19 line (82 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/AbstractBlockTest.java
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/EmptyBlockTest.java

        assertEquals(b1, b2);

        b1 = new EmptyBlock(1.1, 2.0);
        assertNotEquals(b1, b2);
        b2 = new EmptyBlock(1.1, 2.0);
        assertEquals(b1, b2);

        b1 = new EmptyBlock(1.1, 2.2);
        assertNotEquals(b1, b2);
        b2 = new EmptyBlock(1.1, 2.2);
        assertEquals(b1, b2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() {
        EmptyBlock b1 = new EmptyBlock(1.0, 2.0);
=====================================================================
Found a 8 line (82 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (82 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 15 line (82 tokens) duplication in the following files: 
Starting at line 1111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryAxis xAxis2 = new CategoryAxis("X2");
        NumberAxis yAxis2 = new NumberAxis("Y2");
        plot.setDomainAxis(99, xAxis2);
        plot.setRangeAxis(99, yAxis2);
        
        plot.setDomainAxisLocation(99, AxisLocation.BOTTOM_OR_RIGHT);
        assertEquals(AxisLocation.BOTTOM_OR_RIGHT, 
                plot.getDomainAxisLocation(99));
        plot.setRangeAxisLocation(99, AxisLocation.BOTTOM_OR_LEFT);
        assertEquals(AxisLocation.BOTTOM_OR_LEFT, 
                plot.getRangeAxisLocation(99));
    }
    
    @Test 
    public void testRendererIndices() {
=====================================================================
Found a 15 line (82 tokens) duplication in the following files: 
Starting at line 341 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 367 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 520 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
            success = true;
        }
        catch (Exception e) {
            success = false;
        }
        assertTrue(success);
    }
=====================================================================
Found a 22 line (82 tokens) duplication in the following files: 
Starting at line 312 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        assertEquals(955766455500L, m.getFirstMillisecond(calendar));

        // try null calendar
        boolean pass = false;
        try {
            m.getFirstMillisecond((Calendar) null);
        }
        catch (NullPointerException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the getLastMillisecond() method.
     */
    @Test
    public void testGetLastMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
=====================================================================
Found a 26 line (81 tokens) duplication in the following files: 
Starting at line 1702 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 504 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java

        AxisState state = drawTickMarksAndLabels(g2, cursor, plotArea,
                dataArea, edge);

        // draw the axis label (note that 'state' is passed in *and*
        // returned)...
        if (getAttributedLabel() != null) {
            state = drawAttributedLabel(getAttributedLabel(), g2, plotArea, 
                    dataArea, edge, state);
            
        } else {
            state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state);
        }
        createAndAddEntity(cursor, state, dataArea, edge, plotState);
        return state;

    }

    /**
     * Zooms in on the current range (zoom-in stops once the axis length 
     * reaches the equivalent of one millisecond).  
     *
     * @param lowerPercent  the new lower bound.
     * @param upperPercent  the new upper bound.
     */
    @Override
    public void zoomRange(double lowerPercent, double upperPercent) {
=====================================================================
Found a 12 line (81 tokens) duplication in the following files: 
Starting at line 4788 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5251 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (CategoryDataset<R, C> dataset : clone.datasets.values()) {
            if (dataset != null) {
                dataset.addChangeListener(clone);
            }
        }
        clone.datasetToDomainAxesMap = new TreeMap<>();
        clone.datasetToDomainAxesMap.putAll(this.datasetToDomainAxesMap);
        clone.datasetToRangeAxesMap = new TreeMap<>();
        clone.datasetToRangeAxesMap.putAll(this.datasetToRangeAxesMap);

        clone.renderers = CloneUtils.cloneMapValues(this.renderers);
        for (CategoryItemRenderer renderer : clone.renderers.values()) {
=====================================================================
Found a 25 line (81 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

    public static final double MAX_INTERIOR_GAP = 0.40;

    /** The default starting angle for the pie chart. */
    public static final double DEFAULT_START_ANGLE = 90.0;

    /** The default section label font. */
    public static final Font DEFAULT_LABEL_FONT = new Font("SansSerif",
            Font.PLAIN, 10);

    /** The default section label paint. */
    public static final Paint DEFAULT_LABEL_PAINT = Color.BLACK;

    /** The default section label background paint. */
    public static final Paint DEFAULT_LABEL_BACKGROUND_PAINT = new Color(255,
            255, 192);

    /** The default section label outline paint. */
    public static final Paint DEFAULT_LABEL_OUTLINE_PAINT = Color.BLACK;

    /** The default section label outline stroke. */
    public static final Stroke DEFAULT_LABEL_OUTLINE_STROKE = new BasicStroke(
            0.5f);

    /** The default section label shadow paint. */
    public static final Paint DEFAULT_LABEL_SHADOW_PAINT = new Color(151, 151,
=====================================================================
Found a 13 line (81 tokens) duplication in the following files: 
Starting at line 630 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 773 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java

    public void drawHorizontalItem(Graphics2D g2, 
            CategoryItemRendererState state, Rectangle2D dataArea,
            CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis,
            CategoryDataset dataset, int row, int column) {

        BoxAndWhiskerCategoryDataset bawDataset
                = (BoxAndWhiskerCategoryDataset) dataset;

        double categoryEnd = domainAxis.getCategoryEnd(column,
                getColumnCount(), dataArea, plot.getDomainAxisEdge());
        double categoryStart = domainAxis.getCategoryStart(column,
                getColumnCount(), dataArea, plot.getDomainAxisEdge());
        double categoryWidth = Math.abs(categoryEnd - categoryStart);
=====================================================================
Found a 36 line (81 tokens) duplication in the following files: 
Starting at line 948 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1096 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                    Number value = dataset.getValue(row, column);
                    if (value != null) {
                        double v = value.doubleValue();
                        if (!Double.isNaN(v)) {
                            minimum = Math.min(minimum, v);
                            maximum = Math.max(maximum, v);
                        }
                    }
                }
            }
        }
        if (minimum == Double.POSITIVE_INFINITY) {
            return null;
        }
        else {
            return new Range(minimum, maximum);
        }
    }

    /**
     * Iterates over the data item of the category dataset to find
     * the range bounds.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param includeInterval  a flag that determines whether or not the
     *                         y-interval is taken into account.
     * @param visibleSeriesKeys  the visible series keys.
     *
     * @return The range (possibly {@code null}).
     *
     * @param <R>  the type for the row keys.
     * @param <C>  the type for the column keys.
     * 
     * @since 1.0.13
     */
    public static <R extends Comparable<R>, C extends Comparable<C>> 
=====================================================================
Found a 13 line (81 tokens) duplication in the following files: 
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 896 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1038 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 1);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
=====================================================================
Found a 13 line (81 tokens) duplication in the following files: 
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1082 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 10);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 435 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
        assertEquals(21.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 8 line (81 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 13 line (81 tokens) duplication in the following files: 
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        s1.add(3.0, 5.0, 5.0, 5.0);
        assertEquals(1.0, s1.getYValue(0), EPSILON);
        assertEquals(2.0, s1.getYValue(1), EPSILON);
        assertEquals(3.0, s1.getYValue(2), EPSILON);
        assertEquals(4.0, s1.getYValue(3), EPSILON);
        assertEquals(5.0, s1.getYValue(4), EPSILON);
    }

    /**
     * Some checks for the add() method for an UNSORTED series.
     */
    @Test
    public void testAdd() {
=====================================================================
Found a 36 line (80 tokens) duplication in the following files: 
Starting at line 747 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 820 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 894 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        StackedBarRenderer renderer = new StackedBarRenderer();
        if (tooltips) {
            renderer.setDefaultToolTipGenerator(
                    new StandardCategoryToolTipGenerator());
        }
        if (urls) {
            renderer.setDefaultItemURLGenerator(
                    new StandardCategoryURLGenerator());
        }

        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis,
                renderer);
        plot.setOrientation(orientation);
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;

    }

    /**
     * Creates an area chart with default settings.  The chart object returned
     * by this method uses a {@link CategoryPlot} instance as the plot, with a
     * {@link CategoryAxis} for the domain axis, a {@link NumberAxis} as the
     * range axis, and an {@link AreaRenderer} as the renderer.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param categoryAxisLabel  the label for the category axis
     *                           ({@code null} permitted).
     * @param valueAxisLabel  the label for the value axis ({@code null}
     *                        permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     *
     * @return An area chart.
     */
    public static JFreeChart createAreaChart(String title,
=====================================================================
Found a 16 line (80 tokens) duplication in the following files: 
Starting at line 1254 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 1131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        if (!Objects.equals(this.gradientPaintTransformer, that.gradientPaintTransformer)) {
            return false;
        }
        if (!Objects.equals(this.positiveItemLabelPositionFallback, that.positiveItemLabelPositionFallback)) {
            return false;
        }
        if (!Objects.equals(this.negativeItemLabelPositionFallback, that.negativeItemLabelPositionFallback)) {
            return false;
        }
        if (!this.barPainter.equals(that.barPainter)) {
            return false;
        }
        if (this.shadowsVisible != that.shadowsVisible) {
            return false;
        }
        if (!PaintUtils.equal(this.shadowPaint, that.shadowPaint)) {
=====================================================================
Found a 19 line (80 tokens) duplication in the following files: 
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 281 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java
Starting at line 280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java

        boolean positive = (value > 0.0);
        boolean inverted = rangeAxis.isInverted();
        RectangleEdge barBase;
        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            }
            else {
                barBase = RectangleEdge.LEFT;
            }
        }
        else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            }
            else {
                barBase = RectangleEdge.TOP;
            }
        }
=====================================================================
Found a 11 line (80 tokens) duplication in the following files: 
Starting at line 436 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/MinMaxCategoryRenderer.java

    private Icon getIcon(Shape shape, final Paint fillPaint, final Paint outlinePaint) {

        final int width = shape.getBounds().width;
        final int height = shape.getBounds().height;
        final GeneralPath path = new GeneralPath(shape);
        return new Icon() {
            @Override
            public void paintIcon(Component c, Graphics g, int x, int y) {
                Graphics2D g2 = (Graphics2D) g;
                path.transform(AffineTransform.getTranslateInstance(x, y));
                if (fillPaint != null) {
=====================================================================
Found a 16 line (80 tokens) duplication in the following files: 
Starting at line 1072 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 263 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java

                if (getItemVisible(series, 0)) {
                    String label = getLegendItemLabelGenerator().generateLabel(
                            dataset, series);
                    String description = label;
                    String toolTipText = null;
                    if (getLegendItemToolTipGenerator() != null) {
                        toolTipText
                            = getLegendItemToolTipGenerator().generateLabel(
                                    dataset, series);
                    }
                    String urlText = null;
                    if (getLegendItemURLGenerator() != null) {
                        urlText = getLegendItemURLGenerator().generateLabel(
                                dataset, series);
                    }
                    Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 10 line (80 tokens) duplication in the following files: 
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/LCBLayout.java

    public Dimension preferredLayoutSize(Container parent) {

        synchronized (parent.getTreeLock()) {
            Insets insets = parent.getInsets();
            int ncomponents = parent.getComponentCount();
            int nrows = ncomponents / COLUMNS;
            for (int c = 0; c < COLUMNS; c++) {
                for (int r = 0; r < nrows; r++) {
                    Component component = parent.getComponent(r * COLUMNS + c);
                    Dimension d = component.getPreferredSize();
=====================================================================
Found a 11 line (80 tokens) duplication in the following files: 
Starting at line 2097 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 2139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

        double minimum = 0.0;
        int categoryCount = dataset.getColumnCount();
        for (int item = 0; item < categoryCount; item++) {
            double total = 0.0;
            int seriesCount = dataset.getRowCount();
            for (int series = 0; series < seriesCount; series++) {
                Number number = dataset.getValue(series, item);
                if (number != null) {
                    hasValidData = true;
                    double value = number.doubleValue();
                    if (value < 0.0) {
=====================================================================
Found a 11 line (80 tokens) duplication in the following files: 
Starting at line 492 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 510 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00101 - left and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 8 line (80 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 21 line (80 tokens) duplication in the following files: 
Starting at line 187 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java

            dataset.add(null, 4.0, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
            plot.setOrientation(PlotOrientation.HORIZONTAL);
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Draws the chart with a {@code null} standard deviation to make sure
     * that no exceptions are thrown (particularly by code in the renderer).
     * See bug report 1779941.
     */
    @Test
    public void testDrawWithNullDeviationVertical() {
=====================================================================
Found a 10 line (80 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java

    public void testOLSRegression2b() {

        double[][] data = createSampleData2();

        XYSeries<String> series = new XYSeries<>("Test");
        for (int i = 0; i < 10; i++) {
            series.add(data[i][0], data[i][1]);
        }
        XYDataset<String> ds = new XYSeriesCollection<>(series);
        double[] result = Regression.getOLSRegression(ds, 0);
=====================================================================
Found a 23 line (79 tokens) duplication in the following files: 
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java

        if (!(this.y1 == that.y1)) {
            return false;
        }
        if (!Objects.equals(this.stroke, that.stroke)) {
            return false;
        }
        if (!PaintUtils.equal(this.outlinePaint, that.outlinePaint)) {
            return false;
        }
        if (!PaintUtils.equal(this.fillPaint, that.fillPaint)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result;
=====================================================================
Found a 36 line (79 tokens) duplication in the following files: 
Starting at line 747 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 820 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 894 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 965 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        StackedBarRenderer renderer = new StackedBarRenderer();
        if (tooltips) {
            renderer.setDefaultToolTipGenerator(
                    new StandardCategoryToolTipGenerator());
        }
        if (urls) {
            renderer.setDefaultItemURLGenerator(
                    new StandardCategoryURLGenerator());
        }

        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis,
                renderer);
        plot.setOrientation(orientation);
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;

    }

    /**
     * Creates an area chart with default settings.  The chart object returned
     * by this method uses a {@link CategoryPlot} instance as the plot, with a
     * {@link CategoryAxis} for the domain axis, a {@link NumberAxis} as the
     * range axis, and an {@link AreaRenderer} as the renderer.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param categoryAxisLabel  the label for the category axis
     *                           ({@code null} permitted).
     * @param valueAxisLabel  the label for the value axis ({@code null}
     *                        permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     *
     * @return An area chart.
     */
    public static JFreeChart createAreaChart(String title,
=====================================================================
Found a 16 line (79 tokens) duplication in the following files: 
Starting at line 299 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 434 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

        this.description = description;
        this.shapeVisible = shapeVisible;
        this.shape = shape;
        this.shapeFilled = shapeFilled;
        this.fillPaint = fillPaint;
        this.fillPaintTransformer = new StandardGradientPaintTransformer();
        this.shapeOutlineVisible = shapeOutlineVisible;
        this.outlinePaint = outlinePaint;
        this.outlineStroke = outlineStroke;
        this.lineVisible = lineVisible;
        this.line = line;
        this.lineStroke = lineStroke;
        this.linePaint = linePaint;
        this.toolTipText = toolTipText;
        this.urlText = urlText;
    }
=====================================================================
Found a 32 line (79 tokens) duplication in the following files: 
Starting at line 505 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 1186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        XYDataset existing = getDataset(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.datasets.put(index, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);
    }

    /**
     * Returns the number of datasets.
     *
     * @return The number of datasets.
     */
    public int getDatasetCount() {
        return this.datasets.size();
    }

    /**
     * Returns the index of the specified dataset, or {@code -1} if the
     * dataset does not belong to the plot.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     *
     * @return The index.
     */
    public int indexOf(XYDataset dataset) {
=====================================================================
Found a 31 line (79 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java

    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data plot area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
            int pass) {

        // do nothing if item is not visible or null
        if (!getItemVisible(row, column)) {
            return;
        }
        Number value = dataset.getValue(row, column);
        if (value == null) {
            return;
        }
        PlotOrientation orientation = plot.getOrientation();
=====================================================================
Found a 14 line (79 tokens) duplication in the following files: 
Starting at line 516 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 270 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 263 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java

            if (getItemVisible(series, 0)) {
                String label = getLegendItemLabelGenerator().generateLabel(
                        dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
=====================================================================
Found a 13 line (79 tokens) duplication in the following files: 
Starting at line 1004 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 1032 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

            l_path.moveTo((float) l_x, (float) l_y);
            for (int i = 1; i < l_xValues.length; i++) {
                l_x = x_domainAxis.valueToJava2D((
                        (Double) l_xValues[i]), x_dataArea,
                        l_domainAxisLocation);
                if (this.roundXCoordinates) {
                    l_x = Math.rint(l_x);
                }

                l_y = x_rangeAxis.valueToJava2D((
                        (Double) l_yValues[i]), x_dataArea,
                        l_rangeAxisLocation);
                l_path.lineTo((float) l_x, (float) l_y);
=====================================================================
Found a 13 line (79 tokens) duplication in the following files: 
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 896 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1082 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 1);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
=====================================================================
Found a 13 line (79 tokens) duplication in the following files: 
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 526 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 674 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 822 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 970 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1038 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        DateTickUnit unit = new DateTickUnit(DateTickUnitType.YEAR, 10);
        axis.setTickUnit(unit);

        // START: check d0 and d1
        axis.setTickMarkPosition(DateTickMarkPosition.START);

        axis.setRange(d0, end);
        Date psd = axis.previousStandardDate(d0, unit);
        Date nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
=====================================================================
Found a 11 line (79 tokens) duplication in the following files: 
Starting at line 564 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 574 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01101 - bottom, left and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
=====================================================================
Found a 58 line (78 tokens) duplication in the following files: 
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java

        if (!Objects.equals(this.image, that.image)) {
            return false;
        }
        // seems to be the same...
        return true;
    }

    /**
     * Returns a hash code for this object.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        return this.image.hashCode();
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        // FIXME
        //SerialUtils.writeImage(this.image, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        // FIXME
        //this.image = SerialUtils.readImage(stream);
    }

}
=====================================================================
Found a 16 line (78 tokens) duplication in the following files: 
Starting at line 1702 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 599 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

        AxisState state = drawTickMarksAndLabels(g2, cursor, plotArea,
                dataArea, edge);

        // draw the axis label (note that 'state' is passed in *and*
        // returned)...
        if (getAttributedLabel() != null) {
            state = drawAttributedLabel(getAttributedLabel(), g2, plotArea, 
                    dataArea, edge, state);
            
        } else {
            state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state);
        }
        createAndAddEntity(cursor, state, dataArea, edge, plotState);
        return state;

    }
=====================================================================
Found a 36 line (78 tokens) duplication in the following files: 
Starting at line 674 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 821 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 895 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 966 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        if (tooltips) {
            renderer.setDefaultToolTipGenerator(
                    new StandardCategoryToolTipGenerator());
        }
        if (urls) {
            renderer.setDefaultItemURLGenerator(
                    new StandardCategoryURLGenerator());
        }

        CategoryPlot plot = new CategoryPlot(dataset, categoryAxis, valueAxis,
                renderer);
        plot.setOrientation(orientation);
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;

    }

    /**
     * Creates a stacked bar chart with default settings.  The chart object
     * returned by this method uses a {@link CategoryPlot} instance as the
     * plot, with a {@link CategoryAxis} for the domain axis, a
     * {@link NumberAxis} as the range axis, and a {@link StackedBarRenderer}
     * as the renderer.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param domainAxisLabel  the label for the category axis
     *                         ({@code null} permitted).
     * @param rangeAxisLabel  the label for the value axis
     *                        ({@code null} permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     *
     * @return A stacked bar chart.
     */
    public static JFreeChart createStackedBarChart(String title,
=====================================================================
Found a 18 line (78 tokens) duplication in the following files: 
Starting at line 1513 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/JFreeChart.java
Starting at line 1249 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/Plot.java

        if (!Objects.equals(this.plot, that.plot)) {
            return false;
        }
        if (!PaintUtils.equal(
            this.backgroundPaint, that.backgroundPaint
        )) {
            return false;
        }
        if (!Objects.equals(this.backgroundImage, that.backgroundImage)) {
            return false;
        }
        if (this.backgroundImageAlignment != that.backgroundImageAlignment) {
            return false;
        }
        if (this.backgroundImageAlpha != that.backgroundImageAlpha) {
            return false;
        }
        if (this.notify != that.notify) {
=====================================================================
Found a 21 line (78 tokens) duplication in the following files: 
Starting at line 1191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPlot.java

        CategoryDataset<R, C> existing = this.datasets.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.datasets.put(index, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }
        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);
    }

    /**
     * Returns the number of datasets.
     *
     * @return The number of datasets.
     */
    public int getDatasetCount() {
        return this.datasets.size();
    }
=====================================================================
Found a 56 line (78 tokens) duplication in the following files: 
Starting at line 523 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 431 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

        fireChangeEvent();
    }

    /**
     * Returns the direction in which the pie sections are drawn (clockwise or
     * anti-clockwise).
     *
     * @return The direction (never {@code null}).
     *
     * @see #setDirection(Rotation)
     */
    public Rotation getDirection() {
        return this.direction;
    }

    /**
     * Sets the direction in which the pie sections are drawn and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param direction  the direction ({@code null} not permitted).
     *
     * @see #getDirection()
     */
    public void setDirection(Rotation direction) {
        Args.nullNotPermitted(direction, "direction");
        this.direction = direction;
        fireChangeEvent();

    }

    /**
     * Returns the interior gap, measured as a percentage of the available
     * drawing space.
     *
     * @return The gap (as a percentage of the available drawing space).
     *
     * @see #setInteriorGap(double)
     */
    public double getInteriorGap() {
        return this.interiorGap;
    }

    /**
     * Sets the interior gap and sends a {@link PlotChangeEvent} to all
     * registered listeners.  This controls the space between the edges of the
     * pie plot and the plot area itself (the region where the section labels
     * appear).
     *
     * @param percent  the gap (as a percentage of the available drawing space).
     *
     * @see #getInteriorGap()
     */
    public void setInteriorGap(double percent) {

        if ((percent < 0.0) || (percent > MAX_INTERIOR_GAP)) {
            throw new IllegalArgumentException(
=====================================================================
Found a 9 line (78 tokens) duplication in the following files: 
Starting at line 1315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1338 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    // first apply the z-value itself
                    double value = dataset.getZValue(series, item);
                    if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }
=====================================================================
Found a 20 line (78 tokens) duplication in the following files: 
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

    }

    /**
     * Returns the first millisecond of the time period.
     *
     * @param calendar  the calendar ({@code null} not permitted).
     *
     * @return The first millisecond of the time period.
     *
     * @throws NullPointerException if {@code calendar} is
     *     {@code null}.
     */
    @Override
    public long getFirstMillisecond(Calendar calendar) {
        int year = this.day.getYear();
        int month = this.day.getMonth() - 1;
        int d = this.day.getDayOfMonth();
        calendar.clear();
        calendar.set(year, month, d, this.hour, this.minute, this.second);
        calendar.set(Calendar.MILLISECOND, this.millisecond);
=====================================================================
Found a 11 line (78 tokens) duplication in the following files: 
Starting at line 546 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 565 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 681 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 11 line (78 tokens) duplication in the following files: 
Starting at line 623 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 642 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 682 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description", "ToolTip", "URL",
                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true,
                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 6 line (78 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
                true, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 8 line (78 tokens) duplication in the following files: 
Starting at line 211 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 7 line (78 tokens) duplication in the following files: 
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(3.3f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(3.3f), Color.GREEN);
=====================================================================
Found a 16 line (78 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        assertEquals(plot2, plot1);

        // orientation...
        plot1.setOrientation(PlotOrientation.HORIZONTAL);
        assertNotEquals(plot1, plot2);
        plot2.setOrientation(PlotOrientation.HORIZONTAL);
        assertEquals(plot1, plot2);

        // axisOffset...
        plot1.setAxisOffset(new RectangleInsets(0.05, 0.05, 0.05, 0.05));
        assertNotEquals(plot1, plot2);
        plot2.setAxisOffset(new RectangleInsets(0.05, 0.05, 0.05, 0.05));
        assertEquals(plot1, plot2);

        // domainAxis - no longer a separate field but test anyway...
        plot1.setDomainAxis(new CategoryAxis("Category Axis"));
=====================================================================
Found a 18 line (78 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/PolarPlotTest.java
Starting at line 409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.setMargin(6);
        assertEquals(plot1, plot2);

        LegendItemCollection lic1 = new LegendItemCollection();
        lic1.add(new LegendItem("XYZ", Color.RED));
        plot1.setFixedLegendItems(lic1);
        assertNotEquals(plot1, plot2);
        LegendItemCollection lic2 = new LegendItemCollection();
        lic2.add(new LegendItem("XYZ", Color.RED));
        plot2.setFixedLegendItems(lic2);
        assertEquals(plot1, plot2);
    }

    /**
     * Some basic checks for the clone() method.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 9 line (78 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java

    public void testGetColumnIndex() {
        DefaultCategoryDataset<String, String> underlying = new DefaultCategoryDataset<>();
        underlying.addValue(1.0, "R1", "C1");
        underlying.addValue(2.0, "R1", "C2");
        underlying.addValue(3.0, "R1", "C3");
        underlying.addValue(4.0, "R1", "C4");
        SlidingCategoryDataset<String, String> dataset 
                = new SlidingCategoryDataset<>(underlying, 1, 2);
        assertEquals(-1, dataset.getColumnIndex("C1"));
=====================================================================
Found a 18 line (78 tokens) duplication in the following files: 
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesCollectionTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesCollectionTest.java

        OHLCSeries<String> s4 = new OHLCSeries<>("Series 4");
        c1.addSeries(s1);
        c1.addSeries(s2);
        c1.addSeries(s3);
        c1.addSeries(s4);
        c1.removeSeries(2);
        assertEquals(c1.getSeries(2), s4);
        c1.removeSeries(0);
        assertEquals(c1.getSeries(0), s2);
        assertEquals(2, c1.getSeriesCount());
    }

    /**
     * Some checks for the
     * {@link OHLCSeriesCollection#removeSeries(OHLCSeries)} method.
     */
    @Test
    public void testRemoveSeries() {
=====================================================================
Found a 59 line (77 tokens) duplication in the following files: 
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

        implements Cloneable, PublicCloneable, Serializable {

    /** For serialization. */
    private static final long serialVersionUID = -4031161445009858551L;

    /** The default tip radius (in Java2D units). */
    public static final double DEFAULT_TIP_RADIUS = 10.0;

    /** The default base radius (in Java2D units). */
    public static final double DEFAULT_BASE_RADIUS = 30.0;

    /** The default label offset (in Java2D units). */
    public static final double DEFAULT_LABEL_OFFSET = 3.0;

    /** The default arrow length (in Java2D units). */
    public static final double DEFAULT_ARROW_LENGTH = 5.0;

    /** The default arrow width (in Java2D units). */
    public static final double DEFAULT_ARROW_WIDTH = 3.0;

    /** The angle of the arrow's line (in radians). */
    private double angle;

    /**
     * The radius from the (x, y) point to the tip of the arrow (in Java2D
     * units).
     */
    private double tipRadius;

    /**
     * The radius from the (x, y) point to the start of the arrow line (in
     * Java2D units).
     */
    private double baseRadius;

    /** The length of the arrow head (in Java2D units). */
    private double arrowLength;

    /** The arrow width (in Java2D units, per side). */
    private double arrowWidth;

    /** The arrow stroke. */
    private transient Stroke arrowStroke;

    /** The arrow paint. */
    private transient Paint arrowPaint;

    /** The radius from the base point to the anchor point for the label. */
    private double labelOffset;

    /**
     * Creates a new label and arrow annotation.
     *
     * @param label  the label ({@code null} permitted).
     * @param key  the category key.
     * @param value  the y-value (measured against the chart's range axis).
     * @param angle  the angle of the arrow's line (in radians).
     */
    public CategoryPointerAnnotation(String label, Comparable key, double value,
=====================================================================
Found a 63 line (77 tokens) duplication in the following files: 
Starting at line 565 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 513 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

        fireChangeEvent();
    }

    /**
     * Returns the paint used to draw the axis line.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setAxisLinePaint(Paint)
     */
    public Paint getAxisLinePaint() {
        return this.axisLinePaint;
    }

    /**
     * Sets the paint used to draw the axis line and sends an
     * {@link AxisChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getAxisLinePaint()
     */
    public void setAxisLinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.axisLinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the stroke used to draw the axis line.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setAxisLineStroke(Stroke)
     */
    public Stroke getAxisLineStroke() {
        return this.axisLineStroke;
    }

    /**
     * Sets the stroke used to draw the axis line and sends an
     * {@link AxisChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getAxisLineStroke()
     */
    public void setAxisLineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.axisLineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns a flag indicating whether or not the tick labels are visible.
     *
     * @return The flag.
     *
     * @see #getTickLabelFont()
     * @see #getTickLabelPaint()
     * @see #setTickLabelsVisible(boolean)
     */
    public boolean isTickLabelsVisible() {
=====================================================================
Found a 47 line (77 tokens) duplication in the following files: 
Starting at line 741 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 775 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Sets the location for a domain axis and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param index  the axis index.
     * @param location  the location.
     *
     * @see #getDomainAxisLocation(int)
     * @see #setRangeAxisLocation(int, AxisLocation)
     */
    public void setDomainAxisLocation(int index, AxisLocation location) {
        // delegate...
        setDomainAxisLocation(index, location, true);
    }

    /**
     * Sets the location for a domain axis and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param index  the axis index.
     * @param location  the location.
     * @param notify  notify listeners?
     *
     * @see #getDomainAxisLocation(int)
     * @see #setRangeAxisLocation(int, AxisLocation, boolean)
     */
    public void setDomainAxisLocation(int index, AxisLocation location,
            boolean notify) {
        if (index == 0 && location == null) {
            throw new IllegalArgumentException(
                    "Null 'location' for index 0 not permitted.");
        }
        this.domainAxisLocations.put(index, location);
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Returns the domain axis edge.  This is derived from the axis location
     * and the plot orientation.
     *
     * @return The edge (never {@code null}).
     */
    public RectangleEdge getDomainAxisEdge() {
=====================================================================
Found a 45 line (77 tokens) duplication in the following files: 
Starting at line 1034 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1070 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Sets the location for a range axis and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param index  the axis index.
     * @param location  the location.
     *
     * @see #getRangeAxisLocation(int)
     * @see #setRangeAxisLocation(int, AxisLocation, boolean)
     */
    public void setRangeAxisLocation(int index, AxisLocation location) {
        setRangeAxisLocation(index, location, true);
    }

    /**
     * Sets the location for a range axis and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param index  the axis index.
     * @param location  the location.
     * @param notify  notify listeners?
     *
     * @see #getRangeAxisLocation(int)
     * @see #setDomainAxisLocation(int, AxisLocation, boolean)
     */
    public void setRangeAxisLocation(int index, AxisLocation location,
            boolean notify) {
        if (index == 0 && location == null) {
            throw new IllegalArgumentException(
                    "Null 'location' for index 0 not permitted.");
        }
        this.rangeAxisLocations.put(index, location);
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Returns the edge where the primary range axis is located.
     *
     * @return The edge (never {@code null}).
     */
    public RectangleEdge getRangeAxisEdge() {
=====================================================================
Found a 13 line (77 tokens) duplication in the following files: 
Starting at line 549 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPlot.java
Starting at line 564 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPlot.java

        for (DialLayer current : this.layers) {
            if (current.isVisible()) {
                if (current.isClippedToWindow()) {
                    Shape savedClip = g2.getClip();
                    g2.clip(this.dialFrame.getWindow(frame));
                    current.draw(g2, this, frame, area);
                    g2.setClip(savedClip);
                }
                else {
                    current.draw(g2, this, frame, area);
                }
            }
        }
=====================================================================
Found a 55 line (77 tokens) duplication in the following files: 
Starting at line 860 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java
Starting at line 4622 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Returns {@code true} if panning is enabled for the domain axes,
     * and {@code false} otherwise.
     *
     * @return A boolean.
     */
    @Override
    public boolean isDomainPannable() {
        return this.domainPannable;
    }

    /**
     * Sets the flag that enables or disables panning of the plot along the
     * domain axes.
     *
     * @param pannable  the new flag value.
     */
    public void setDomainPannable(boolean pannable) {
        this.domainPannable = pannable;
    }

    /**
     * Returns {@code true} if panning is enabled for the range axes,
     * and {@code false} otherwise.
     *
     * @return A boolean.
     */
    @Override
    public boolean isRangePannable() {
        return this.rangePannable;
    }

    /**
     * Sets the flag that enables or disables panning of the plot along
     * the range axes.
     *
     * @param pannable  the new flag value.
     */
    public void setRangePannable(boolean pannable) {
        this.rangePannable = pannable;
    }

    /**
     * Pans the domain axes by the specified percentage.
     *
     * @param percent  the distance to pan (as a percentage of the axis length).
     * @param info the plot info
     * @param source the source point where the pan action started.
     */
    @Override
    public void panDomainAxes(double percent, PlotRenderingInfo info,
            Point2D source) {
        if (!isDomainPannable() || this.domainAxis == null) {
=====================================================================
Found a 51 line (77 tokens) duplication in the following files: 
Starting at line 655 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java
Starting at line 308 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java

        fireChangeEvent();
    }

    /**
     * Returns the dataset for the plot.
     *
     * @return The dataset (possibly {@code null}).
     *
     * @see #setDataset(ValueDataset)
     */
    public ValueDataset getDataset() {
        return this.dataset;
    }

    /**
     * Sets the dataset for the plot, replacing the existing dataset if there
     * is one, and triggers a {@link PlotChangeEvent}.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @see #getDataset()
     */
    public void setDataset(ValueDataset dataset) {

        // if there is an existing dataset, remove the plot from the list of
        // change listeners...
        ValueDataset existing = this.dataset;
        if (existing != null) {
            existing.removeChangeListener(this);
        }

        // set the new dataset, and register the chart as a change listener...
        this.dataset = dataset;
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);

    }

    /**
     * Returns an unmodifiable list of the intervals for the plot.
     *
     * @return A list.
     *
     * @see #addInterval(MeterInterval)
     */
    public List<MeterInterval> getIntervals() {
=====================================================================
Found a 29 line (77 tokens) duplication in the following files: 
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/WaferMapPlot.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    public static final Stroke DEFAULT_GRIDLINE_STROKE = new BasicStroke(0.5f,
        BasicStroke.CAP_BUTT,
        BasicStroke.JOIN_BEVEL,
        0.0f,
        new float[] {2.0f, 2.0f},
        0.0f);

    /** The default grid line paint. */
    public static final Paint DEFAULT_GRIDLINE_PAINT = Color.LIGHT_GRAY;

    /** The default crosshair visibility. */
    public static final boolean DEFAULT_CROSSHAIR_VISIBLE = false;

    /** The default crosshair stroke. */
    public static final Stroke DEFAULT_CROSSHAIR_STROKE
            = DEFAULT_GRIDLINE_STROKE;

    /** The default crosshair paint. */
    public static final Paint DEFAULT_CROSSHAIR_PAINT = Color.BLUE;

    /** The resourceBundle for the localization. */
    protected static ResourceBundle localizationResources
            = ResourceBundle.getBundle("org.jfree.chart.plot.LocalizationBundle");

    /** The plot orientation.
     *  vertical = notch down
     *  horizontal = notch right
     */
    private final PlotOrientation orientation;
=====================================================================
Found a 15 line (77 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
        Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 15 line (77 tokens) duplication in the following files: 
Starting at line 723 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java

    protected double calculateBarW0(CategoryPlot plot, 
            PlotOrientation orientation, Rectangle2D dataArea, 
            CategoryAxis domainAxis, CategoryItemRendererState state,
            int row, int column) {
        // calculate bar width...
        double space;
        if (orientation == PlotOrientation.HORIZONTAL) {
            space = dataArea.getHeight();
        }
        else {
            space = dataArea.getWidth();
        }
        double barW0 = domainAxis.getCategoryStart(column, getColumnCount(),
                dataArea, plot.getDomainAxisEdge());
        int seriesCount = state.getVisibleSeriesCount() >= 0
=====================================================================
Found a 20 line (77 tokens) duplication in the following files: 
Starting at line 303 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/CategoryToPieDataset.java
Starting at line 306 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DefaultPieDataset.java

            Comparable k2 = that.getKey(i);
            if (!k1.equals(k2)) {
                return false;
            }

            Number v1 = getValue(i);
            Number v2 = that.getValue(i);
            if (v1 == null) {
                if (v2 != null) {
                    return false;
                }
            }
            else {
                if (!v1.equals(v2)) {
                    return false;
                }
            }
        }
        return true;
    }
=====================================================================
Found a 9 line (77 tokens) duplication in the following files: 
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYShapeAnnotationTest.java
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYShapeAnnotationTest.java

    public void testEquals() {

        XYShapeAnnotation a1 = new XYShapeAnnotation(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(1.2f), Color.RED, Color.BLUE);
        XYShapeAnnotation a2 = new XYShapeAnnotation(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(1.2f), Color.RED, Color.BLUE);
        assertEquals(a1, a2);
=====================================================================
Found a 10 line (77 tokens) duplication in the following files: 
Starting at line 260 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 578 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01110 - bottom. left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (77 tokens) duplication in the following files: 
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 654 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(33.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10110 - top, left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (77 tokens) duplication in the following files: 
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 694 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11010 - top, bottom and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (77 tokens) duplication in the following files: 
Starting at line 397 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 715 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(16.0, size.width, EPSILON);
        assertEquals(16.0, size.height, EPSILON);

        // TBLRC
        // 11100
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 18 line (77 tokens) duplication in the following files: 
Starting at line 256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 212 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

                3.0f, 4.0f, Color.YELLOW));
        assertEquals(plot1, plot2);

        // rangeGridlinesVisible
        plot1.setRangeGridlinesVisible(false);
        assertNotEquals(plot1, plot2);
        plot2.setRangeGridlinesVisible(false);
        assertEquals(plot1, plot2);

        // rangeGridlineStroke
        plot1.setRangeGridlineStroke(stroke);
        assertNotEquals(plot1, plot2);
        plot2.setRangeGridlineStroke(stroke);
        assertEquals(plot1, plot2);

        // rangeGridlinePaint
        plot1.setRangeGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,
                3.0f, 4.0f, Color.YELLOW));
=====================================================================
Found a 11 line (77 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainCategoryPlotTest.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeCategoryPlotTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeXYPlotTest.java

        yAxis.setAutoRangeIncludesZero(!yAxis.getAutoRangeIncludesZero());
        assertEquals(1, this.events.size());

        // a redraw should NOT trigger another change event
        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        this.events.clear();
        chart.draw(g2, new Rectangle2D.Double(0.0, 0.0, 200.0, 100.0));
        assertTrue(this.events.isEmpty());
    }
=====================================================================
Found a 6 line (77 tokens) duplication in the following files: 
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 332 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
=====================================================================
Found a 19 line (77 tokens) duplication in the following files: 
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomCategoryURLGeneratorTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/urls/CustomXYURLGeneratorTest.java

        CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator();
        assertTrue(g1 instanceof PublicCloneable);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {

        List<String> u1 = new ArrayList<>();
        u1.add("URL A1");
        u1.add("URL A2");
        u1.add("URL A3");

        List<String> u2 = new ArrayList<>();
        u2.add("URL B1");
        u2.add("URL B2");
        u2.add("URL B3");
=====================================================================
Found a 31 line (76 tokens) duplication in the following files: 
Starting at line 394 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 329 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 202 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LineBorder.java
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPointer.java

    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
        this.stroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 11 line (76 tokens) duplication in the following files: 
Starting at line 313 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java

            if (this.heightConstraintType == LengthConstraintType.NONE) {
               result.height = base.height;
            }
            else if (this.heightConstraintType == LengthConstraintType.RANGE) {
               result.height = this.heightRange.constrain(base.height);
            }
            else if (this.heightConstraintType == LengthConstraintType.FIXED) {
               result.height = this.height;
            }
        }
        else if (this.widthConstraintType == LengthConstraintType.RANGE) {
=====================================================================
Found a 13 line (76 tokens) duplication in the following files: 
Starting at line 4515 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5039 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (!this.rangeAxes.equals(that.rangeAxes)) {
            return false;
        }
        if (!this.rangeAxisLocations.equals(that.rangeAxisLocations)) {
            return false;
        }
        if (!Objects.equals(this.datasetToDomainAxesMap, that.datasetToDomainAxesMap)) {
            return false;
        }
        if (!Objects.equals(this.datasetToRangeAxesMap, that.datasetToRangeAxesMap)) {
            return false;
        }
        if (!Objects.equals(this.renderers, that.renderers)) {
=====================================================================
Found a 44 line (76 tokens) duplication in the following files: 
Starting at line 221 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialBackground.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java

        result = 37 * result + this.gradientPaintTransformer.hashCode();
        return result;
    }

    /**
     * Returns a clone of this instance.
     *
     * @return The clone.
     *
     * @throws CloneNotSupportedException if some attribute of this instance
     *     cannot be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 14 line (76 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 517 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
=====================================================================
Found a 33 line (76 tokens) duplication in the following files: 
Starting at line 864 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

    }

    /**
     * Draws the bar for a single (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row,
            int column, int pass) {

        // nothing is drawn if the row index is not included in the list with
        // the indices of the visible rows...
        int visibleRow = state.getVisibleSeriesIndex(row);
        if (visibleRow < 0) {
            return;
        }
        // nothing is drawn for null values...
        Number dataValue = dataset.getValue(row, column);
        if (dataValue == null) {
            return;
        }
=====================================================================
Found a 31 line (76 tokens) duplication in the following files: 
Starting at line 534 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.errorIndicatorPaint, stream);
        SerialUtils.writeStroke(this.errorIndicatorStroke, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.errorIndicatorPaint = SerialUtils.readPaint(stream);
        this.errorIndicatorStroke = SerialUtils.readStroke(stream);
    }

}
=====================================================================
Found a 9 line (76 tokens) duplication in the following files: 
Starting at line 292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java
Starting at line 316 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java

    public static Rectangle2D calcAlignedStringBounds(String text,
            Graphics2D g2, float x, float y, TextAnchor anchor) {

        Rectangle2D textBounds = new Rectangle2D.Double();
        float[] adjust = deriveTextBoundsAnchorOffsets(g2, text, anchor,
                textBounds);
        // adjust text bounds to match string position
        textBounds.setRect(x + adjust[0], y + adjust[1] + adjust[2],
            textBounds.getWidth(), textBounds.getHeight());
=====================================================================
Found a 9 line (76 tokens) duplication in the following files: 
Starting at line 558 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 574 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

            float maxWidth = (float) widthRange.getUpperBound();
            g2.setFont(this.font);
            this.content = TextUtils.createTextBlock(this.text, this.font,
                    this.paint, maxWidth, this.maximumLinesToDisplay,
                    new G2TextMeasurer(g2));
            this.content.setLineAlignment(this.textAlignment);
            Size2D contentSize = this.content.calculateDimensions(g2);
            if (this.expandToFitSpace) {
                return new Size2D(maxWidth, contentSize.getHeight());
=====================================================================
Found a 11 line (76 tokens) duplication in the following files: 
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 363 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 11 line (76 tokens) duplication in the following files: 
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 364 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 9 line (76 tokens) duplication in the following files: 
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 430 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 737 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(16.0, size.height, EPSILON);

        // TBLRC
        // 11110
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
=====================================================================
Found a 8 line (76 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (76 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 16 line (76 tokens) duplication in the following files: 
Starting at line 590 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java

        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
            success = true;
        }
        catch (Exception e) {
          success = false;
        }
        assertTrue(success);
    }
    
    @Test
    public void testBug1126() throws CloneNotSupportedException {
=====================================================================
Found a 19 line (76 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java

          fail("No exception should be thrown.");
        }
    }

    /**
     * Replaces the dataset and checks that it has changed as expected.
     */
    @Test
    public void testReplaceDataset() {

        // create a dataset...
        XYSeries<String> series1 = new XYSeries<>("Series 1");
        series1.add(10.0, 10.0);
        series1.add(20.0, 20.0);
        series1.add(30.0, 30.0);
        XYDataset<String> dataset = new XYSeriesCollection<>(series1);

        LocalListener l = new LocalListener();
        this.chart.addChangeListener(l);
=====================================================================
Found a 25 line (76 tokens) duplication in the following files: 
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java

        assertEquals(1.0, d.getValue("R1", "C1"));
        boolean pass = false;
        try {
            d.getValue("XX", "C1");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            d.getValue("R1", "XX");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * A simple check for the getValue(int, int) method.
     */
    @Test
    public void testGetValue2() {
=====================================================================
Found a 8 line (76 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 244 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java

    public void testGetColumnIndex() {
        DefaultCategoryDataset<String, String> underlying = new DefaultCategoryDataset<>();
        underlying.addValue(1.0, "R1", "C1");
        underlying.addValue(2.0, "R1", "C2");
        underlying.addValue(3.0, "R1", "C3");
        underlying.addValue(4.0, "R1", "C4");
        SlidingCategoryDataset<String, String> dataset 
                = new SlidingCategoryDataset<>(underlying, 1, 2);
=====================================================================
Found a 10 line (76 tokens) duplication in the following files: 
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java

    public void testOLSRegression1b() {

        double[][] data = createSampleData1();

        XYSeries<String> series = new XYSeries<>("Test");
        for (int i = 0; i < 11; i++) {
            series.add(data[i][0], data[i][1]);
        }
        XYDataset<String> ds = new XYSeriesCollection<>(series);
        double[] result2 = Regression.getOLSRegression(ds, 0);
=====================================================================
Found a 19 line (76 tokens) duplication in the following files: 
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
        d2 = CloneUtils.clone(d1);
        assertNotSame(d1, d2);
        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // check that the clone doesn't share the same underlying arrays.
        x1[1] = 2.2;
        assertNotEquals(d1, d2);
        x1[1] = 2.0;
        assertEquals(d1, d2);
    }

    /**
     * Verify that this class implements {@link PublicCloneable}.
     */
    @Test
    public void testPublicCloneable() {
=====================================================================
Found a 27 line (75 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java
Starting at line 219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTitleAnnotation.java

    }

    /**
     * Draws the annotation.  This method is called by the drawing code in the
     * {@link XYPlot} class, you don't normally need to call this method
     * directly.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  if supplied, this info object will be populated with
     *              entity information.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
            ValueAxis domainAxis, ValueAxis rangeAxis,
            int rendererIndex, PlotRenderingInfo info) {
        PlotOrientation orientation = plot.getOrientation();
        AxisLocation domainAxisLocation = plot.getDomainAxisLocation();
        AxisLocation rangeAxisLocation = plot.getRangeAxisLocation();
        RectangleEdge domainEdge
            = Plot.resolveDomainAxisLocation(domainAxisLocation, orientation);
        RectangleEdge rangeEdge
            = Plot.resolveRangeAxisLocation(rangeAxisLocation, orientation);
=====================================================================
Found a 15 line (75 tokens) duplication in the following files: 
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

                throw new RuntimeException("Not implemented.");
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
                return arrangeRN(container, g2, constraint);
            }
            else if (h == LengthConstraintType.FIXED) {
                return arrangeRF(container, g2, constraint);
            }
            else if (h == LengthConstraintType.RANGE) {
                return arrangeRR(container, g2, constraint);
            }
        }
        throw new IllegalArgumentException("Unknown LengthConstraintType.");
=====================================================================
Found a 31 line (75 tokens) duplication in the following files: 
Starting at line 1191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 505 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 1186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        CategoryDataset<R, C> existing = this.datasets.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.datasets.put(index, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }
        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);
    }

    /**
     * Returns the number of datasets.
     *
     * @return The number of datasets.
     */
    public int getDatasetCount() {
        return this.datasets.size();
    }

    /**
     * Returns the index of the specified dataset, or {@code -1} if the
     * dataset does not belong to the plot.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     *
     * @return The index.
     */
    public int indexOf(CategoryDataset<R, C> dataset) {
=====================================================================
Found a 61 line (75 tokens) duplication in the following files: 
Starting at line 1682 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java

    }

    /**
     * Returns the stroke used to draw grid-lines against the domain axis.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setDomainGridlineStroke(Stroke)
     */
    public Stroke getDomainGridlineStroke() {
        return this.domainGridlineStroke;
    }

    /**
     * Sets the stroke used to draw grid-lines against the domain axis and
     * sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getDomainGridlineStroke()
     */
    public void setDomainGridlineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.domainGridlineStroke = stroke;
        fireChangeEvent();
    }

    /**
     * Returns the paint used to draw grid-lines against the domain axis.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setDomainGridlinePaint(Paint)
     */
    public Paint getDomainGridlinePaint() {
        return this.domainGridlinePaint;
    }

    /**
     * Sets the paint used to draw the grid-lines (if any) against the domain
     * axis and sends a {@link PlotChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getDomainGridlinePaint()
     */
    public void setDomainGridlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.domainGridlinePaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns a flag that controls whether or not a zero baseline is
     * displayed for the range axis.
     *
     * @return A boolean.
     *
     * @see #setRangeZeroBaselineVisible(boolean)
     */
    public boolean isRangeZeroBaselineVisible() {
=====================================================================
Found a 13 line (75 tokens) duplication in the following files: 
Starting at line 4585 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (!Objects.equals(this.datasets, that.datasets)){
            return false;
        }
        if (!Objects.equals(this.backgroundDomainMarkers, that.backgroundDomainMarkers)) {
            return false;
        }
        if (!Objects.equals(this.foregroundRangeMarkers, that.foregroundRangeMarkers)) {
            return false;
        }
        if (!Objects.equals(this.backgroundRangeMarkers, that.backgroundRangeMarkers)) {
            return false;
        }
        if (!Objects.equals(this.annotations, that.annotations)) {
=====================================================================
Found a 50 line (75 tokens) duplication in the following files: 
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the start angle.
     *
     * @return The start angle.
     *
     * @see #setStartAngle(double)
     */
    public double getStartAngle() {
        return this.startAngle;
    }

    /**
     * Sets the start angle and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param angle  the angle.
     *
     * @see #getStartAngle()
     */
    public void setStartAngle(double angle) {
        this.startAngle = angle;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the extent.
     *
     * @return The extent.
     *
     * @see #setExtent(double)
     */
    public double getExtent() {
        return this.extent;
    }

    /**
     * Sets the extent and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param extent  the extent.
     *
     * @see #getExtent()
     */
    public void setExtent(double extent) {
        this.extent = extent;
        notifyListeners(new DialLayerChangeEvent(this));
    }
=====================================================================
Found a 60 line (75 tokens) duplication in the following files: 
Starting at line 498 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

    }

    /**
     * Returns the flag that controls whether or not the x-position for each
     * data item is offset within the category according to the series.
     *
     * @return A boolean.
     *
     * @see #setUseSeriesOffset(boolean)
     */
    public boolean getUseSeriesOffset() {
        return this.useSeriesOffset;
    }

    /**
     * Sets the flag that controls whether or not the x-position for each
     * data item is offset within its category according to the series, and
     * sends a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param offset  the offset.
     *
     * @see #getUseSeriesOffset()
     */
    public void setUseSeriesOffset(boolean offset) {
        this.useSeriesOffset = offset;
        fireChangeEvent();
    }

    /**
     * Returns the item margin, which is the gap between items within a
     * category (expressed as a percentage of the overall category width).
     * This can be used to match the offset alignment with the bars drawn by
     * a {@link BarRenderer}).
     *
     * @return The item margin.
     *
     * @see #setItemMargin(double)
     * @see #getUseSeriesOffset()
     */
    public double getItemMargin() {
        return this.itemMargin;
    }

    /**
     * Sets the item margin, which is the gap between items within a category
     * (expressed as a percentage of the overall category width), and sends
     * a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param margin  the margin (0.0 &lt;= margin &lt; 1.0).
     *
     * @see #getItemMargin()
     * @see #getUseSeriesOffset()
     */
    public void setItemMargin(double margin) {
        if (margin < 0.0 || margin >= 1.0) {
            throw new IllegalArgumentException("Requires 0.0 <= margin < 1.0.");
        }
        this.itemMargin = margin;
        fireChangeEvent();
    }
=====================================================================
Found a 11 line (75 tokens) duplication in the following files: 
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 879 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        XYLineAndShapeRenderer.State s = (XYLineAndShapeRenderer.State) state;
        // update path to reflect latest point
        if (!Double.isNaN(transX1) && !Double.isNaN(transY1)) {
            float x = (float) transX1;
            float y = (float) transY1;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                x = (float) transY1;
                y = (float) transX1;
            }
            if (s.isLastPointGood()) {
=====================================================================
Found a 17 line (75 tokens) duplication in the following files: 
Starting at line 713 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 885 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

                    if (orientation == PlotOrientation.HORIZONTAL) {
                        x = (float) transY1;
                        y = (float) transX1;
                    }
                    if (s.isLastPointGood()) {
                        // TODO: check threshold
                        s.seriesPath.lineTo(x, y);
                    }
                    else {
                        s.seriesPath.moveTo(x, y);
                    }
                    s.setLastPointGood(true);
                }
                else {
                    s.setLastPointGood(false);
                }
                if (item == dataset.getItemCount(series) - 1) {
=====================================================================
Found a 13 line (75 tokens) duplication in the following files: 
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java

                        lvalue = vdataset.getXValue(series, item);
                        uvalue = lvalue + delta;
                    }
                    minimum = Math.min(minimum, lvalue);
                    maximum = Math.max(maximum, uvalue);
                }
            }
        }
        else {
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    lvalue = dataset.getXValue(series, item);
=====================================================================
Found a 28 line (75 tokens) duplication in the following files: 
Starting at line 1201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1341 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                    double value = dataset.getYValue(series, item);
                    if (!Double.isNaN(value)) {
                        minimum = Math.min(minimum, value);
                        maximum = Math.max(maximum, value);
                    }
                }
            }
        }
        if (minimum == Double.POSITIVE_INFINITY) {
            return null;
        }
        else {
            return new Range(minimum, maximum);
        }
    }

    /**
     * Returns the range of values in the z-dimension for the dataset. This
     * method is the partner for the {@link #findRangeBounds(XYDataset)}
     * and {@link #findDomainBounds(XYDataset)} methods.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     *
     * @param <S>  the type for the series keys.
     * 
     * @return The range (possibly {@code null}).
     */
    public static <S extends Comparable<S>> Range findZBounds(
=====================================================================
Found a 19 line (75 tokens) duplication in the following files: 
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        this.chart = createBarChart();
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
=====================================================================
Found a 11 line (75 tokens) duplication in the following files: 
Starting at line 545 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 555 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
=====================================================================
Found a 11 line (75 tokens) duplication in the following files: 
Starting at line 564 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 574 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 584 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01101 - bottom, left and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
=====================================================================
Found a 11 line (75 tokens) duplication in the following files: 
Starting at line 650 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 660 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10110 - top, left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
=====================================================================
Found a 11 line (75 tokens) duplication in the following files: 
Starting at line 690 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 700 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 721 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11010 - top, bottom and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
=====================================================================
Found a 8 line (75 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (75 tokens) duplication in the following files: 
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (75 tokens) duplication in the following files: 
Starting at line 646 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 652 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

        c1.add(new LegendItem("X", "XX", "tt", "url", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.YELLOW, new BasicStroke(1.0f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(1.0f),
                Color.GREEN));
=====================================================================
Found a 9 line (75 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 182 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java

    public void testDrawWithNullMeanVertical() {
        try {
            DefaultStatisticalCategoryDataset<String, String> dataset
                    = new DefaultStatisticalCategoryDataset<>();
            dataset.add(1.0, 2.0, "S1", "C1");
            dataset.add(null, 4.0, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
=====================================================================
Found a 9 line (75 tokens) duplication in the following files: 
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java

    public void testDrawWithNullDeviationVertical() {
        try {
            DefaultStatisticalCategoryDataset<String, String> dataset
                    = new DefaultStatisticalCategoryDataset<>();
            dataset.add(1.0, 2.0, "S1", "C1");
            dataset.add(4.0, null, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
=====================================================================
Found a 6 line (75 tokens) duplication in the following files: 
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 332 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
=====================================================================
Found a 7 line (75 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1062 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1084 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
        dataset.addSeries("S1", data1);
        Range r = DatasetUtils.findDomainBounds(dataset);
=====================================================================
Found a 6 line (75 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1057 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1079 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

    public void testFindDomainBounds4() {
        DefaultIntervalXYDataset<String> dataset = new DefaultIntervalXYDataset<>();
        double[] x1 = new double[] {0.8, 3.2, 3.0};
        double[] x1Start = new double[] {0.9, 1.9, 2.9};
        double[] x1End = new double[] {1.1, 2.1, 3.1};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
=====================================================================
Found a 8 line (75 tokens) duplication in the following files: 
Starting at line 232 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        VectorSeries<String> s1 = new VectorSeries<>("S1");
        assertEquals(Integer.MAX_VALUE, s1.getMaximumItemCount());
        s1.setMaximumItemCount(2);
        assertEquals(2, s1.getMaximumItemCount());
        s1.add(1.0, 1.1, 1.1, 1.1);
        s1.add(2.0, 2.2, 2.2, 2.2);
        s1.add(3.0, 3.3, 3.3, 3.3);
        assertEquals(2.0, s1.getXValue(0), EPSILON);
=====================================================================
Found a 14 line (74 tokens) duplication in the following files: 
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    public double valueToJava2D(double value, Rectangle2D area,
            RectangleEdge edge) {

        Range range = getRange();
        double axisMin = range.getLowerBound();
        double axisMax = range.getUpperBound();

        double min = 0.0;
        double max = 0.0;
        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
=====================================================================
Found a 26 line (74 tokens) duplication in the following files: 
Starting at line 636 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 636 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        CategoryAxis existing = this.domainAxes.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        if (axis != null) {
            axis.setPlot(this);
        }
        this.domainAxes.put(index, axis);
        if (axis != null) {
            axis.configure();
            axis.addChangeListener(this);
        }
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Sets the domain axes for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param axes  the axes ({@code null} not permitted).
     *
     * @see #setRangeAxes(ValueAxis[])
     */
    public void setDomainAxes(CategoryAxis[] axes) {
=====================================================================
Found a 60 line (74 tokens) duplication in the following files: 
Starting at line 1554 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 761 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

    }

    /**
     * Returns the section label font.
     *
     * @return The font (never {@code null}).
     *
     * @see #setLabelFont(Font)
     */
    public Font getLabelFont() {
        return this.labelFont;
    }

    /**
     * Sets the section label font and sends a {@link PlotChangeEvent} to all
     * registered listeners.
     *
     * @param font  the font ({@code null} not permitted).
     *
     * @see #getLabelFont()
     */
    public void setLabelFont(Font font) {
        Args.nullNotPermitted(font, "font");
        this.labelFont = font;
        fireChangeEvent();
    }

    /**
     * Returns the section label paint.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setLabelPaint(Paint)
     */
    public Paint getLabelPaint() {
        return this.labelPaint;
    }

    /**
     * Sets the section label paint and sends a {@link PlotChangeEvent} to all
     * registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getLabelPaint()
     */
    public void setLabelPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.labelPaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the section label background paint.
     *
     * @return The paint (possibly {@code null}).
     *
     * @see #setLabelBackgroundPaint(Paint)
     */
    public Paint getLabelBackgroundPaint() {
=====================================================================
Found a 15 line (74 tokens) duplication in the following files: 
Starting at line 299 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 425 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

        }

        CategoryItemLabelGenerator generator = getItemLabelGenerator(row, 
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
                    value < base);
        }

        // collect entity and tool tip information...
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }
    }
=====================================================================
Found a 13 line (74 tokens) duplication in the following files: 
Starting at line 297 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 327 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

                right.closePath();
            }
        }
        else {  // handle negative value
            transY1 = (float) rangeAxis.valueToJava2D(y1 + stack1[0], dataArea,
                    edge1);
            float transStack1 = (float) rangeAxis.valueToJava2D(stack1[0],
                    dataArea, edge1);
            float transStackLeft = (float) rangeAxis.valueToJava2D(
                    adjStackLeft[0], dataArea, edge1);

            // LEFT POLYGON
            if (y0 >= 0.0) {
=====================================================================
Found a 13 line (74 tokens) duplication in the following files: 
Starting at line 619 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 664 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

    protected Range findDomainBounds(XYDataset dataset,
            boolean includeInterval) {
        if (dataset == null) {
            return null;
        }
        if (getDataBoundsIncludesVisibleSeriesOnly()) {
            List visibleSeriesKeys = new ArrayList();
            int seriesCount = dataset.getSeriesCount();
            for (int s = 0; s < seriesCount; s++) {
                if (isSeriesVisible(s)) {
                    visibleSeriesKeys.add(dataset.getSeriesKey(s));
                }
            }
=====================================================================
Found a 12 line (74 tokens) duplication in the following files: 
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 466 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java

                double transY2 = rangeAxis.valueToJava2D(ph1, dataArea,
                        plot.getRangeAxisEdge());

                // The first point is (x, 0)
                if (orientation == PlotOrientation.VERTICAL) {
                    areaState.getSeriesArea().addPoint((int) transX1,
                            (int) transY2);
                }
                else if (orientation == PlotOrientation.HORIZONTAL) {
                    areaState.getSeriesArea().addPoint((int) transY2,
                            (int) transX1);
                }
=====================================================================
Found a 90 line (74 tokens) duplication in the following files: 
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java
Starting at line 160 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYShapeRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns {@code true} if outlines should be drawn for shapes, and
     * {@code false} otherwise.
     *
     * @return A boolean.
     *
     * @see #setDrawOutlines(boolean)
     */
    public boolean getDrawOutlines() {
        return this.drawOutlines;
    }

    /**
     * Sets the flag that controls whether outlines are drawn for
     * shapes, and sends a {@link RendererChangeEvent} to all registered
     * listeners.
     * <P>
     * In some cases, shapes look better if they do NOT have an outline, but
     * this flag allows you to set your own preference.
     *
     * @param flag  the flag.
     *
     * @see #getDrawOutlines()
     */
    public void setDrawOutlines(boolean flag) {
        this.drawOutlines = flag;
        fireChangeEvent();
    }

    /**
     * Returns {@code true} if the renderer should use the fill paint
     * setting to fill shapes, and {@code false} if it should just
     * use the regular paint.
     * <p>
     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the
     * effect of this flag.
     *
     * @return A boolean.
     *
     * @see #setUseFillPaint(boolean)
     * @see #getUseOutlinePaint()
     */
    public boolean getUseFillPaint() {
        return this.useFillPaint;
    }

    /**
     * Sets the flag that controls whether the fill paint is used to fill
     * shapes, and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     *
     * @param flag  the flag.
     *
     * @see #getUseFillPaint()
     */
    public void setUseFillPaint(boolean flag) {
        this.useFillPaint = flag;
        fireChangeEvent();
    }

    /**
     * Returns {@code true} if the renderer should use the outline paint
     * setting to draw shape outlines, and {@code false} if it should just
     * use the regular paint.
     *
     * @return A boolean.
     *
     * @see #setUseOutlinePaint(boolean)
     * @see #getUseFillPaint()
     */
    public boolean getUseOutlinePaint() {
        return this.useOutlinePaint;
    }

    /**
     * Sets the flag that controls whether the outline paint is used to draw
     * shape outlines, and sends a {@link RendererChangeEvent} to all
     * registered listeners.
     * <p>
     * Refer to {@code XYLineAndShapeRendererDemo2.java} to see the
     * effect of this flag.
     *
     * @param flag  the flag.
     *
     * @see #getUseOutlinePaint()
     */
    public void setUseOutlinePaint(boolean flag) {
=====================================================================
Found a 19 line (74 tokens) duplication in the following files: 
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 73 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        assertSame(url2, url1);
    }

    /**
     * Draws the chart with a null info object to make sure that no exceptions
     * are thrown (a problem that was occurring at one point).
     */
    @Test
    public void testDrawWithNullInfo() {
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
=====================================================================
Found a 7 line (74 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 6 line (74 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 8 line (74 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (74 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 17 line (74 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/ArcDialFrameTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/StandardDialFrameTest.java

        ArcDialFrame f2 = CloneUtils.clone(f1);
        assertNotSame(f1, f2);
        assertSame(f1.getClass(), f2.getClass());
        assertEquals(f1, f2);

        // check that the listener lists are independent
        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();
        f1.addChangeListener(l1);
        assertTrue(f1.hasListener(l1));
        assertFalse(f2.hasListener(l1));
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
=====================================================================
Found a 17 line (74 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialPointerTest.java
Starting at line 180 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialValueIndicatorTest.java

        DialPointer i2 = CloneUtils.clone(i1);
        assertNotSame(i1, i2);
        assertSame(i1.getClass(), i2.getClass());
        assertEquals(i1, i2);

        // check that the listener lists are independent
        MyDialLayerChangeListener l1 = new MyDialLayerChangeListener();
        i1.addChangeListener(l1);
        assertTrue(i1.hasListener(l1));
        assertFalse(i2.hasListener(l1));
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
=====================================================================
Found a 20 line (74 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java

            dataset.add(3.0, 4.0, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Draws the chart with a {@code null} mean value to make sure that
     * no exceptions are thrown (particularly by code in the renderer).  See
     * bug report 1779941.
     */
    @Test
    public void testDrawWithNullMeanVertical() {
=====================================================================
Found a 31 line (73 tokens) duplication in the following files: 
Starting at line 908 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java

        createAndAddEntity(cursor, state, dataArea, edge, plotState);

        // draw the category labels and axis label
        state = drawCategoryLabels(g2, plotArea, dataArea, edge, state,
                plotState);
        if (getAttributedLabel() != null) {
            state = drawAttributedLabel(getAttributedLabel(), g2, plotArea, 
                    dataArea, edge, state);
            
        } else {
            state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state);
        }
        return state;

    }

    /**
     * Draws the category labels and returns the updated axis state.
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param plotArea  the plot area ({@code null} not permitted).
     * @param dataArea  the area inside the axes ({@code null} not
     *                  permitted).
     * @param edge  the axis location ({@code null} not permitted).
     * @param state  the axis state ({@code null} not permitted).
     * @param plotState  collects information about the plot ({@code null}
     *                   permitted).
     *
     * @return The updated axis state (never {@code null}).
     */
    protected AxisState drawCategoryLabels(Graphics2D g2, Rectangle2D plotArea,
=====================================================================
Found a 50 line (73 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Returns the current tick unit.
     *
     * @return The current tick unit.
     *
     * @see #setTickUnit(NumberTickUnit)
     */
    public NumberTickUnit getTickUnit() {
        return this.tickUnit;
    }

    /**
     * Sets the tick unit for the axis and sends an {@link AxisChangeEvent} to
     * all registered listeners.  A side effect of calling this method is that
     * the "auto-select" feature for tick units is switched off (you can
     * restore it using the {@link ValueAxis#setAutoTickUnitSelection(boolean)}
     * method).
     *
     * @param unit  the new tick unit ({@code null} not permitted).
     *
     * @see #getTickUnit()
     */
    public void setTickUnit(NumberTickUnit unit) {
        // defer argument checking...
        setTickUnit(unit, true, true);
    }

    /**
     * Sets the tick unit for the axis and, if requested, sends an
     * {@link AxisChangeEvent} to all registered listeners.  In addition, an
     * option is provided to turn off the "auto-select" feature for tick units
     * (you can restore it using the
     * {@link ValueAxis#setAutoTickUnitSelection(boolean)} method).
     *
     * @param unit  the new tick unit ({@code null} not permitted).
     * @param notify  notify listeners?
     * @param turnOffAutoSelect  turn off the auto-tick selection?
     *
     * @see #getTickUnit()
     */
    public void setTickUnit(NumberTickUnit unit, boolean notify,
            boolean turnOffAutoSelect) {
        Args.nullNotPermitted(unit, "unit");
        this.tickUnit = unit;
        if (turnOffAutoSelect) {
            setAutoTickUnitSelection(false, false);
        }
        if (notify) {
=====================================================================
Found a 41 line (73 tokens) duplication in the following files: 
Starting at line 381 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialBackground.java
Starting at line 354 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 388 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java

    }

    /**
     * Returns a clone of this {@code LabelBlock} instance.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem cloning.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 25 line (73 tokens) duplication in the following files: 
Starting at line 200 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 516 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        PiePlot plot = new PiePlot(dataset);
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale));
        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
        if (tooltips) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));
        }
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;

    }

    /**
     * Creates a pie chart with default settings.
     * <P>
     * The chart object returned by this method uses a {@link PiePlot} instance
     * as the plot.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     *
     * @return A pie chart.
     */
    public static JFreeChart createPieChart(String title, PieDataset dataset) {
=====================================================================
Found a 13 line (73 tokens) duplication in the following files: 
Starting at line 282 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 416 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

    public LegendItem(String label, String description,
                      String toolTipText, String urlText,
                      boolean shapeVisible, Shape shape,
                      boolean shapeFilled, Paint fillPaint,
                      boolean shapeOutlineVisible, Paint outlinePaint,
                      Stroke outlineStroke,
                      boolean lineVisible, Shape line,
                      Stroke lineStroke, Paint linePaint) {

        Args.nullNotPermitted(label, "label");
        Args.nullNotPermitted(fillPaint, "fillPaint");
        Args.nullNotPermitted(lineStroke, "lineStroke");
        Args.nullNotPermitted(outlinePaint, "outlinePaint");
=====================================================================
Found a 14 line (73 tokens) duplication in the following files: 
Starting at line 3750 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3609 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            paintLine = false;
            if ((tick.getTickType() == TickType.MINOR)
                    && isRangeMinorGridlinesVisible()) {
                gridStroke = getRangeMinorGridlineStroke();
                gridPaint = getRangeMinorGridlinePaint();
                paintLine = true;
            }
            else if ((tick.getTickType() == TickType.MAJOR)
                    && isRangeGridlinesVisible()) {
                gridStroke = getRangeGridlineStroke();
                gridPaint = getRangeGridlinePaint();
                paintLine = true;
            }
            if (((tick.getValue() != 0.0)
=====================================================================
Found a 58 line (73 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java

        ItemLabelPosition p = new ItemLabelPosition(ItemLabelAnchor.CENTER,
                TextAnchor.CENTER);
        setDefaultPositiveItemLabelPosition(p);
        setDefaultNegativeItemLabelPosition(p);
        setPositiveItemLabelPositionFallback(null);
        setNegativeItemLabelPositionFallback(null);
    }

    /**
     * Returns {@code true} if the renderer displays each item value as
     * a percentage (so that the stacked bars add to 100%), and
     * {@code false} otherwise.
     *
     * @return A boolean.
     *
     * @see #setRenderAsPercentages(boolean)
     */
    public boolean getRenderAsPercentages() {
        return this.renderAsPercentages;
    }

    /**
     * Sets the flag that controls whether the renderer displays each item
     * value as a percentage (so that the stacked bars add to 100%), and sends
     * a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param asPercentages  the flag.
     *
     * @see #getRenderAsPercentages()
     */
    public void setRenderAsPercentages(boolean asPercentages) {
        this.renderAsPercentages = asPercentages;
        fireChangeEvent();
    }

    /**
     * Returns the number of passes ({@code 3}) required by this renderer.
     * The first pass is used to draw the bar shadows, the second pass is used
     * to draw the bars, and the third pass is used to draw the item labels
     * (if visible).
     *
     * @return The number of passes required by the renderer.
     */
    @Override
    public int getPassCount() {
        return 3;
    }

    /**
     * Returns the range of values the renderer requires to display all the
     * items from the specified dataset.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range (or {@code null} if the dataset is empty).
     */
    @Override
    public Range findRangeBounds(CategoryDataset dataset) {
=====================================================================
Found a 4 line (73 tokens) duplication in the following files: 
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/WaferMapRenderer.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/WaferMapRenderer.java

        for (Iterator i = this.paintIndex.entrySet().iterator(); i.hasNext();) {
            Map.Entry entry = (Map.Entry) i.next();
            if (((Integer) entry.getValue()).equals(index)) {
                if (((Number) entry.getKey()).doubleValue() < minValue) {
=====================================================================
Found a 13 line (73 tokens) duplication in the following files: 
Starting at line 383 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 634 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

                XYSeriesLabelGenerator lg = getLegendItemLabelGenerator();
                String label = lg.generateLabel(dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
=====================================================================
Found a 23 line (73 tokens) duplication in the following files: 
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/function/LineFunction2D.java
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/function/PowerFunction2D.java

        LineFunction2D that = (LineFunction2D) obj;
        if (this.a != that.a) {
            return false;
        }
        if (this.b != that.b) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     * 
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 29;
        result = HashUtils.hashCode(result, this.a);
        result = HashUtils.hashCode(result, this.b);
        return result;
    }
}
=====================================================================
Found a 7 line (73 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 175 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java

        Calendar calendar = Calendar.getInstance(zone, locale);
        calendar.setTime(time);
        this.millisecond = calendar.get(Calendar.MILLISECOND);
        this.second = (byte) calendar.get(Calendar.SECOND);
        this.minute = (byte) calendar.get(Calendar.MINUTE);
        this.hour = (byte) calendar.get(Calendar.HOUR_OF_DAY);
        this.day = new Day(time, zone, locale);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 513 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(22.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00111 - left, right and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        container.add(new EmptyBlock(5.4, 3.2), RectangleEdge.RIGHT);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 549 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01101 - bottom, left and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 11 line (73 tokens) duplication in the following files: 
Starting at line 256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01110 - bottom. left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 625 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 644 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10101 - top, left and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2);
=====================================================================
Found a 11 line (73 tokens) duplication in the following files: 
Starting at line 332 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 342 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2);
        assertEquals(33.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10110 - top, left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (73 tokens) duplication in the following files: 
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 684 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 11001
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 11 line (73 tokens) duplication in the following files: 
Starting at line 372 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 403 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11010 - top, bottom and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
=====================================================================
Found a 7 line (73 tokens) duplication in the following files: 
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item2 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);
=====================================================================
Found a 8 line (73 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 7 line (73 tokens) duplication in the following files: 
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
                true, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (73 tokens) duplication in the following files: 
Starting at line 218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 15 line (73 tokens) duplication in the following files: 
Starting at line 847 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 957 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryMarker m = new CategoryMarker("C1");
        plot.addDomainMarker(m);
        List<EventListener> listeners = Arrays.asList(m.getListeners(
                MarkerChangeListener.class));
        assertTrue(listeners.contains(plot));
        plot.clearDomainMarkers();
        listeners = Arrays.asList(m.getListeners(MarkerChangeListener.class));
        assertFalse(listeners.contains(plot));
    }

    /**
     * Some tests for the addRangeMarker() method(s).
     */
    @Test
    public void testAddRangeMarker() {
=====================================================================
Found a 18 line (73 tokens) duplication in the following files: 
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.setRenderer(1, new LineAndShapeRenderer());
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Some checks for the getDomainAxisIndex() method.
     */
    @Test
    public void testGetDomainAxisIndex() {
=====================================================================
Found a 11 line (73 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialCapTest.java
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialCapTest.java

        assertSame(c1.getClass(), c2.getClass());
        assertEquals(c1, c2);

        // test a customised instance
        c1 = new DialCap();
        c1.setFillPaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.GREEN));
        c1.setOutlinePaint(new GradientPaint(1.0f, 2.0f, Color.WHITE,
                3.0f, 4.0f, Color.GRAY));
        c1.setOutlineStroke(new BasicStroke(2.0f));
        c2 = (DialCap) c1.clone();
=====================================================================
Found a 6 line (73 tokens) duplication in the following files: 
Starting at line 218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 321 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        d.addSeries("S1", new double[][] {{}, {}});
        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0));

        // check a series with one item
        d.addSeries("S2", new double[][] {{1.0}, {9.9}});
        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1));
=====================================================================
Found a 15 line (73 tokens) duplication in the following files: 
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java

        StackedXYAreaRenderer2 r2 = TestUtils.serialised(r1);
        assertEquals(r1, r2);
    }

    /**
     * Check that the renderer is calculating the range bounds correctly.
     */
    @Test
    public void testFindRangeBounds() {
        TableXYDataset<String> dataset
                = RendererXYPackageUtils.createTestTableXYDataset();
        JFreeChart chart = ChartFactory.createStackedXYAreaChart(
                "Test Chart", "X", "Y", dataset, PlotOrientation.VERTICAL,
                false, false, false);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 13 line (73 tokens) duplication in the following files: 
Starting at line 475 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

        assertEquals(c1, c2);

    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
=====================================================================
Found a 8 line (73 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultStatisticalCategoryDatasetTest.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultStatisticalCategoryDatasetTest.java

    public void testCloning() {
        DefaultStatisticalCategoryDataset<String, String> d1
                = new DefaultStatisticalCategoryDataset<>();
        d1.add(1.1, 2.2, "R1", "C1");
        d1.add(3.3, 4.4, "R1", "C2");
        d1.add(null, 5.5, "R1", "C3");
        d1.add(6.6, null, "R2", "C3");
        DefaultStatisticalCategoryDataset<String, String> d2 = null;
=====================================================================
Found a 14 line (73 tokens) duplication in the following files: 
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

        assertEquals(cal.getTime(), m.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
        cal.set(Calendar.MILLISECOND, 555);
=====================================================================
Found a 6 line (73 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

    public void testEquals() {
        DefaultXYDataset<String> d1 = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
=====================================================================
Found a 11 line (72 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/AxisEntity.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/JFreeChartEntity.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/PlotEntity.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/TitleEntity.java

        AxisEntity that = (AxisEntity) obj;
        if (!getArea().equals(that.getArea())) {
            return false;
        }
        if (!Objects.equals(getToolTipText(), that.getToolTipText())) {
            return false;
        }
        if (!Objects.equals(getURLText(), that.getURLText())) {
            return false;
        }
        if (!(this.axis.equals(that.axis))) {
=====================================================================
Found a 32 line (72 tokens) duplication in the following files: 
Starting at line 605 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 642 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                CategoryPlot subplot = (CategoryPlot) this.subplots.get(i);
                PlotRenderingInfo subplotInfo = info.getSubplotInfo(i);
                subplot.handleClick(x, y, subplotInfo);
            }
        }

    }

    /**
     * Receives a {@link PlotChangeEvent} and responds by notifying all
     * listeners.
     *
     * @param event  the event.
     */
    @Override
    public void plotChanged(PlotChangeEvent event) {
        notifyListeners(event);
    }

    /**
     * Tests the plot for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof CombinedDomainCategoryPlot)) {
=====================================================================
Found a 27 line (72 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GradientBarPainter.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYBarPainter.java

        if (renderer.isDrawBarOutline()
            /*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
=====================================================================
Found a 42 line (72 tokens) duplication in the following files: 
Starting at line 343 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns the range of values the renderer requires to display all the
     * items from the specified dataset. This takes into account the range
     * between the min/max values, possibly ignoring invisible series.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range (or {@code null} if the dataset is
     *         {@code null} or empty).
     */
    @Override
    public Range findRangeBounds(CategoryDataset dataset) {
         return findRangeBounds(dataset, true);
    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area in which the data is drawn.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
            int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(row, column)) {
            return;
        }
=====================================================================
Found a 27 line (72 tokens) duplication in the following files: 
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StandardBarPainter.java
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/GradientXYBarPainter.java

        if (renderer.isDrawBarOutline()) {
               // && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = renderer.getItemOutlineStroke(row, column);
            Paint paint = renderer.getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }

    }

    /**
     * Paints a single bar instance.
     *
     * @param g2  the graphics target.
     * @param renderer  the renderer.
     * @param row  the row index.
     * @param column  the column index.
     * @param bar  the bar
     * @param base  indicates which side of the rectangle is the base of the
     *              bar.
     * @param pegShadow  peg the shadow to the base of the bar?
     */
    @Override
    public void paintBarShadow(Graphics2D g2, BarRenderer renderer, int row,
=====================================================================
Found a 13 line (72 tokens) duplication in the following files: 
Starting at line 414 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 561 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

                    yyQ1Median - yyQ3Median, width);
        }
        if (this.fillBox) {
            g2.setPaint(lookupBoxPaint(series, item));
            g2.fill(box);
        }
        g2.setStroke(getItemOutlineStroke(series, item));
        g2.setPaint(getItemOutlinePaint(series, item));
        g2.draw(box);

        // draw median
        g2.setPaint(getArtifactPaint());
        g2.draw(new Line2D.Double(yyMedian,
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 487 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 503 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 559 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java
Starting at line 575 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

            g2.setFont(this.font);
            this.content = TextUtils.createTextBlock(this.text, this.font,
                    this.paint, maxWidth, this.maximumLinesToDisplay,
                    new G2TextMeasurer(g2));
            this.content.setLineAlignment(this.textAlignment);
            Size2D contentSize = this.content.calculateDimensions(g2);
            if (this.expandToFitSpace) {
                return new Size2D(maxWidth, contentSize.getHeight());
=====================================================================
Found a 9 line (72 tokens) duplication in the following files: 
Starting at line 350 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 389 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java

    public Number getStartValue(R rowKey, C columnKey) {
        Number result = null;
        int row = getRowIndex(rowKey);
        TaskSeries<R> series = this.data.get(row);
        Task task = series.get(columnKey.toString());
        if (task != null) {
            TimePeriod duration = task.getDuration();
            if (duration != null) {
                result = duration.getStart().getTime();
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 514 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 555 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 596 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java

    public Number getStartValue(R rowKey, C columnKey, int subinterval) {
        Number result = null;
        int row = getRowIndex(rowKey);
        TaskSeries<R> series = this.data.get(row);
        Task task = series.get(columnKey.toString());
        if (task != null) {
            Task sub = task.getSubtask(subinterval);
            if (sub != null) {
=====================================================================
Found a 10 line (72 tokens) duplication in the following files: 
Starting at line 1742 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1860 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            int seriesCount = dataset.getRowCount();
            int itemCount = dataset.getColumnCount();
            for (int series = 0; series < seriesCount; series++) {
                for (int item = 0; item < itemCount; item++) {
                    Number value;
                    if (dataset instanceof IntervalCategoryDataset) {
                        @SuppressWarnings("unchecked")
                        IntervalCategoryDataset<R, C> icd
                                = (IntervalCategoryDataset) dataset;
                        value = icd.getStartValue(series, item);
=====================================================================
Found a 6 line (72 tokens) duplication in the following files: 
Starting at line 71 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item1 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description", "ToolTip", "URL",
                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true,
                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 6 line (72 tokens) duplication in the following files: 
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true,
                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 6 line (72 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
                true, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 175 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
=====================================================================
Found a 8 line (72 tokens) duplication in the following files: 
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 7 line (72 tokens) duplication in the following files: 
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 5 line (72 tokens) duplication in the following files: 
Starting at line 227 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(3.3f), Color.GREEN);
=====================================================================
Found a 6 line (72 tokens) duplication in the following files: 
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), false,
            new Line2D.Double(4.0, 3.0, 2.0, 1.0), new BasicStroke(3.3f),
            Color.WHITE
        );
=====================================================================
Found a 13 line (72 tokens) duplication in the following files: 
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedDomainXYPlotTest.java
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CombinedRangeXYPlotTest.java

        XYPlot<String> subplot1 = new XYPlot<>(data1, null, rangeAxis1, renderer1);
        subplot1.setRangeAxisLocation(AxisLocation.BOTTOM_OR_LEFT);

        XYTextAnnotation annotation = new XYTextAnnotation("Hello!", 50.0,
                10000.0);
        annotation.setFont(new Font("SansSerif", Font.PLAIN, 9));
        annotation.setRotationAngle(Math.PI / 4.0);
        subplot1.addAnnotation(annotation);

        // create subplot 2...
        XYDataset<String> data2 = createDataset2();
        XYItemRenderer renderer2 = new StandardXYItemRenderer();
        NumberAxis rangeAxis2 = new NumberAxis("Range 2");
=====================================================================
Found a 9 line (72 tokens) duplication in the following files: 
Starting at line 270 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-6.0, "R2", "C1");
=====================================================================
Found a 20 line (72 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 212 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java

            dataset.add(3.0, 4.0, "S1", "C2");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new StatisticalBarRenderer());
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Draws the chart with a {@code null} mean value to make sure that
     * no exceptions are thrown (particularly by code in the renderer).  See
     * bug report 1779941.
     */
    @Test
    public void testDrawWithNullMeanVertical() {
=====================================================================
Found a 15 line (72 tokens) duplication in the following files: 
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/title/DateTitleTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/title/TextTitleTest.java

        DateTitle t2 = new DateTitle();
        assertEquals(t1, t2);

        t1.setText("Test 1");
        assertNotEquals(t1, t2);
        t2.setText("Test 1");
        assertEquals(t1, t2);

        Font f = new Font("SansSerif", Font.PLAIN, 15);
        t1.setFont(f);
        assertNotEquals(t1, t2);
        t2.setFont(f);
        assertEquals(t1, t2);

        t1.setPaint(Color.BLUE);
=====================================================================
Found a 26 line (72 tokens) duplication in the following files: 
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultMultiValueCategoryDatasetTest.java

        assertEquals(1.0, d.getValue("R1", "C1"));
        boolean pass = false;
        try {
            d.getValue("XX", "C1");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            d.getValue("R1", "XX");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the clone() method.
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 18 line (72 tokens) duplication in the following files: 
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 466 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java

            Hour h = new Hour(new Date(0L));
            assertEquals(1970, h.getYear());
            assertEquals(1, h.getMonth());
            assertEquals(1, h.getDayOfMonth());
            assertEquals(hoursOffset, h.getHour());
            assertEquals(0L, h.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the hour-day constructor should use it.
     */
    @Test
    public void testHourDayConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 9 line (72 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultXYDataset<String> d2 = CloneUtils.clone(d1);
        assertNotSame(d1, d2);
        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // try a dataset with some content...
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
=====================================================================
Found a 25 line (71 tokens) duplication in the following files: 
Starting at line 428 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 511 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

            g2.setPaint(getOutlinePaint());
            g2.draw(hotspot);
        }

        String toolTip = getToolTipText();
        String url = getURL();
        if (toolTip != null || url != null) {
            addEntity(info, hotspot, rendererIndex, toolTip, url);
        }

    }

    /**
     * Tests this annotation for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return {@code true} or {@code false}.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof XYPointerAnnotation)) {
=====================================================================
Found a 25 line (71 tokens) duplication in the following files: 
Starting at line 2630 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        Collection<Marker> markers;
        if (layer == Layer.FOREGROUND) {
            markers = this.foregroundRangeMarkers.get(index);
        } else {
            markers = this.backgroundRangeMarkers.get(index);
        }
        if (markers == null) {
            return false;
        }
        boolean removed = markers.remove(marker);
        if (removed && notify) {
            fireChangeEvent();
        }
        return removed;
    }

    /**
     * Returns the flag that controls whether or not the domain crosshair is
     * displayed by the plot.
     *
     * @return A boolean.
     *
     * @see #setDomainCrosshairVisible(boolean)
     */
    public boolean isDomainCrosshairVisible() {
=====================================================================
Found a 32 line (71 tokens) duplication in the following files: 
Starting at line 605 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 476 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 642 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                CategoryPlot subplot = (CategoryPlot) this.subplots.get(i);
                PlotRenderingInfo subplotInfo = info.getSubplotInfo(i);
                subplot.handleClick(x, y, subplotInfo);
            }
        }

    }

    /**
     * Receives a {@link PlotChangeEvent} and responds by notifying all
     * listeners.
     *
     * @param event  the event.
     */
    @Override
    public void plotChanged(PlotChangeEvent event) {
        notifyListeners(event);
    }

    /**
     * Tests the plot for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof CombinedDomainCategoryPlot)) {
=====================================================================
Found a 22 line (71 tokens) duplication in the following files: 
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPlot.java
Starting at line 505 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 1186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        ValueDataset existing = this.datasets.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.datasets.put(index, dataset);
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);
    }

    /**
     * Returns the number of datasets.
     *
     * @return The number of datasets.
     */
    public int getDatasetCount() {
        return this.datasets.size();
    }
=====================================================================
Found a 14 line (71 tokens) duplication in the following files: 
Starting at line 300 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 448 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 374 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/WaterfallBarRenderer.java

        g2.setPaint(itemPaint);
        g2.fill(bar);

        // draw the outline...
        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }
=====================================================================
Found a 12 line (71 tokens) duplication in the following files: 
Starting at line 1184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1467 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                for (int item = 0; item < itemCount; item++) {
                    double lvalue = ohlc.getLowValue(series, item);
                    double uvalue = ohlc.getHighValue(series, item);
                    if (!Double.isNaN(lvalue)) {
                        minimum = Math.min(minimum, lvalue);
                    }
                    if (!Double.isNaN(uvalue)) {
                        maximum = Math.max(maximum, uvalue);
                    }
                }
            }
        }
=====================================================================
Found a 11 line (71 tokens) duplication in the following files: 
Starting at line 1627 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1686 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1797 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1918 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            int seriesCount = dataset.getSeriesCount();
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {

                    double value;
                    if (dataset instanceof IntervalXYDataset) {
                        @SuppressWarnings("unchecked")
                        IntervalXYDataset<S> intervalXYData
                            = (IntervalXYDataset) dataset;
                        value = intervalXYData.getStartXValue(series, item);
=====================================================================
Found a 7 line (71 tokens) duplication in the following files: 
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item2 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);
=====================================================================
Found a 18 line (71 tokens) duplication in the following files: 
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1016 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1039 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.setRenderer(1, new LineAndShapeRenderer());
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Some checks for the getDomainAxisIndex() method.
     */
    @Test
    public void testGetDomainAxisIndex() {
=====================================================================
Found a 7 line (71 tokens) duplication in the following files: 
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 2, 0.0, 1.1));
        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 1.0, 2.2));
        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 2.0, 3.3));
        assertEquals(1, RendererUtils.findLiveItemsUpperBound(d, 2, 3.0, 4.4));

        // check a series with three items
        d.addSeries("S4", new double[][] {{1.0, 2.0, 1.5}, {9.9, 9.9, 9.9}});
=====================================================================
Found a 6 line (71 tokens) duplication in the following files: 
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StandardChartThemeTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StandardChartThemeTest.java

        t1.setDrawingSupplier(new DefaultDrawingSupplier(
                new Paint[] {Color.RED},
                new Paint[] {Color.BLUE},
                new Stroke[] {new BasicStroke(1.0f)},
                new Stroke[] {new BasicStroke(1.0f)},
                new Shape[] {new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0)}));
=====================================================================
Found a 8 line (71 tokens) duplication in the following files: 
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
        SlidingGanttCategoryDataset d1 = new SlidingGanttCategoryDataset(
                u1, 0, 5);
        SlidingGanttCategoryDataset d2 = CloneUtils.clone(d1);
=====================================================================
Found a 17 line (71 tokens) duplication in the following files: 
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

            assertEquals(0L, h.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 0, 0);
=====================================================================
Found a 27 line (71 tokens) duplication in the following files: 
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultWindDatasetTest.java
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        assertEquals("Series 2", d.getSeriesKey(1));

        // check for series key out of bounds
        boolean pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(2);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the indexOf(Comparable) method.
     */
    @Test
    public void testIndexOf() {
=====================================================================
Found a 13 line (71 tokens) duplication in the following files: 
Starting at line 262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        VectorSeries<String> s1 = new VectorSeries<>("S1");
        s1.addChangeListener(this);
        s1.clear();
        assertNull(this.lastEvent);
        assertTrue(s1.isEmpty());
        s1.add(1.0, 2.0, 3.0, 4.0);
        assertFalse(s1.isEmpty());
        s1.clear();
        assertNotNull(this.lastEvent);
        assertTrue(s1.isEmpty());
    }

}
=====================================================================
Found a 6 line (71 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

    public void testEquals() {
        DefaultXYDataset<String> d1 = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
=====================================================================
Found a 24 line (70 tokens) duplication in the following files: 
Starting at line 347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 461 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

        fireAnnotationChanged();
    }

    /**
     * Draws the annotation.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  the plot rendering info.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
            ValueAxis domainAxis, ValueAxis rangeAxis, int rendererIndex, 
            PlotRenderingInfo info) {

        PlotOrientation orientation = plot.getOrientation();
        RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(
                plot.getDomainAxisLocation(), orientation);
        RectangleEdge rangeEdge = Plot.resolveRangeAxisLocation(
                plot.getRangeAxisLocation(), orientation);
=====================================================================
Found a 11 line (70 tokens) duplication in the following files: 
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 783 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java

        double available = 0.0;

        if ((edge == RectangleEdge.TOP) || (edge == RectangleEdge.BOTTOM)) {
            available = area.getWidth();
        }
        else if ((edge == RectangleEdge.LEFT)
                || (edge == RectangleEdge.RIGHT)) {
            available = area.getHeight();
        }
        if (categoryCount > 1) {
            result = available * (1 - getLowerMargin() - getUpperMargin()
=====================================================================
Found a 26 line (70 tokens) duplication in the following files: 
Starting at line 1572 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 1638 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        XYItemRenderer renderer = new XYStepRenderer(toolTipGenerator,
                urlGenerator);

        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);
        plot.setRenderer(renderer);
        plot.setOrientation(orientation);
        plot.setDomainCrosshairVisible(false);
        plot.setRangeCrosshairVisible(false);
        JFreeChart chart = new JFreeChart(title, JFreeChart.DEFAULT_TITLE_FONT,
                plot, legend);
        currentTheme.apply(chart);
        return chart;

    }

    /**
     * Creates a filled stepped XY plot with default settings.
     *
     * @param title  the chart title ({@code null} permitted).
     * @param xAxisLabel  a label for the X-axis ({@code null} permitted).
     * @param yAxisLabel  a label for the Y-axis ({@code null} permitted).
     * @param dataset  the dataset for the chart ({@code null} permitted).
     *
     * @return A chart.
     */
    public static JFreeChart createXYStepAreaChart(String title,
=====================================================================
Found a 41 line (70 tokens) duplication in the following files: 
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYItemLabelGenerator.java

    }

    /**
     * Generates the item label text for an item in a dataset.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The label text (possibly {@code null}).
     */
    @Override
    public String generateLabel(XYDataset dataset, int series, int item) {
        return generateLabelString(dataset, series, item);
    }

    /**
     * Returns an independent copy of the generator.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if cloning is not supported.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the other object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IntervalXYItemLabelGenerator)) {
=====================================================================
Found a 45 line (70 tokens) duplication in the following files: 
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/MultiplePiePlot.java
Starting at line 263 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java

        this.legendItemShape = new Ellipse2D.Double(-4.0, -4.0, 8.0, 8.0);
    }

    /**
     * Returns the dataset used by the plot.
     *
     * @return The dataset (possibly {@code null}).
     */
    public CategoryDataset getDataset() {
        return this.dataset;
    }

    /**
     * Sets the dataset used by the plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param dataset  the dataset ({@code null} permitted).
     */
    public void setDataset(CategoryDataset dataset) {
        // if there is an existing dataset, remove the plot from the list of
        // change listeners...
        if (this.dataset != null) {
            this.dataset.removeChangeListener(this);
        }

        // set the new dataset, and register the chart as a change listener...
        this.dataset = dataset;
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self to trigger plot change event
        datasetChanged(new DatasetChangeEvent(this, dataset));
    }

    /**
     * Returns the pie chart that is used to draw the individual pie plots.
     * Note that there are some attributes on this chart instance that will
     * be ignored at rendering time (for example, legend item settings).
     *
     * @return The pie chart (never {@code null}).
     *
     * @see #setPieChart(JFreeChart)
     */
    public JFreeChart getPieChart() {
=====================================================================
Found a 24 line (70 tokens) duplication in the following files: 
Starting at line 987 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 354 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

            addItemEntity(entities, dataset, row, column, bar);
        }

    }
    
    /**
     * Calculates the available space for each series.
     *
     * @param space  the space along the entire axis (in Java2D units).
     * @param axis  the category axis.
     * @param categories  the number of categories.
     * @param series  the number of series.
     *
     * @return The width of one series.
     */
    protected double calculateSeriesWidth(double space, CategoryAxis axis,
                                          int categories, int series) {
        double factor = 1.0 - getItemMargin() - axis.getLowerMargin()
                            - axis.getUpperMargin();
        if (categories > 1) {
            factor = factor - axis.getCategoryMargin();
        }
        return (space * factor) / (categories * series);
    }
=====================================================================
Found a 14 line (70 tokens) duplication in the following files: 
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 517 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java

        String label = this.legendItemLabelGenerator.generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
=====================================================================
Found a 11 line (70 tokens) duplication in the following files: 
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java

        XYLineAndShapeRenderer.State s = (XYLineAndShapeRenderer.State) state;
        // update path to reflect latest point
        if (!Double.isNaN(transX1) && !Double.isNaN(transY1)) {
            float x = (float) transX1;
            float y = (float) transY1;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                x = (float) transY1;
                y = (float) transX1;
            }
            if (s.isLastPointGood()) {
=====================================================================
Found a 11 line (70 tokens) duplication in the following files: 
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

                0));

        int itemCount = dataset.getItemCount(series);
        double x2 = dataset.getXValue(series, Math.min(item + 1,
                itemCount - 1));
        double y2 = dataset.getYValue(series, Math.min(item + 1,
                itemCount - 1));
        if (Double.isNaN(y2)) {
            y2 = 0.0;
        }
        double[] stack2 = getStackValues(tdataset, series, Math.min(item + 1,
=====================================================================
Found a 13 line (70 tokens) duplication in the following files: 
Starting at line 384 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 1073 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

                String label = lg.generateLabel(dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
                Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 9 line (70 tokens) duplication in the following files: 
Starting at line 443 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

        double x1 = dataset.getXValue(series, item);
        double y1 = dataset.getYValue(series, item);
        if (Double.isNaN(y1)) {
            y1 = 0.0;
        }
        double transX1 = domainAxis.valueToJava2D(x1, dataArea,
                plot.getDomainAxisEdge());
        double transY1 = rangeAxis.valueToJava2D(y1, dataArea,
                plot.getRangeAxisEdge());
=====================================================================
Found a 54 line (70 tokens) duplication in the following files: 
Starting at line 407 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/HistogramDataset.java
Starting at line 367 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeriesCollection.java

        return bin.getEndBoundary();
    }

    /**
     * Returns the start y-value for a bin (which is the same as the y-value,
     * this method exists only to support the general form of the
     * {@link IntervalXYDataset} interface).
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (zero based).
     *
     * @return The y-value.
     *
     * @throws IndexOutOfBoundsException if {@code series} is outside the
     *     specified range.
     */
    @Override
    public Number getStartY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Returns the end y-value for a bin (which is the same as the y-value,
     * this method exists only to support the general form of the
     * {@link IntervalXYDataset} interface).
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (zero based).
     *
     * @return The Y value.
     *
     * @throws IndexOutOfBoundsException if {@code series} is outside the
     *     specified range.
     */
    @Override
    public Number getEndY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Tests this dataset for equality with an arbitrary object.
     *
     * @param obj  the object to test against ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof HistogramDataset)) {
=====================================================================
Found a 8 line (70 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 6 line (70 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (70 tokens) duplication in the following files: 
Starting at line 227 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(3.3f), Color.GREEN);
=====================================================================
Found a 5 line (70 tokens) duplication in the following files: 
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(3.3f), Color.GREEN);
=====================================================================
Found a 9 line (70 tokens) duplication in the following files: 
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 444 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(null, 2.0, 0.0, 4.0, 0.5, 4.5, 
                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
=====================================================================
Found a 18 line (70 tokens) duplication in the following files: 
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/IntervalBarRendererTest.java

                    = new GroupedStackedBarRenderer();
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    renderer);
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Some checks for the findRangeBounds() method.
     */
    @Test
    public void testFindRangeBounds() {
=====================================================================
Found a 10 line (70 tokens) duplication in the following files: 
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

        SlidingGanttCategoryDataset d2 = CloneUtils.clone(d1);
        assertNotSame(d1, d2);
        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // basic check for independence
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertNotEquals(d1, d2);
        TaskSeriesCollection<String, String> u2
                = (TaskSeriesCollection) d2.getUnderlyingDataset();
=====================================================================
Found a 8 line (70 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DefaultHeatMapDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        DefaultHeatMapDataset d1 = new DefaultHeatMapDataset(2, 3, -1.0, 4.0,
                -2.0, 5.0);
        d1.setZValue(0, 0, 10.0);
        d1.setZValue(0, 1, Double.NEGATIVE_INFINITY);
        d1.setZValue(0, 2, Double.POSITIVE_INFINITY);
        d1.setZValue(1, 0, Double.NaN);
        DefaultHeatMapDataset d2 = CloneUtils.clone(d1);
=====================================================================
Found a 12 line (70 tokens) duplication in the following files: 
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimePeriodValuesTest.java
Starting at line 257 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        TimePeriodValues<String> s2 = new TimePeriodValues<>("Time Series 1");
        assertEquals(s1, s2);

        RegularTimePeriod p1 = new Day();
        RegularTimePeriod p2 = p1.next();
        s1.add(p1, 100.0);
        s1.add(p2, 200.0);
        assertNotEquals(s1, s2);

        s2.add(p1, 100.0);
        s2.add(p2, 200.0);
        assertEquals(s1, s2);
=====================================================================
Found a 8 line (70 tokens) duplication in the following files: 
Starting at line 1136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 1145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        ts.add(new Day(30, 9, 2015), 2.0);

        assertEquals(new Range(2.0, 99.0), 
                ts.findValueRange(range, TimePeriodAnchor.START, tzone));
        assertEquals(new Range(1.0, 99.0), 
                ts.findValueRange(range, TimePeriodAnchor.MIDDLE, tzone));
        assertEquals(new Range(1.0, 99.0), 
                ts.findValueRange(range, TimePeriodAnchor.END, tzone));
=====================================================================
Found a 11 line (70 tokens) duplication in the following files: 
Starting at line 262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 258 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        VectorSeries<String> s1 = new VectorSeries<>("S1");
        s1.addChangeListener(this);
        s1.clear();
        assertNull(this.lastEvent);
        assertTrue(s1.isEmpty());
        s1.add(1.0, 2.0, 3.0, 4.0);
        assertFalse(s1.isEmpty());
        s1.clear();
        assertNotNull(this.lastEvent);
        assertTrue(s1.isEmpty());
    }
=====================================================================
Found a 34 line (69 tokens) duplication in the following files: 
Starting at line 1187 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 653 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 742 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    }

    /**
     * Selects an appropriate tick value for the axis.  The strategy is to
     * display as many ticks as possible (selected from an array of 'standard'
     * tick units) without the labels overlapping.
     *
     * @param g2  the graphics device.
     * @param dataArea  the area defined by the axes.
     * @param edge  the axis location.
     */
    protected void selectAutoTickUnit(Graphics2D g2, Rectangle2D dataArea,
            RectangleEdge edge) {

        if (RectangleEdge.isTopOrBottom(edge)) {
            selectHorizontalAutoTickUnit(g2, dataArea, edge);
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            selectVerticalAutoTickUnit(g2, dataArea, edge);
        }

    }

    /**
     * Selects an appropriate tick size for the axis.  The strategy is to
     * display as many ticks as possible (selected from a collection of
     * 'standard' tick units) without the labels overlapping.
     *
     * @param g2  the graphics device.
     * @param dataArea  the area defined by the axes.
     * @param edge  the axis location.
     */
    protected void selectHorizontalAutoTickUnit(Graphics2D g2,
            Rectangle2D dataArea, RectangleEdge edge) {
=====================================================================
Found a 11 line (69 tokens) duplication in the following files: 
Starting at line 310 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java
Starting at line 361 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

        double outlineStrokeWidth = 1.0;
        Stroke outlineStroke = getPlot().getOutlineStroke();
        if (outlineStroke != null && outlineStroke instanceof BasicStroke) {
            outlineStrokeWidth = ((BasicStroke) outlineStroke).getLineWidth();
        }

        Iterator iterator = ticks.iterator();
        ValueTick tick;
        Rectangle2D band;
        while (iterator.hasNext()) {
            tick = (ValueTick) iterator.next();
=====================================================================
Found a 11 line (69 tokens) duplication in the following files: 
Starting at line 312 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java

            result.width = base.width;
            if (this.heightConstraintType == LengthConstraintType.NONE) {
               result.height = base.height;
            }
            else if (this.heightConstraintType == LengthConstraintType.RANGE) {
               result.height = this.heightRange.constrain(base.height);
            }
            else if (this.heightConstraintType == LengthConstraintType.FIXED) {
               result.height = this.height;
            }
        }
=====================================================================
Found a 23 line (69 tokens) duplication in the following files: 
Starting at line 1255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        this.datasetToDomainAxesMap.put(index, new ArrayList<>(axisIndices));
        // fake a dataset change event to update axes...
        datasetChanged(new DatasetChangeEvent(this, getDataset(index)));
    }

    /**
     * This method is used to perform argument checking on the list of
     * axis indices passed to mapDatasetToDomainAxes() and
     * mapDatasetToRangeAxes().
     *
     * @param indices  the list of indices ({@code null} permitted).
     */
    private void checkAxisIndices(List<Integer> indices) {
        // axisIndices can be:
        // 1.  null;
        // 2.  non-empty, containing only Integer objects that are unique.
        if (indices == null) {
            return;  // OK
        }
        int count = indices.size();
        if (count == 0) {
            throw new IllegalArgumentException("Empty list not permitted.");
        }
=====================================================================
Found a 30 line (69 tokens) duplication in the following files: 
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialCap.java
Starting at line 710 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        result = 37 * result + HashUtils.hashCodeForPaint(this.fillPaint);
        result = 37 * result + HashUtils.hashCodeForPaint(
                this.outlinePaint);
        result = 37 * result + this.outlineStroke.hashCode();
        return result;
    }

    /**
     * Returns a clone of this instance.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if some attribute of the cap cannot
     *     be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.fillPaint, stream);
=====================================================================
Found a 13 line (69 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 517 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1073 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 1027 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
=====================================================================
Found a 10 line (69 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 486 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        LegendItem result = new LegendItem(label, description, toolTipText,
                urlText, shape, paint, outlineStroke, outlinePaint);
        result.setLabelFont(lookupLegendTextFont(series));
        Paint labelPaint = lookupLegendTextPaint(series);
        if (labelPaint != null) {
            result.setLabelPaint(labelPaint);
        }
        result.setDataset(dataset);
        result.setDatasetIndex(datasetIndex);
        result.setSeriesKey(dataset.getRowKey(series));
=====================================================================
Found a 12 line (69 tokens) duplication in the following files: 
Starting at line 876 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 917 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

    public void drawDomainLine(Graphics2D g2, XYPlot plot, ValueAxis axis,
            Rectangle2D dataArea, double value, Paint paint, Stroke stroke) {

        Range range = axis.getRange();
        if (!range.contains(value)) {
            return;
        }

        PlotOrientation orientation = plot.getOrientation();
        Line2D line = null;
        double v = axis.valueToJava2D(value, dataArea, 
                plot.getDomainAxisEdge());
=====================================================================
Found a 16 line (69 tokens) duplication in the following files: 
Starting at line 1234 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/StandardChartTheme.java
Starting at line 1296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/StandardChartTheme.java

                applyToCategoryAxis(axis);
            }
        }

        // process all range axes
        int rangeAxisCount = plot.getRangeAxisCount();
        for (int i = 0; i < rangeAxisCount; i++) {
            ValueAxis axis = plot.getRangeAxis(i);
            if (axis != null) {
                applyToValueAxis(axis);
            }
        }

        // process all renderers
        int rendererCount = plot.getRendererCount();
        for (int i = 0; i < rendererCount; i++) {
=====================================================================
Found a 59 line (69 tokens) duplication in the following files: 
Starting at line 203 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Quarter.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Year.java

    public int getYearValue() {
        return this.year;
    }

    /**
     * Returns the first millisecond of the quarter.  This will be determined
     * relative to the time zone specified in the constructor, or in the
     * calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The first millisecond of the quarter.
     *
     * @see #getLastMillisecond()
     */
    @Override
    public long getFirstMillisecond() {
        return this.firstMillisecond;
    }

    /**
     * Returns the last millisecond of the quarter.  This will be
     * determined relative to the time zone specified in the constructor, or
     * in the calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The last millisecond of the quarter.
     *
     * @see #getFirstMillisecond()
     */
    @Override
    public long getLastMillisecond() {
        return this.lastMillisecond;
    }

    /**
     * Recalculates the start date/time and end date/time for this time period
     * relative to the supplied calendar (which incorporates a time zone).
     *
     * @param calendar  the calendar ({@code null} not permitted).
     *
     * @since 1.0.3
     */
    @Override
    public void peg(Calendar calendar) {
        this.firstMillisecond = getFirstMillisecond(calendar);
        this.lastMillisecond = getLastMillisecond(calendar);
    }

    /**
     * Returns the quarter preceding this one.
     * No matter what time zone and locale this instance was created with,
     * the returned instance will use the default calendar for time
     * calculations, obtained with {@link RegularTimePeriod#getCalendarInstance()}.
     *
     * @return The quarter preceding this one (or {@code null} if this is
     *     Q1 1900).
     */
    @Override
    public RegularTimePeriod previous() {
=====================================================================
Found a 41 line (69 tokens) duplication in the following files: 
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeTableXYDataset.java
Starting at line 225 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/CategoryTableXYDataset.java

        return period.getEnd().getTime();
    }

    /**
     * Returns the y-value for an item within a series.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The y-value (possibly {@code null}).
     */
    @Override
    public Number getY(int series, int item) {
        return this.values.getValue(item, series);
    }

    /**
     * Returns the starting Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item within a series (zero-based index).
     *
     * @return The starting Y value for the specified series and item.
     */
    @Override
    public Number getStartY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Returns the ending Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item within a series (zero-based index).
     *
     * @return The ending Y value for the specified series and item.
     */
    @Override
    public Number getEndY(int series, int item) {
        return getY(series, item);
    }
=====================================================================
Found a 7 line (69 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (69 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 8 line (69 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (69 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 9 line (69 tokens) duplication in the following files: 
Starting at line 1103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testAxisLocationIndices() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);

        CategoryAxis xAxis2 = new CategoryAxis("X2");
=====================================================================
Found a 5 line (69 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/PlotTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/PlotTest.java

        plot1.setDrawingSupplier(new DefaultDrawingSupplier(
                new Paint[] {Color.BLUE}, new Paint[] {Color.RED},
                new Stroke[] {new BasicStroke(1.1f)},
                new Stroke[] {new BasicStroke(9.9f)},
                new Shape[] {new Rectangle(1, 2, 3, 4)}));
=====================================================================
Found a 17 line (69 tokens) duplication in the following files: 
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 475 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

            assertEquals(0L, h.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 0, 0);
=====================================================================
Found a 14 line (69 tokens) duplication in the following files: 
Starting at line 480 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 567 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        Millisecond m = new Millisecond(555, 55, 47, 3, 16, 1, 2006);
        assertEquals(cal.getTime(), m.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
=====================================================================
Found a 14 line (69 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultXYDataset<String> d = createSampleDataset1();
        assertEquals(0, d.indexOf("S1"));
        assertEquals(1, d.indexOf("S2"));
        assertEquals(-1, d.indexOf("Green Eggs and Ham"));
        assertEquals(-1, d.indexOf(null));
    }

    static final double EPSILON = 0.0000000001;

    /**
     * Some tests for the addSeries() method.
     */
    @Test
    public void testAddSeries() {
=====================================================================
Found a 6 line (69 tokens) duplication in the following files: 
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        assertEquals(d2, d1);

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] z1 = new double[] {7.0, 8.0, 9.0};
        double[][] data1 = new double[][] {x1, y1, z1};
=====================================================================
Found a 25 line (68 tokens) duplication in the following files: 
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java

        return fillPaint;
    }

    /**
     * Draws the annotation.  This method is usually called by the
     * {@link XYPlot} class, you shouldn't need to call it directly.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  the plot rendering info.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
                     ValueAxis domainAxis, ValueAxis rangeAxis,
                     int rendererIndex, PlotRenderingInfo info) {

        PlotOrientation orientation = plot.getOrientation();
        RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(
                plot.getDomainAxisLocation(), orientation);
        RectangleEdge rangeEdge = Plot.resolveRangeAxisLocation(
                plot.getRangeAxisLocation(), orientation);
=====================================================================
Found a 26 line (68 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java

    }

    /**
     * Draws the annotation.  This method is usually called by the
     * {@link XYPlot} class, you shouldn't need to call it directly.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  the plot rendering info.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
                     ValueAxis domainAxis, ValueAxis rangeAxis,
                     int rendererIndex, PlotRenderingInfo info) {

        PlotOrientation orientation = plot.getOrientation();
        RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(
                plot.getDomainAxisLocation(), orientation);
        RectangleEdge rangeEdge = Plot.resolveRangeAxisLocation(
                plot.getRangeAxisLocation(), orientation);

        double transX0 = domainAxis.valueToJava2D(this.x0, dataArea,
=====================================================================
Found a 26 line (68 tokens) duplication in the following files: 
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

    }

    /**
     * Draws the annotation.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  if supplied, this info object will be populated with
     *              entity information.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
                     ValueAxis domainAxis, ValueAxis rangeAxis,
                     int rendererIndex,
                     PlotRenderingInfo info) {

        PlotOrientation orientation = plot.getOrientation();
        RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(
                plot.getDomainAxisLocation(), orientation);
        RectangleEdge rangeEdge = Plot.resolveRangeAxisLocation(
                plot.getRangeAxisLocation(), orientation);
        float j2DX = (float) domainAxis.valueToJava2D(this.x, dataArea,
=====================================================================
Found a 13 line (68 tokens) duplication in the following files: 
Starting at line 1583 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java

        if (!PaintUtils.equal(this.axisLinePaint, that.axisLinePaint)) {
            return false;
        }
        if (this.tickLabelsVisible != that.tickLabelsVisible) {
            return false;
        }
        if (!Objects.equals(this.tickLabelFont, that.tickLabelFont)) {
            return false;
        }
        if (!PaintUtils.equal(this.tickLabelPaint, that.tickLabelPaint)) {
            return false;
        }
        if (!Objects.equals(this.tickLabelInsets, that.tickLabelInsets)) {
=====================================================================
Found a 15 line (68 tokens) duplication in the following files: 
Starting at line 506 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java
Starting at line 600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                double xx = valueToJava2D(currentTickValue, dataArea, edge);
                String tickLabel;
                NumberFormat formatter = getNumberFormatOverride();
                if (formatter != null) {
                    tickLabel = formatter.format(currentTickValue);
                }
                else {
                    tickLabel = valueToString(currentTickValue);
                }

                // avoid to draw overlapping tick labels
                Rectangle2D bounds = TextUtils.getTextBounds(tickLabel, g2,
                        g2.getFontMetrics());
                double tickLabelLength = isVerticalTickLabels()
                        ? bounds.getHeight() : bounds.getWidth();
=====================================================================
Found a 12 line (68 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 431 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                contentSize = arrangeRR(g2, cc.getWidthRange(),
                        cc.getHeightRange());
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
=====================================================================
Found a 5 line (68 tokens) duplication in the following files: 
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 928 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        long temp = Double.doubleToLongBits(this.startAngle);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.extent);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.innerRadius);
=====================================================================
Found a 24 line (68 tokens) duplication in the following files: 
Starting at line 1345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1524 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                position = getNegativeItemLabelPosition(row, column);
            }
            Point2D anchorPoint = calculateLabelAnchorPoint(
                    position.getItemLabelAnchor(), x, y, orientation);
            TextUtils.drawRotatedString(label, g2,
                    (float) anchorPoint.getX(), (float) anchorPoint.getY(),
                    position.getTextAnchor(),
                    position.getAngle(), position.getRotationAnchor());
        }

    }

    /**
     * Returns an independent copy of the renderer.  The {@code plot}
     * reference is shallow copied.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  can be thrown if one of the objects
     *         belonging to the renderer does not support cloning (for example,
     *         an item label generator).
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 9 line (68 tokens) duplication in the following files: 
Starting at line 966 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java

        this.barPainter.paintBar(g2, this, row, column, bar, barBase);
        if (state.getElementHinting()) {
            endElementGroup(g2);
        }
        
        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
=====================================================================
Found a 12 line (68 tokens) duplication in the following files: 
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 371 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

            else {
                if (orientation == PlotOrientation.VERTICAL) {
                    right.moveTo(transX1, transStack1);
                    right.lineTo(transX1, transY1);
                    right.lineTo(transXRight, transStackRight);
                } else {
                    right.moveTo(transStack1, transX1);
                    right.lineTo(transY1, transX1);
                    right.lineTo(transStackRight, transXRight);
                }
                right.closePath();
            }
=====================================================================
Found a 28 line (68 tokens) duplication in the following files: 
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java

        }
    }

    /**
     * Draws the block representing the specified item.
     *
     * @param g2  the graphics device.
     * @param state  the state.
     * @param dataArea  the data area.
     * @param info  the plot rendering info.
     * @param plot  the plot.
     * @param domainAxis  the x-axis.
     * @param rangeAxis  the y-axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  the crosshair state.
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        double x = dataset.getXValue(series, item);
        double y = dataset.getYValue(series, item);
        double dx = 0.0;
=====================================================================
Found a 35 line (68 tokens) duplication in the following files: 
Starting at line 398 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 289 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

                        urlText, this.legendArea, paint);
                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
            }
        }
        return result;
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
=====================================================================
Found a 4 line (68 tokens) duplication in the following files: 
Starting at line 147 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/flow/FlowDatasetUtils.java
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/flow/FlowDatasetUtils.java

        for (int stage = 0; stage < dataset.getStageCount() + 1; stage++) { // '+1' to include final destination nodes 
            for (K source : dataset.getSources(stage)) {
                NodeKey<K> nodeKey = new NodeKey<>(stage, source);
                if (Boolean.TRUE.equals(dataset.getNodeProperty(nodeKey, NodeKey.SELECTED_PROPERTY_KEY))) {
=====================================================================
Found a 6 line (68 tokens) duplication in the following files: 
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 753 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 6 line (68 tokens) duplication in the following files: 
Starting at line 435 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 593 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 11 line (68 tokens) duplication in the following files: 
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGeneratorTest.java
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/BoxAndWhiskerXYToolTipGeneratorTest.java

                new SimpleDateFormat("yyyy"), new DecimalFormat("0.0"));
        assertNotEquals(g1, g2);
        g2 = new BoxAndWhiskerXYToolTipGenerator("{0} --> {1} {2}",
                new SimpleDateFormat("yyyy"), new DecimalFormat("0.0"));
        assertEquals(g1, g2);

        // date format
        g1 = new BoxAndWhiskerXYToolTipGenerator("{0} --> {1} {2}",
                new SimpleDateFormat("yyyy"), new DecimalFormat("0.0"));
        g2 = new BoxAndWhiskerXYToolTipGenerator("{0} --> {1} {2}",
                new SimpleDateFormat("MMM-yyyy"), new DecimalFormat("0.0"));
=====================================================================
Found a 7 line (68 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 6 line (68 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 7 line (68 tokens) duplication in the following files: 
Starting at line 311 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java
Starting at line 270 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));
=====================================================================
Found a 13 line (68 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java

            s2.add(20.0, 3.5);
            dataset.addSeries(s2);
            XYPlot<String> plot = new XYPlot<>(dataset,
                    new NumberAxis("X"), new NumberAxis("Y"),
                    new XYStepRenderer());
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    null);
        }
        catch (NullPointerException e) {
            fail("No exception should be thrown.");
        }
    }
=====================================================================
Found a 7 line (68 tokens) duplication in the following files: 
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java

    public void testCalculateColumnTotal() {
        DefaultKeyedValues2D<String, String> table = new DefaultKeyedValues2D<>();
        table.addValue(1.0, "R0", "C0");
        table.addValue(2.0, "R0", "C1");
        table.addValue(3.0, "R1", "C0");
        table.addValue(4.0, "R1", "C1");
        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0), EPSILON);
=====================================================================
Found a 7 line (68 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java

    public void testCalculateRowTotal() {
        DefaultKeyedValues2D<String, String> table = new DefaultKeyedValues2D<>();
        table.addValue(1.0, "R0", "C0");
        table.addValue(2.0, "R0", "C1");
        table.addValue(3.0, "R1", "C0");
        table.addValue(4.0, "R1", "C1");
        assertEquals(3.0, DataUtils.calculateRowTotal(table, 0), EPSILON);
=====================================================================
Found a 4 line (68 tokens) duplication in the following files: 
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        double[] x2 = new double[] {1.0, 2.0, 3.0};
        double[] y2 = new double[] {4.0, 5.0, 6.0};
        double[] z2 = new double[] {7.0, 8.0, 9.0};
        double[][] data2 = new double[][] {x2, y2, z2};
=====================================================================
Found a 24 line (67 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYDrawableAnnotation.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

    }

    /**
     * Draws the annotation.  This method is usually called by the
     * {@link XYPlot} class, you shouldn't need to call it directly.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param dataArea  the data area.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param rendererIndex  the renderer index.
     * @param info  the plot rendering info.
     */
    @Override
    public void draw(Graphics2D g2, XYPlot plot, Rectangle2D dataArea,
                     ValueAxis domainAxis, ValueAxis rangeAxis,
                     int rendererIndex, PlotRenderingInfo info) {

        PlotOrientation orientation = plot.getOrientation();
        RectangleEdge domainEdge = Plot.resolveDomainAxisLocation(
                plot.getDomainAxisLocation(), orientation);
        RectangleEdge rangeEdge = Plot.resolveRangeAxisLocation(
                plot.getRangeAxisLocation(), orientation);
=====================================================================
Found a 32 line (67 tokens) duplication in the following files: 
Starting at line 872 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 211 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java

    }

    /**
     * Draws the axis on a Java 2D graphics device (such as the screen or a
     * printer).
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param cursor  the cursor location.
     * @param plotArea  the area within which the axis should be drawn
     *                  ({@code null} not permitted).
     * @param dataArea  the area within which the plot is being drawn
     *                  ({@code null} not permitted).
     * @param edge  the location of the axis ({@code null} not permitted).
     * @param plotState  collects information about the plot
     *                   ({@code null} permitted).
     *
     * @return The axis state (never {@code null}).
     */
    @Override
    public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,
            Rectangle2D dataArea, RectangleEdge edge,
            PlotRenderingInfo plotState) {

        // if the axis is not visible, don't draw it...
        if (!isVisible()) {
            return new AxisState(cursor);
        }

        if (isAxisLineVisible()) {
            drawAxisLine(g2, cursor, dataArea, edge);
        }
        AxisState state = new AxisState(cursor);
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 609 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

                        ? TextAnchor.TOP_RIGHT : TextAnchor.BOTTOM_RIGHT;
                    result.remove(result.size() - 1);
                    result.add(new CycleBoundTick(
                        this.boundMappedToLastCycle, lastTick.getNumber(),
                        lastTick.getText(), anchor, anchor,
                        lastTick.getAngle())
                    );
                    this.internalMarkerWhenTicksOverlap = true;
                    anchor = isInverted()
                        ? TextAnchor.BOTTOM_RIGHT : TextAnchor.TOP_RIGHT;
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 649 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

                            ? TextAnchor.TOP_LEFT : TextAnchor.TOP_RIGHT;
                        result.remove(result.size() - 1);
                        result.add(new CycleBoundTick(
                            this.boundMappedToLastCycle, lastTick.getNumber(),
                            lastTick.getText(), anchor, anchor,
                            lastTick.getAngle())
                        );
                        this.internalMarkerWhenTicksOverlap = true;
                        anchor = isInverted()
                            ? TextAnchor.TOP_RIGHT : TextAnchor.TOP_LEFT;
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 385 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java

                    height - h[1], width, h[1]));
        }
        if (this.leftBlock != null) {
            this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
                    h[2]));
        }
        if (this.rightBlock != null) {
            this.rightBlock.setBounds(new Rectangle2D.Double(width - w[3],
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java
Starting at line 337 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/RectangleConstraint.java

            if (this.heightConstraintType == LengthConstraintType.NONE) {
                result.height = base.height;
            }
            else if (this.heightConstraintType == LengthConstraintType.RANGE) {
                result.height = this.heightRange.constrain(base.height);
            }
            else if (this.heightConstraintType == LengthConstraintType.FIXED) {
                result.height = this.height;
            }
        }
=====================================================================
Found a 23 line (67 tokens) duplication in the following files: 
Starting at line 1478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 1403 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        CategoryItemRenderer existing = this.renderers.get(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.renderers.put(index, renderer);
        if (renderer != null) {
            renderer.setPlot(this);
            renderer.addChangeListener(this);
        }
        configureDomainAxes();
        configureRangeAxes();
        if (notify) {
            fireChangeEvent();
        }
    }

    /**
     * Sets the renderers for this plot and sends a {@link PlotChangeEvent}
     * to all registered listeners.
     *
     * @param renderers  the renderers.
     */
    public void setRenderers(CategoryItemRenderer[] renderers) {
=====================================================================
Found a 66 line (67 tokens) duplication in the following files: 
Starting at line 1226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 561 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java

        this.shadowPaint = paint;
        fireChangeEvent();
    }

    /**
     * Returns the x-offset for the shadow effect.
     *
     * @return The offset (in Java2D units).
     *
     * @see #setShadowXOffset(double)
     */
    public double getShadowXOffset() {
        return this.shadowXOffset;
    }

    /**
     * Sets the x-offset for the shadow effect and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param offset  the offset (in Java2D units).
     *
     * @see #getShadowXOffset()
     */
    public void setShadowXOffset(double offset) {
        this.shadowXOffset = offset;
        fireChangeEvent();
    }

    /**
     * Returns the y-offset for the shadow effect.
     *
     * @return The offset (in Java2D units).
     *
     * @see #setShadowYOffset(double)
     */
    public double getShadowYOffset() {
        return this.shadowYOffset;
    }

    /**
     * Sets the y-offset for the shadow effect and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param offset  the offset (in Java2D units).
     *
     * @see #getShadowYOffset()
     */
    public void setShadowYOffset(double offset) {
        this.shadowYOffset = offset;
        fireChangeEvent();
    }

    /**
     * Returns the amount that the section with the specified key should be
     * exploded.
     *
     * @param key  the key ({@code null} not permitted).
     *
     * @return The amount that the section with the specified key should be
     *     exploded.
     *
     * @throws IllegalArgumentException if {@code key} is {@code null}.
     *
     * @see #setExplodePercent(K, double)
     */
    public double getExplodePercent(K key) {
=====================================================================
Found a 7 line (67 tokens) duplication in the following files: 
Starting at line 1064 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java
Starting at line 1075 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java
Starting at line 1086 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java

                double value = this.subrangeInfo[NORMAL][RANGE_LOW];
                if (range.contains(value)) {
                    double x = midX + getColumnRadius() + 2;
                    double y = this.rangeAxis.valueToJava2D(value, dataArea,
                            RectangleEdge.LEFT);
                    Line2D line = new Line2D.Double(x, y, x + 10, y);
                    g2.setPaint(this.subrangePaint[NORMAL]);
=====================================================================
Found a 7 line (67 tokens) duplication in the following files: 
Starting at line 809 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 945 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 928 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        if (orientation == PlotOrientation.HORIZONTAL) {
            line = new Line2D.Double(v, dataArea.getMinY(), v,
                    dataArea.getMaxY());
        } else if (orientation == PlotOrientation.VERTICAL) {
            line = new Line2D.Double(dataArea.getMinX(), v,
                    dataArea.getMaxX(), v);
        }
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 408 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 295 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 443 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        Paint itemPaint = getItemPaint(row, column);
        GradientPaintTransformer t = getGradientPaintTransformer();
        if (t != null && itemPaint instanceof GradientPaint) {
            itemPaint = t.transform((GradientPaint) itemPaint, bar);
        }
        g2.setPaint(itemPaint);
        g2.fill(bar);

        if (isDrawBarOutline() && state.getBarWidth() 
                > BAR_OUTLINE_WIDTH_THRESHOLD) {
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 316 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java

                double yleft = (y0 + y1) / 2.0 + stackLeft[1];
                float transYLeft
                    = (float) rangeAxis.valueToJava2D(yleft, dataArea, edge1);
                left.moveTo((float) xx1, transY1);
                left.lineTo((float) xx1, transStack1);
                left.lineTo((float) xxLeft, transStackLeft);
                left.lineTo((float) xxLeft, transYLeft);
                left.closePath();
            }
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java

                double yright = (y1 + y2) / 2.0 + stackRight[1];
                float transYRight
                    = (float) rangeAxis.valueToJava2D(yright, dataArea, edge1);
                right.moveTo((float) xx1, transStack1);
                right.lineTo((float) xx1, transY1);
                right.lineTo((float) xxRight, transYRight);
                right.lineTo((float) xxRight, transStackRight);
                right.closePath();
            }
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 402 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 1605 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 559 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 337 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

        String tip = null;
        XYToolTipGenerator generator = getToolTipGenerator(series, item);
        if (generator != null) {
            tip = generator.generateToolTip(dataset, series, item);
        }
        String url = null;
        if (getURLGenerator() != null) {
            url = getURLGenerator().generateURL(dataset, series, item);
        }
        XYItemEntity entity = new XYItemEntity(hotspot, dataset, series, item,
=====================================================================
Found a 38 line (67 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java

            }
        }

        if (minimum > maximum) {
            return null;
        } else {
            return new Range(minimum, maximum);
        }
    }

    /**
     * Draws the visual representation of a single data item. This method
     * is mostly copied from the superclass, the change is that in the
     * calculated space for a singe bar we draw bars for each series next to
     * each other. The width of each bar is the available width divided by
     * the number of series. Bars for each series are drawn in order left to
     * right.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {
=====================================================================
Found a 15 line (67 tokens) duplication in the following files: 
Starting at line 273 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 890 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

                s.seriesPath.lineTo(x, y);
            }
            else {
                s.seriesPath.moveTo(x, y);
            }
            s.setLastPointGood(true);
        } else {
            s.setLastPointGood(false);
        }
        // if this is the last item, draw the path ...
        if (item == s.getLastItemIndex()) {
            // draw path
            drawFirstPassShape(g2, pass, series, item, s.seriesPath);
        }
    }
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getPercentComplete(Comparable rowKey, Comparable columnKey) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getPercentComplete(r,
                    c + this.firstCategoryIndex);
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 375 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 451 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getPercentComplete(Comparable rowKey, Comparable columnKey,
            int subinterval) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getPercentComplete(r,
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

            int subinterval) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getEndValue(r,
                    c + this.firstCategoryIndex, subinterval);
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 536 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

            int subinterval) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getStartValue(r,
                    c + this.firstCategoryIndex, subinterval);
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java

            double[][] d1 = (double[][]) this.seriesList.get(i);
            double[][] d2 = (double[][]) that.seriesList.get(i);
            double[] d1x = d1[0];
            double[] d2x = d2[0];
            if (!Arrays.equals(d1x, d2x)) {
                return false;
            }
            double[] d1xs = d1[1];
=====================================================================
Found a 12 line (67 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java

        plot.setDomainAxis(new SubCategoryAxis("SubCategoryAxis"));
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
        }
    }
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 408 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 430 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 726 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 737 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11101
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(9.0, 10.0));
=====================================================================
Found a 7 line (67 tokens) duplication in the following files: 
Starting at line 594 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 670 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 754 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/legend/LegendTitleTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/title/CompositeTitleTest.java

        LegendTitle t2 = new LegendTitle(plot1);
        assertEquals(t1, t2);

        t1.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 
                4.0f, Color.YELLOW));
        assertNotEquals(t1, t2);
        t2.setBackgroundPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 
                4.0f, Color.YELLOW));
        assertEquals(t1, t2);
=====================================================================
Found a 6 line (67 tokens) duplication in the following files: 
Starting at line 71 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item1 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (67 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/FastScatterPlotTest.java

        plot2.setDomainGridlineStroke(stroke);
        assertEquals(plot1, plot2);

        // domainGridlinePaint
        plot1.setDomainGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.YELLOW));
        assertNotEquals(plot1, plot2);
        plot2.setDomainGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.YELLOW));
        assertEquals(plot1, plot2);
=====================================================================
Found a 10 line (67 tokens) duplication in the following files: 
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/FastScatterPlotTest.java

        plot2.setRangeGridlineStroke(stroke);
        assertEquals(plot1, plot2);

        // rangeGridlinePaint
        plot1.setRangeGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,
                3.0f, 4.0f, Color.YELLOW));
        assertNotEquals(plot1, plot2);
        plot2.setRangeGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.GREEN,
                3.0f, 4.0f, Color.YELLOW));
        assertEquals(plot1, plot2);
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 971 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1080 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testGetDomainAxisForDataset() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 470 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
=====================================================================
Found a 15 line (67 tokens) duplication in the following files: 
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYBarRendererTest.java
Starting at line 232 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java

        plot.setRenderer(new StackedXYBarRenderer());
        NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis();
        domainAxis.setAutoRangeIncludesZero(false);
        Range bounds = domainAxis.getRange();
        assertFalse(bounds.contains(0.3));
        assertTrue(bounds.contains(0.5));
        assertTrue(bounds.contains(2.5));
        assertFalse(bounds.contains(2.8));
    }

    /**
     * Check that the renderer is calculating the range bounds correctly.
     */
    @Test
    public void testFindRangeBounds() {
=====================================================================
Found a 7 line (67 tokens) duplication in the following files: 
Starting at line 93 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
        XYTaskDataset d1 = new XYTaskDataset(u1);
        XYTaskDataset d2 = CloneUtils.clone(d1);
=====================================================================
Found a 17 line (67 tokens) duplication in the following files: 
Starting at line 404 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 339 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 424 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 447 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 362 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

            d.getFirstMillisecond((Calendar) null);
        }
        catch (NullPointerException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the getLastMillisecond() method.
     */
    @Test
    public void testGetLastMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
=====================================================================
Found a 17 line (67 tokens) duplication in the following files: 
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 475 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 482 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

            assertEquals(0L, h.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 0, 0);
=====================================================================
Found a 17 line (67 tokens) duplication in the following files: 
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 549 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 439 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

    public void testNextPreviousWithThreadLocalCalendar() {
        BiConsumer<Integer, String> calendarSetup = (hours, locale) -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)),
                        Locale.forLanguageTag(locale))
        );
        testNextPreviousWithCustomCalendar(3, "ru-RU", 4, calendarSetup);
        testNextPreviousWithCustomCalendar(-6, "en-US", 3, calendarSetup);
    }
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 556 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 569 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

    public void testDateConstructorWithThreadLocalCalendar() {
        BiConsumer<Integer, String> calendarSetup = (hours, locale) -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)),
                        Locale.forLanguageTag(locale))
        );
        testDateConstructorWithCustomCalendar(3, "ru-RU", 4, calendarSetup);
        testDateConstructorWithCustomCalendar(-6, "en-US", 3, calendarSetup);
    }
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 598 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 611 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

    public void testWeekIntYearConstructorWithThreadLocalCalendar() {
        BiConsumer<Integer, String> calendarSetup = (hours, locale) -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)),
                        Locale.forLanguageTag(locale))
        );
        testWeekIntYearConstructorWithCustomCalendar(3, "ru-RU", 4, calendarSetup);
        testWeekIntYearConstructorWithCustomCalendar(-6, "en-US", 3, calendarSetup);
    }
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 640 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 653 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

    public void testWeekYearConstructorWithThreadLocalCalendar() {
        BiConsumer<Integer, String> calendarSetup = (hours, locale) -> RegularTimePeriod.setCalendarInstancePrototype(
                Calendar.getInstance(TimeZone.getTimeZone(ZoneOffset.ofHours(hours)),
                        Locale.forLanguageTag(locale))
        );
        testWeekYearConstructorWithCustomCalendar(3, "ru-RU", 4, calendarSetup);
        testWeekYearConstructorWithCustomCalendar(-6, "en-US", 3, calendarSetup);
    }
=====================================================================
Found a 8 line (67 tokens) duplication in the following files: 
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[] {5.6}, new double[1],
                new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[1]);
=====================================================================
Found a 27 line (67 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultWindDatasetTest.java

        assertEquals("S2", d.getSeriesKey(1));

        // check for series key out of bounds
        boolean pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            /*Comparable k =*/ d.getSeriesKey(2);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
    }

    /**
     * Some checks for the getItemCount() method.
     */
    @Test
    public void testGetItemCount() {
=====================================================================
Found a 9 line (67 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java

        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // try a dataset with some content...
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
        d2 = CloneUtils.clone(d1);
=====================================================================
Found a 27 line (66 tokens) duplication in the following files: 
Starting at line 595 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java

        temp = Double.doubleToLongBits(this.rotationAngle);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
=====================================================================
Found a 22 line (66 tokens) duplication in the following files: 
Starting at line 1262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

    protected TextAnchor labelAnchorH(AxisLabelLocation location) {
        if (location.equals(AxisLabelLocation.HIGH_END)) {
            return TextAnchor.CENTER_RIGHT;
        }
        if (location.equals(AxisLabelLocation.MIDDLE)) {
            return TextAnchor.CENTER;
        }
        if (location.equals(AxisLabelLocation.LOW_END)) {
            return TextAnchor.CENTER_LEFT;
        }
        throw new RuntimeException("Unexpected AxisLabelLocation: " + location);
    }
    
    /**
     * Returns the appropriate vertical text anchor for the specified axis 
     * location.
     * 
     * @param location  the location ({@code null} not permitted).
     * 
     * @return The text anchor (never {@code null}). 
     */
    protected TextAnchor labelAnchorV(AxisLabelLocation location) {
=====================================================================
Found a 26 line (66 tokens) duplication in the following files: 
Starting at line 434 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 443 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        assert contentSize != null; // suppress compiler warning
        return new Size2D(calculateTotalWidth(contentSize.getWidth()),
                calculateTotalHeight(contentSize.getHeight()));
    }

    /**
     * Returns the content size for the title.  This will reflect the fact that
     * a text title positioned on the left or right of a chart will be rotated
     * 90 degrees.
     *
     * @param g2  the graphics device.
     * @param widthRange  the width range.
     * @param heightRange  the height range.
     *
     * @return The content size.
     */
    protected Size2D arrangeRR(Graphics2D g2, Range widthRange,
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 354 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java

                + this.extent, -this.extent, Arc2D.OPEN);
        GeneralPath p = new GeneralPath();
        Point2D point1 = inner.getStartPoint();
        p.moveTo((float) point1.getX(), (float) point1.getY());
        p.append(inner, true);
        p.append(outer, true);
        p.closePath();
        return p;

    }
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 282 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/WaferMapPlot.java
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/WaferMapPlot.java

        if (plotArea.getWidth() != plotArea.getHeight()) {
            double major, minor;
            if (plotArea.getWidth() > plotArea.getHeight()) {
                major = plotArea.getWidth();
                minor = plotArea.getHeight();
            }
            else {
                major = plotArea.getHeight();
                minor = plotArea.getWidth();
            }
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 3989 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 4016 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    private List<XYDataset<S>> getDatasetsMappedToDomainAxis(Integer axisIndex) {
        Args.nullNotPermitted(axisIndex, "axisIndex");
        List<XYDataset<S>> result = new ArrayList<>();
        for (Entry<Integer, XYDataset<S>> entry : this.datasets.entrySet()) {
            int index = entry.getKey();
            List<Integer> mappedAxes = this.datasetToDomainAxesMap.get(index);
=====================================================================
Found a 14 line (66 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 517 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 635 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
        Shape shape = lookupLegendShape(series);
=====================================================================
Found a 13 line (66 tokens) duplication in the following files: 
Starting at line 830 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 1394 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        if (this.connectFirstAndLastPoint != that.connectFirstAndLastPoint) {
            return false;
        }
        if (!this.toolTipGeneratorMap.equals(that.toolTipGeneratorMap)) {
            return false;
        }
        if (!Objects.equals(this.defaultToolTipGenerator, that.defaultToolTipGenerator)) {
            return false;
        }
        if (!Objects.equals(this.urlGenerator, that.urlGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)) {
=====================================================================
Found a 13 line (66 tokens) duplication in the following files: 
Starting at line 992 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 1020 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

        if (PlotOrientation.VERTICAL == l_orientation) {
            double l_x = x_domainAxis.valueToJava2D((
                    (Double) l_xValues[0]), x_dataArea,
                    l_domainAxisLocation);
            if (this.roundXCoordinates) {
                l_x = Math.rint(l_x);
            }

            double l_y = x_rangeAxis.valueToJava2D((
                    (Double) l_yValues[0]), x_dataArea,
                    l_rangeAxisLocation);

            l_path.moveTo((float) l_x, (float) l_y);
=====================================================================
Found a 13 line (66 tokens) duplication in the following files: 
Starting at line 2213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 2233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java

    public void restoreAutoDomainBounds() {
        Plot plot = this.chart.getPlot();
        if (plot instanceof Zoomable) {
            Zoomable z = (Zoomable) plot;
            // here we tweak the notify flag on the plot so that only
            // one notification happens even though we update multiple
            // axes...
            boolean savedNotify = plot.isNotify();
            plot.setNotify(false);
            // we need to guard against this.zoomPoint being null
            Point2D zoomPoint = this.selectionZoomStrategy.getZoomPoint();
            Point2D zp = zoomPoint != null ? zoomPoint : new Point();
            z.zoomDomainAxes(0.0, this.info.getPlotInfo(), zp);
=====================================================================
Found a 57 line (66 tokens) duplication in the following files: 
Starting at line 216 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java

        return this.serialDate.getDayOfMonth();
    }

    /**
     * Returns the first millisecond of the day.  This will be determined
     * relative to the time zone specified in the constructor, or in the
     * calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The first millisecond of the day.
     *
     * @see #getLastMillisecond()
     */
    @Override
    public long getFirstMillisecond() {
        return this.firstMillisecond;
    }

    /**
     * Returns the last millisecond of the day.  This will be
     * determined relative to the time zone specified in the constructor, or
     * in the calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The last millisecond of the day.
     *
     * @see #getFirstMillisecond()
     */
    @Override
    public long getLastMillisecond() {
        return this.lastMillisecond;
    }

    /**
     * Recalculates the start date/time and end date/time for this time period
     * relative to the supplied calendar (which incorporates a time zone).
     *
     * @param calendar  the calendar ({@code null} not permitted).
     *
     * @since 1.0.3
     */
    @Override
    public void peg(Calendar calendar) {
        this.firstMillisecond = getFirstMillisecond(calendar);
        this.lastMillisecond = getLastMillisecond(calendar);
    }

    /**
     * Returns the day preceding this one.
     * No matter what time zone and locale this instance was created with,
     * the returned instance will use the default calendar for time
     * calculations, obtained with {@link RegularTimePeriod#getCalendarInstance()}.
     *
     * @return The day preceding this one.
     */
    @Override
    public RegularTimePeriod previous() {
=====================================================================
Found a 19 line (66 tokens) duplication in the following files: 
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 316 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

    }

    /**
     * Returns the first millisecond of the time period.
     *
     * @param calendar  the calendar ({@code null} not permitted).
     *
     * @return The first millisecond of the time period.
     *
     * @throws NullPointerException if {@code calendar} is
     *     {@code null}.
     */
    @Override
    public long getFirstMillisecond(Calendar calendar) {
        int year = this.day.getYear();
        int month = this.day.getMonth() - 1;
        int d = this.day.getDayOfMonth();
        calendar.clear();
        calendar.set(year, month, d, this.hour, this.minute, this.second);
=====================================================================
Found a 30 line (66 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimePeriodValue.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesDataItem.java

                : timePeriodValue.value != null) {
            return false;
        }

        return true;
    }

    /**
     * Returns a hash code value for the object.
     *
     * @return The hashcode
     */
    @Override
    public int hashCode() {
        int result;
        result = (this.period != null ? this.period.hashCode() : 0);
        result = 29 * result + (this.value != null ? this.value.hashCode() : 0);
        return result;
    }

    /**
     * Clones the object.
     * <P>
     * Note: no need to clone the period or value since they are immutable
     * classes.
     *
     * @return A clone.
     */
    @Override
    public Object clone() {
=====================================================================
Found a 13 line (66 tokens) duplication in the following files: 
Starting at line 421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

                "The 'data' array must contain six arrays with equal length.");
        }
        int seriesIndex = indexOf(seriesKey);
        if (seriesIndex == -1) {  // add a new series
            this.seriesKeys.add(seriesKey);
            this.seriesList.add(data);
        }
        else {  // replace an existing series
            this.seriesList.remove(seriesIndex);
            this.seriesList.add(seriesIndex, data);
        }
        notifyListeners(new DatasetChangeEvent(this, this));
    }
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 537 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 556 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 614 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 633 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01100
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
=====================================================================
Found a 10 line (66 tokens) duplication in the following files: 
Starting at line 576 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 652 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01110 - bottom. left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
=====================================================================
Found a 8 line (66 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (66 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 8 line (66 tokens) duplication in the following files: 
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 1.0, 2.2));
        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 2.0, 3.3));
        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 2, 3.0, 4.4));

        // check a series with three items
        d.addSeries("S4", new double[][] {{1.0, 2.0, 1.5}, {9.9, 9.9, 9.9}});
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,
                9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1));
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 1.0, 2.2));
        assertEquals(1, RendererUtils.findLiveItemsLowerBound(d, 4, 2.0, 3.3));
        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 3.0, 4.4));
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 1.0, 2.2));
        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 2.0, 3.3));
        assertEquals(2, RendererUtils.findLiveItemsUpperBound(d, 3, 3.0, 4.4));

        // check a series with four items
        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,
=====================================================================
Found a 6 line (66 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    public void testEquals() {

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
=====================================================================
Found a 9 line (66 tokens) duplication in the following files: 
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjectsTest.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjectsTest.java

    public void testRemoveValue() {
        KeyedObjects<String> ko1 = new KeyedObjects<>();
        ko1.setObject("Key 1", "Object 1");
        ko1.setObject("Key 2", null);
        ko1.setObject("Key 3", "Object 2");

        ko1.removeValue(1);
        assertEquals(2, ko1.getItemCount());
        assertEquals(1, ko1.getIndex("Key 3"));
=====================================================================
Found a 9 line (66 tokens) duplication in the following files: 
Starting at line 417 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 523 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java

    public void testSetMaximumItemCount3() {
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        s1.add(2.0, 2.2);
        s1.add(3.0, 3.3);
        s1.add(4.0, 4.4);
        s1.add(5.0, 5.5);
        s1.add(6.0, 6.6);
        s1.setMaximumItemCount(2);
=====================================================================
Found a 35 line (65 tokens) duplication in the following files: 
Starting at line 1668 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 592 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

    }

    /**
     * Draws the axis on a Java 2D graphics device (such as the screen or a
     * printer).
     *
     * @param g2  the graphics device ({@code null} not permitted).
     * @param cursor  the cursor location.
     * @param plotArea  the area within which the axes and data should be
     *                  drawn ({@code null} not permitted).
     * @param dataArea  the area within which the data should be drawn
     *                  ({@code null} not permitted).
     * @param edge  the location of the axis ({@code null} not permitted).
     * @param plotState  collects information about the plot
     *                   ({@code null} permitted).
     *
     * @return The axis state (never {@code null}).
     */
    @Override
    public AxisState draw(Graphics2D g2, double cursor, Rectangle2D plotArea,
            Rectangle2D dataArea, RectangleEdge edge,
            PlotRenderingInfo plotState) {

        // if the axis is not visible, don't draw it...
        if (!isVisible()) {
            AxisState state = new AxisState(cursor);
            // even though the axis is not visible, we need to refresh ticks in
            // case the grid is being drawn...
            List ticks = refreshTicks(g2, state, dataArea, edge);
            state.setTicks(ticks);
            return state;
        }

        // draw the tick marks and labels...
        AxisState state = drawTickMarksAndLabels(g2, cursor, plotArea,
=====================================================================
Found a 11 line (65 tokens) duplication in the following files: 
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

            boolean legend, boolean tooltips, boolean urls) {

        PiePlot plot = new PiePlot(dataset);
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());
        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
        if (tooltips) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator());
        }
        if (urls) {
            plot.setURLGenerator(new StandardPieURLGenerator());
        }
=====================================================================
Found a 10 line (65 tokens) duplication in the following files: 
Starting at line 1197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 1827 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

            String yAxisLabel, XYDataset dataset, PlotOrientation orientation,
            boolean legend, boolean tooltips, boolean urls) {

        Args.nullNotPermitted(orientation, "orientation");
        NumberAxis xAxis = new NumberAxis(xAxisLabel);
        xAxis.setAutoRangeIncludesZero(false);
        NumberAxis yAxis = new NumberAxis(yAxisLabel);
        yAxis.setAutoRangeIncludesZero(false);

        XYPlot plot = new XYPlot(dataset, xAxis, yAxis, null);
=====================================================================
Found a 21 line (65 tokens) duplication in the following files: 
Starting at line 1194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 185 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java

                urlText, shape, paint, outlineStroke, outlinePaint);
        item.setLabelFont(lookupLegendTextFont(series));
        Paint labelPaint = lookupLegendTextPaint(series);
        if (labelPaint != null) {
            item.setLabelPaint(labelPaint);
        }
        item.setSeriesKey(dataset.getRowKey(series));
        item.setSeriesIndex(series);
        item.setDataset(dataset);
        item.setDatasetIndex(datasetIndex);
        return item;
    }

    /**
     * Tests this renderer for equality with another object.
     *
     * @param obj  the object.
     *
     * @return {@code true} or {@code false}.
     */
    @Override
=====================================================================
Found a 91 line (65 tokens) duplication in the following files: 
Starting at line 769 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryItemRenderer.java
Starting at line 860 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYItemRenderer.java

    void setDefaultShape(Shape shape, boolean notify);

    // ITEM LABELS VISIBLE

    /**
     * Returns {@code true} if an item label is visible, and
     * {@code false} otherwise.
     *
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     *
     * @return A boolean.
     */
    boolean isItemLabelVisible(int row, int column);

    /**
     * Returns {@code true} if the item labels for a series are visible,
     * and {@code false} otherwise.
     *
     * @param series  the series index (zero-based).
     *
     * @return A boolean.
     *
     * @see #setSeriesItemLabelsVisible(int, Boolean)
     */
    boolean isSeriesItemLabelsVisible(int series);

    /**
     * Sets a flag that controls the visibility of the item labels for a series.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag.
     *
     * @see #isSeriesItemLabelsVisible(int)
     */
    void setSeriesItemLabelsVisible(int series, boolean visible);

    /**
     * Sets a flag that controls the visibility of the item labels for a series.
     *
     * @param series  the series index (zero-based).
     * @param visible  the flag ({@code null} permitted).
     *
     * @see #isSeriesItemLabelsVisible(int)
     */
    void setSeriesItemLabelsVisible(int series, Boolean visible);

    /**
     * Sets the visibility of item labels for a series and, if requested, sends
     * a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param series  the series index (zero-based).
     * @param visible  the visible flag.
     * @param notify  a flag that controls whether listeners are notified.
     *
     * @see #isSeriesItemLabelsVisible(int)
     */
    void setSeriesItemLabelsVisible(int series, Boolean visible, boolean notify);

    /**
     * Returns the default setting for item label visibility.  A {@code null}
     * result should be interpreted as equivalent to {@code Boolean.FALSE}
     * (this is an error in the API design, the return value should have been
     * a boolean primitive).
     *
     * @return A flag (possibly {@code null}).
     *
     * @see #setDefaultItemLabelsVisible(boolean)
     */
    boolean getDefaultItemLabelsVisible();

    /**
     * Sets the default flag that controls whether item labels are visible
     * and sends a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param visible  the flag.
     *
     * @see #getDefaultItemLabelsVisible()
     */
    void setDefaultItemLabelsVisible(boolean visible);

    /**
     * Sets the default visibility for item labels and, if requested, sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param visible  the visibility flag.
     * @param notify  a flag that controls whether listeners are notified.
     *
     * @see #getDefaultItemLabelsVisible()
     */
    void setDefaultItemLabelsVisible(boolean visible, boolean notify);
=====================================================================
Found a 24 line (65 tokens) duplication in the following files: 
Starting at line 817 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 529 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

        if (this.defaultShapesFilled != that.defaultShapesFilled) {
            return false;
        }
        if (this.useOutlinePaint != that.useOutlinePaint) {
            return false;
        }
        if (this.useSeriesOffset != that.useSeriesOffset) {
            return false;
        }
        if (this.itemMargin != that.itemMargin) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns an independent copy of the renderer.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  should not happen.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 38 line (65 tokens) duplication in the following files: 
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 672 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

    }

    /**
     * Draws the visual representation of a single data item. This method
     * is mostly copied from the superclass, the change is that in the
     * calculated space for a singe bar we draw bars for each series next to
     * each other. The width of each bar is the available width divided by
     * the number of series. Bars for each series are drawn in order left to
     * right.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }

        IntervalXYDataset intervalDataset = (IntervalXYDataset) dataset;

        double y0;
=====================================================================
Found a 14 line (65 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 398 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 289 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java

                        this.plotLines, this.legendLine, lineStroke, linePaint);
                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
            }
        }
        return result;
    }
=====================================================================
Found a 47 line (65 tokens) duplication in the following files: 
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

    }

    /**
     * Returns a flag that controls whether or not outlines of the areas are
     * drawn.
     *
     * @return The flag.
     *
     * @see #setOutline(boolean)
     */
    public boolean isOutline() {
        return this.showOutline;
    }

    /**
     * Sets a flag that controls whether or not outlines of the areas are drawn
     * and sends a {@link RendererChangeEvent} to all registered listeners.
     *
     * @param show  the flag.
     *
     * @see #isOutline()
     */
    public void setOutline(boolean show) {
        this.showOutline = show;
        fireChangeEvent();
    }

    /**
     * Returns the shape used to represent an area in the legend.
     *
     * @return The legend area (never {@code null}).
     */
    public Shape getLegendArea() {
        return this.legendArea;
    }

    /**
     * Sets the shape used as an area in each legend item and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param area  the area ({@code null} not permitted).
     */
    public void setLegendArea(Shape area) {
        Args.nullNotPermitted(area, "area");
        this.legendArea = area;
        fireChangeEvent();
    }
=====================================================================
Found a 32 line (65 tokens) duplication in the following files: 
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java

    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain (horizontal) axis.
     * @param rangeAxis  the range (vertical) axis.
     * @param dataset  the dataset (an {@link XYZDataset} is expected).
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // return straight away if the item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }

        PlotOrientation orientation = plot.getOrientation();
=====================================================================
Found a 41 line (65 tokens) duplication in the following files: 
Starting at line 253 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYErrorRenderer.java
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/YIntervalRenderer.java

        return findDomainBounds(dataset, true);
    }

    /**
     * Returns the range required by this renderer to display all the range
     * values in the specified dataset.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range, or {@code null} if the dataset is
     *     {@code null}.
     */
    @Override
    public Range findRangeBounds(XYDataset dataset) {
        // include the interval if there is one
        return findRangeBounds(dataset, true);
    }

    /**
     * Draws the visual representation for one data item.
     *
     * @param g2  the graphics output target.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param info  the plot rendering info.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  the crosshair state.
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (pass == 0 && dataset instanceof IntervalXYDataset
=====================================================================
Found a 12 line (65 tokens) duplication in the following files: 
Starting at line 397 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues.java
Starting at line 301 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/KeyedObjects.java

        KeyedValues that = (KeyedValues) obj;
        int count = getItemCount();
        if (count != that.getItemCount()) {
            return false;
        }

        for (int i = 0; i < count; i++) {
            Comparable k1 = getKey(i);
            Comparable k2 = that.getKey(i);
            if (!k1.equals(k2)) {
                return false;
            }
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java

    public void testEquals() {
        XYBoxAnnotation a1 = new XYBoxAnnotation(1.0, 2.0, 3.0, 4.0,
                new BasicStroke(1.2f), Color.RED, Color.BLUE);
        XYBoxAnnotation a2 = new XYBoxAnnotation(1.0, 2.0, 3.0, 4.0,
                new BasicStroke(1.2f), Color.RED, Color.BLUE);
        assertEquals(a1, a2);
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 276 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 436 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
        assertEquals(21.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);
=====================================================================
Found a 17 line (65 tokens) duplication in the following files: 
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/BubbleXYItemLabelGeneratorTest.java
Starting at line 55 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/StandardXYZToolTipGeneratorTest.java

public class BubbleXYItemLabelGeneratorTest {

    /**
     * A series of tests for the equals() method.
     */
    @Test
    public void testEquals() {

        // some setup...
        String f1 = "{1}";
        String f2 = "{2}";
        NumberFormat xnf1 = new DecimalFormat("0.00");
        NumberFormat xnf2 = new DecimalFormat("0.000");
        NumberFormat ynf1 = new DecimalFormat("0.00");
        NumberFormat ynf2 = new DecimalFormat("0.000");
        NumberFormat znf1 = new DecimalFormat("0.00");
        NumberFormat znf2 = new DecimalFormat("0.000");
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/StandardCategoryItemLabelGeneratorTest.java
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/labels/StandardCategorySeriesLabelGeneratorTest.java

                new DecimalFormat("0.000"));
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        dataset.addValue(1.0, "R0", "C0");
        dataset.addValue(2.0, "R0", "C1");
        dataset.addValue(3.0, "R1", "C0");
        dataset.addValue(null, "R1", "C1");
        String s = g.generateLabel(dataset, 0, 0);
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 71 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 75 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        LegendItem item1 = new LegendItem("Label", "Description",
                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);
=====================================================================
Found a 8 line (65 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 5 line (65 tokens) duplication in the following files: 
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 5 line (65 tokens) duplication in the following files: 
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 227 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(4.0, 3.0, 2.0, 1.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 8 line (65 tokens) duplication in the following files: 
Starting at line 1198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testAxisLocationIndices() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);

        NumberAxis xAxis2 = new NumberAxis("X2");
=====================================================================
Found a 10 line (65 tokens) duplication in the following files: 
Starting at line 256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/StatisticsTest.java
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/StatisticsTest.java

    public void testCalculateMedian4() {
        List<Double> values = new ArrayList<>();
        values.add(7.0);
        values.add(2.0);
        values.add(3.0);
        values.add(5.0);
        values.add(4.0);
        values.add(6.0);
        values.add(1.0);
        double median = Statistics.calculateMedian(values);
=====================================================================
Found a 17 line (65 tokens) duplication in the following files: 
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java

            Day d = new Day(1, 1, 1970);
            assertEquals(1970, d.getYear());
            assertEquals(1, d.getMonth());
            assertEquals(1, d.getDayOfMonth());
            assertEquals(-3_600_000L * hoursOffset, d.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the SerialDate constructor should use it.
     */
    @Test
    public void testSerialDateConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 17 line (65 tokens) duplication in the following files: 
Starting at line 523 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 549 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 572 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 475 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 482 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

            assertEquals(ms, d.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.NOVEMBER, 3, 0, 0, 0);
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 438 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 456 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/Rome"));
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 0);
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimePeriodValuesTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        TimePeriodValues<String> s1 = new TimePeriodValues<>("A test");
        s1.add(new Year(2000), 13.75);
        s1.add(new Year(2001), 11.90);
        s1.add(new Year(2002), null);
        s1.add(new Year(2005), 19.32);
        s1.add(new Year(2007), 16.89);
=====================================================================
Found a 7 line (65 tokens) duplication in the following files: 
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[1], new double[1],
                new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[1],
=====================================================================
Found a 27 line (64 tokens) duplication in the following files: 
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 596 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

        result = 29 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
=====================================================================
Found a 29 line (64 tokens) duplication in the following files: 
Starting at line 232 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalXYItemLabelGenerator.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/IntervalXYToolTipGenerator.java
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYItemLabelGenerator.java

    public String generateLabel(XYDataset dataset, int series, int item) {
        return generateLabelString(dataset, series, item);
    }

    /**
     * Returns an independent copy of the generator.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if cloning is not supported.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the other object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IntervalXYItemLabelGenerator)) {
=====================================================================
Found a 17 line (64 tokens) duplication in the following files: 
Starting at line 4826 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        return clone;
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeStroke(this.domainGridlineStroke, stream);
        SerialUtils.writePaint(this.domainGridlinePaint, stream);
        SerialUtils.writeStroke(this.rangeGridlineStroke, stream);
        SerialUtils.writePaint(this.rangeGridlinePaint, stream);
        SerialUtils.writeStroke(this.rangeCrosshairStroke, stream);
=====================================================================
Found a 17 line (64 tokens) duplication in the following files: 
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 626 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            subplot.setFixedDomainAxisSpace(space, false);
        }
    }

    /**
     * Handles a 'click' on the plot by updating the anchor value.
     *
     * @param x  x-coordinate of the click.
     * @param y  y-coordinate of the click.
     * @param info  information about the plot's dimensions.
     *
     */
    @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
        Rectangle2D dataArea = info.getDataArea();
        if (dataArea.contains(x, y)) {
            for (int i = 0; i < this.subplots.size(); i++) {
=====================================================================
Found a 9 line (64 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/LongNeedle.java
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PointerNeedle.java

        GeneralPath shape3 = new GeneralPath();

        float minX = (float) plotArea.getMinX();
        float minY = (float) plotArea.getMinY();
        float maxX = (float) plotArea.getMaxX();
        float maxY = (float) plotArea.getMaxY();
        //float midX = (float) (minX + (plotArea.getWidth() * getRotateX()));
        //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));
        float midX = (float) (minX + (plotArea.getWidth() * 0.5));
=====================================================================
Found a 17 line (64 tokens) duplication in the following files: 
Starting at line 1251 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/WaferMapPlot.java
Starting at line 2846 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            PlotState parentState, PlotRenderingInfo info) {

        // if the plot area is too small, just return...
        boolean b1 = (area.getWidth() <= MINIMUM_WIDTH_TO_DRAW);
        boolean b2 = (area.getHeight() <= MINIMUM_HEIGHT_TO_DRAW);
        if (b1 || b2) {
            return;
        }

        // record the plot area...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for the plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);
=====================================================================
Found a 11 line (64 tokens) duplication in the following files: 
Starting at line 798 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 876 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,
            Rectangle2D dataArea, double value, Paint paint, Stroke stroke) {

        Range range = axis.getRange();
        if (!range.contains(value)) {
            return;
        }

        PlotOrientation orientation = plot.getOrientation();
        Line2D line = null;
        double v = axis.valueToJava2D(value, dataArea, plot.getRangeAxisEdge());
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 956 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 987 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            g2.setPaint(marker.getPaint());
            g2.setStroke(marker.getStroke());
            g2.draw(line);

            String label = marker.getLabel();
            RectangleAnchor anchor = marker.getLabelAnchor();
            if (label != null) {
                Font labelFont = marker.getLabelFont();
                g2.setFont(labelFont);
                Point2D coordinates = calculateRangeMarkerTextAnchorPoint(
=====================================================================
Found a 11 line (64 tokens) duplication in the following files: 
Starting at line 678 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

                    ? state.getVisibleSeriesCount() : dataset.getRowCount();
            double space = 0.0;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
            double categoryMargin = 0.0;
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 496 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GanttRenderer.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 451 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

        if (isDrawBarOutline()
                && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
            Stroke stroke = getItemOutlineStroke(row, column);
            Paint paint = getItemOutlinePaint(row, column);
            if (stroke != null && paint != null) {
                g2.setStroke(stroke);
                g2.setPaint(paint);
                g2.draw(bar);
            }
        }
=====================================================================
Found a 8 line (64 tokens) duplication in the following files: 
Starting at line 246 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java

        RectangleEdge xAxisLocation = plot.getDomainAxisEdge();
        RectangleEdge yAxisLocation = plot.getRangeAxisEdge();

        // get the data point...
        double x1 = dataset.getXValue(series, item);
        double y1 = dataset.getYValue(series, item);
        double transX1 = domainAxis.valueToJava2D(x1, dataArea, xAxisLocation);
        double transY1 = rangeAxis.valueToJava2D(y1, dataArea, yAxisLocation);
=====================================================================
Found a 11 line (64 tokens) duplication in the following files: 
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 339 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

            } else {
                if (orientation == PlotOrientation.VERTICAL) {
                    left.moveTo(transX1, transStack1);
                    left.lineTo(transX1, transY1);
                    left.lineTo(transXLeft, transStackLeft);
                } else {
                    left.moveTo(transStack1, transX1);
                    left.lineTo(transY1, transX1);
                    left.lineTo(transStackLeft, transXLeft);
                }
                left.closePath();
=====================================================================
Found a 13 line (64 tokens) duplication in the following files: 
Starting at line 384 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java

                String label = lg.generateLabel(dataset, series);
                String description = label;
                String toolTipText = null;
                if (getLegendItemToolTipGenerator() != null) {
                    toolTipText = getLegendItemToolTipGenerator().generateLabel(
                            dataset, series);
                }
                String urlText = null;
                if (getLegendItemURLGenerator() != null) {
                    urlText = getLegendItemURLGenerator().generateLabel(
                            dataset, series);
                }
                Paint paint = lookupSeriesPaint(series);
=====================================================================
Found a 12 line (64 tokens) duplication in the following files: 
Starting at line 398 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 1091 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

                        urlText, this.legendArea, paint);
                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
            }
        }
=====================================================================
Found a 19 line (64 tokens) duplication in the following files: 
Starting at line 496 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java
Starting at line 529 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java

    public void setStartValue(int series, Comparable category, Number value) {

        // does the series exist?
        if ((series < 0) || (series > getSeriesCount() - 1)) {
            throw new IllegalArgumentException(
                "DefaultIntervalCategoryDataset.setValue: "
                + "series outside valid range.");
        }

        // is the category valid?
        int categoryIndex = getCategoryIndex(category);
        if (categoryIndex < 0) {
            throw new IllegalArgumentException(
                "DefaultIntervalCategoryDataset.setValue: "
                + "unrecognised category.");
        }

        // update the data...
        this.startData[series][categoryIndex] = value;
=====================================================================
Found a 11 line (64 tokens) duplication in the following files: 
Starting at line 258 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 495 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 536 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getValue(Comparable rowKey, Comparable columnKey) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getValue(r, c + this.firstCategoryIndex);
=====================================================================
Found a 9 line (64 tokens) duplication in the following files: 
Starting at line 1383 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1502 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

        if (includeInterval && dataset instanceof IntervalXYDataset) {
            // handle special case of IntervalXYDataset
            @SuppressWarnings("unchecked")
            IntervalXYDataset<S> ixyd = (IntervalXYDataset) dataset;
            for (S seriesKey : visibleSeriesKeys) {
                int series = dataset.indexOf(seriesKey);
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    double xvalue = ixyd.getXValue(series, item);
=====================================================================
Found a 13 line (64 tokens) duplication in the following files: 
Starting at line 387 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java

        int c = this.data.getRowIndex(rowKey);
        if ((r == this.maximumRangeValueRow && c
                == this.maximumRangeValueColumn) || (r
                == this.maximumRangeValueIncStdDevRow && c
                == this.maximumRangeValueIncStdDevColumn) || (r
                == this.minimumRangeValueRow && c
                == this.minimumRangeValueColumn) || (r
                == this.minimumRangeValueIncStdDevRow && c
                == this.minimumRangeValueIncStdDevColumn)) {

            // iterate over all data items and update mins and maxes
            updateBounds();
        }
=====================================================================
Found a 39 line (64 tokens) duplication in the following files: 
Starting at line 199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/CategoryTableXYDataset.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultTableXYDataset.java
Starting at line 327 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeriesCollection.java

        return (Number) this.values.getRowKey(item);
    }

    /**
     * Returns the starting X value for the specified series and item.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The starting X value.
     */
    @Override
    public Number getStartX(int series, int item) {
        return this.intervalDelegate.getStartX(series, item);
    }

    /**
     * Returns the ending X value for the specified series and item.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The ending X value.
     */
    @Override
    public Number getEndX(int series, int item) {
        return this.intervalDelegate.getEndX(series, item);
    }

    /**
     * Returns the y-value for the specified series and item.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The y value (possibly {@code null}).
     */
    @Override
    public Number getY(int series, int item) {
=====================================================================
Found a 16 line (64 tokens) duplication in the following files: 
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryToolTipGenerator tt
                = new StandardCategoryToolTipGenerator();
        renderer.setSeriesToolTipGenerator(0, tt);
        CategoryToolTipGenerator tt2 = renderer.getToolTipGenerator(0, 0);
        assertSame(tt2, tt);
    }

    /**
     * Check that setting a URL generator for a series does override the
     * default generator.
     */
    @Test
    public void testSetSeriesURLGenerator() {
        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.setDomainAxis(new SubCategoryAxis("SubCategoryAxis"));
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
=====================================================================
Found a 9 line (64 tokens) duplication in the following files: 
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 644 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 684 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10011 - top, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 9 line (64 tokens) duplication in the following files: 
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 625 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10101 - top, left and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 10 line (64 tokens) duplication in the following files: 
Starting at line 711 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 755 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(16.0, size.height, EPSILON);

        // TBLRC
        // 11100
        container.clear();
=====================================================================
Found a 8 line (64 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (64 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 22 line (64 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java

        r2.setShadowPaint(Color.RED);
        assertEquals(r1, r2);

        // shadowXOffset
        r1.setShadowXOffset(3.3);
        assertNotEquals(r1, r2);
        r2.setShadowXOffset(3.3);
        assertEquals(r1, r2);

        // shadowYOffset
        r1.setShadowYOffset(3.3);
        assertNotEquals(r1, r2);
        r2.setShadowYOffset(3.3);
        assertEquals(r1, r2);

    }

    /**
     * Two objects that are equal are required to return the same hashCode.
     */
    @Test
    public void testHashcode() {
=====================================================================
Found a 12 line (64 tokens) duplication in the following files: 
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java
Starting at line 185 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        r2.setDefaultShapesVisible(r1.getDefaultShapesVisible());
        assertEquals(r1, r2);

        r1.setSeriesShapesVisible(1, true);
        assertNotEquals(r1, r2);
        r2.setSeriesShapesVisible(1, true);
        assertEquals(r1, r2);

        r1.setSeriesShapesFilled(1, true);
        assertNotEquals(r1, r2);
        r2.setSeriesShapesFilled(1, true);
        assertEquals(r1, r2);
=====================================================================
Found a 6 line (64 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    public void testEquals() {

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
=====================================================================
Found a 15 line (64 tokens) duplication in the following files: 
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/HistogramDatasetTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/HistogramDatasetTest.java

        assertSame(d1.getClass(), d2.getClass());
        assertEquals(d1, d2);

        // simple check for independence
        d1.addSeries("Series 2", new double[] {1.0, 2.0, 3.0}, 2);
        assertNotEquals(d1, d2);
        d2.addSeries("Series 2", new double[] {1.0, 2.0, 3.0}, 2);
        assertEquals(d1, d2);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
=====================================================================
Found a 6 line (64 tokens) duplication in the following files: 
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        DefaultHighLowDataset d1 = new DefaultHighLowDataset("Series 1",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[] {99.9});
        DefaultHighLowDataset d2 = CloneUtils.clone(d1);
=====================================================================
Found a 8 line (64 tokens) duplication in the following files: 
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 417 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 523 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java

    public void testRemove2() {
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, 1.1);
        s1.add(2.0, 2.2);
        s1.add(3.0, 3.3);
        s1.add(4.0, 4.4);
        s1.add(5.0, 5.5);
        s1.add(6.0, 6.6);
=====================================================================
Found a 14 line (63 tokens) duplication in the following files: 
Starting at line 721 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java

        double axisMax = this.timeline.toTimelineValue(range.getUpperMillis());

        double min = 0.0;
        double max = 0.0;
        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            min = area.getMaxY();
            max = area.getY();
        }

        double result;
=====================================================================
Found a 32 line (63 tokens) duplication in the following files: 
Starting at line 527 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java
Starting at line 683 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/ValueAxis.java

    }

    /**
     * Estimates the space (height or width) required to draw the axis.
     *
     * @param g2  the graphics device.
     * @param plot  the plot that the axis belongs to.
     * @param plotArea  the area within which the plot (including axes) should
     *                  be drawn.
     * @param edge  the axis location.
     * @param space  space already reserved.
     *
     * @return The space required to draw the axis (including pre-reserved
     *         space).
     */
    @Override
    public AxisSpace reserveSpace(Graphics2D g2, Plot plot, 
            Rectangle2D plotArea, RectangleEdge edge, AxisSpace space) {
        // create a new space object if one wasn't supplied...
        if (space == null) {
            space = new AxisSpace();
        }

        // if the axis is not visible, no additional space is required...
        if (!isVisible()) {
            return space;
        }

        // if the axis has a fixed dimension, return it...
        double dimension = getFixedDimension();
        if (dimension > 0.0) {
            space.ensureAtLeast(dimension, edge);
=====================================================================
Found a 22 line (63 tokens) duplication in the following files: 
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 208 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/GridArrangement.java

        Size2D size1 = arrangeFN(container, g2, constraint.getWidth());
        if (constraint.getHeightRange().contains(size1.getHeight())) {
            return size1;
        }
        else {
            double h = constraint.getHeightRange().constrain(size1.getHeight());
            RectangleConstraint c2 = constraint.toFixedHeight(h);
            return arrange(container, g2, c2);
        }
    }

    /**
     * Arranges the container width a fixed width and no constraint on the
     * height.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param width  the fixed width.
     *
     * @return The container size after arranging the contents.
     */
    protected Size2D arrangeFN(BlockContainer container, Graphics2D g2,
=====================================================================
Found a 9 line (63 tokens) duplication in the following files: 
Starting at line 591 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 616 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

                    r.setRect(target.getMaxX() - this.stripWidth,
                            Math.min(vv0, vv1), this.stripWidth, hh);
                    g2.setPaint(p);
                    g2.fill(r);
                }
                if (isStripOutlineVisible()) {
                    g2.setPaint(this.stripOutlinePaint);
                    g2.setStroke(this.stripOutlineStroke);
                    g2.draw(new Rectangle2D.Double(target.getMaxX()
=====================================================================
Found a 20 line (63 tokens) duplication in the following files: 
Starting at line 4849 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        SerialUtils.writePaint(this.rangeZeroBaselinePaint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {

        stream.defaultReadObject();
        this.domainGridlineStroke = SerialUtils.readStroke(stream);
        this.domainGridlinePaint = SerialUtils.readPaint(stream);
        this.rangeGridlineStroke = SerialUtils.readStroke(stream);
        this.rangeGridlinePaint = SerialUtils.readPaint(stream);
        this.rangeCrosshairStroke = SerialUtils.readStroke(stream);
=====================================================================
Found a 13 line (63 tokens) duplication in the following files: 
Starting at line 136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 829 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 749 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 517 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 384 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 635 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1073 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 1027 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        String label = getLegendItemLabelGenerator().generateLabel(dataset,
                series);
        String description = label;
        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
=====================================================================
Found a 13 line (63 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 487 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 604 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 489 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

                urlText, shape, paint, outlineStroke, outlinePaint);
        result.setLabelFont(lookupLegendTextFont(series));
        Paint labelPaint = lookupLegendTextPaint(series);
        if (labelPaint != null) {
            result.setLabelPaint(labelPaint);
        }
        result.setDataset(dataset);
        result.setDatasetIndex(datasetIndex);
        result.setSeriesKey(dataset.getRowKey(series));
        result.setSeriesIndex(series);
        return result;

    }
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 676 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

        double x1;
        if (this.useSeriesOffset) {
            x1 = domainAxis.getCategorySeriesMiddle(column,
                    dataset.getColumnCount(), visibleRow, visibleRowCount,
                    this.itemMargin, dataArea, plot.getDomainAxisEdge());
        }
        else {
            x1 = domainAxis.getCategoryMiddle(column, getColumnCount(),
                    dataArea, plot.getDomainAxisEdge());
        }
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 277 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 294 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java

                left.closePath();
            }

            float transStackRight = (float) rangeAxis.valueToJava2D(
                    adjStackRight[1], dataArea, edge1);
            // RIGHT POLYGON
            if (y2 >= 0.0) {
                double yright = (y1 + y2) / 2.0 + stackRight[1];
                float transYRight
                    = (float) rangeAxis.valueToJava2D(yright, dataArea, edge1);
=====================================================================
Found a 62 line (63 tokens) duplication in the following files: 
Starting at line 743 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 541 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns the legend item tool tip generator.
     *
     * @return The tool tip generator (possibly {@code null}).
     *
     * @see #setLegendItemToolTipGenerator(XYSeriesLabelGenerator)
     */
    public XYSeriesLabelGenerator getLegendItemToolTipGenerator() {
        return this.legendItemToolTipGenerator;
    }

    /**
     * Sets the legend item tool tip generator and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param generator  the generator ({@code null} permitted).
     *
     * @see #getLegendItemToolTipGenerator()
     */
    public void setLegendItemToolTipGenerator(
            XYSeriesLabelGenerator generator) {
        this.legendItemToolTipGenerator = generator;
        fireChangeEvent();
    }

    /**
     * Returns the legend item URL generator.
     *
     * @return The URL generator (possibly {@code null}).
     *
     * @see #setLegendItemURLGenerator(XYSeriesLabelGenerator)
     */
    public XYSeriesLabelGenerator getLegendItemURLGenerator() {
        return this.legendItemURLGenerator;
    }

    /**
     * Sets the legend item URL generator and sends a
     * {@link RendererChangeEvent} to all registered listeners.
     *
     * @param generator  the generator ({@code null} permitted).
     *
     * @see #getLegendItemURLGenerator()
     */
    public void setLegendItemURLGenerator(XYSeriesLabelGenerator generator) {
        this.legendItemURLGenerator = generator;
        fireChangeEvent();
    }

    /**
     * Tests this renderer for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} not permitted).
     *
     * @return {@code true} if this renderer is equal to {@code obj},
     *     and {@code false} otherwise.
     */
    @Override
    public boolean equals(Object obj) {
=====================================================================
Found a 3 line (63 tokens) duplication in the following files: 
Starting at line 262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextFragment.java
Starting at line 808 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

        result = (this.text != null ? this.text.hashCode() : 0);
        result = 29 * result + (this.font != null ? this.font.hashCode() : 0);
        result = 29 * result + (this.paint != null ? this.paint.hashCode() : 0);
=====================================================================
Found a 17 line (63 tokens) duplication in the following files: 
Starting at line 416 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java
Starting at line 470 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java

    public Number getStartValue(int series, int category) {

        // check arguments...
        if ((series < 0) || (series >= getSeriesCount())) {
            throw new IllegalArgumentException(
                "DefaultIntervalCategoryDataset.getValue(): "
                + "series index out of range.");
        }

        if ((category < 0) || (category >= getCategoryCount())) {
            throw new IllegalArgumentException(
                "DefaultIntervalCategoryDataset.getValue(): "
                + "category index out of range.");
        }

        // fetch the value...
        return this.startData[series][category];
=====================================================================
Found a 18 line (63 tokens) duplication in the following files: 
Starting at line 343 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues2D.java
Starting at line 301 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/KeyedObjects2D.java

            if (row.getValue(item) != null) {
                allNull = false;
                break;
            }
        }

        if (allNull) {
            this.rowKeys.remove(rowIndex);
            this.rows.remove(rowIndex);
        }

        // 2. check whether the column is now empty.
        allNull = true;
        //int columnIndex = getColumnIndex(columnKey);

        for (int item = 0, itemCount = this.rows.size(); item < itemCount;
             item++) {
            row = this.rows.get(item);
=====================================================================
Found a 13 line (63 tokens) duplication in the following files: 
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 187 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

    public static double[] getOLSRegression(XYDataset data, int series) {

        int n = data.getItemCount(series);
        if (n < 2) {
            throw new IllegalArgumentException("Not enough data.");
        }

        double sumX = 0;
        double sumY = 0;
        double sumXX = 0;
        double sumXY = 0;
        for (int i = 0; i < n; i++) {
            double x = data.getXValue(series, i);
=====================================================================
Found a 14 line (63 tokens) duplication in the following files: 
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 159 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

        this.millisecond = calendar.get(Calendar.MILLISECOND);
        this.second = (byte) calendar.get(Calendar.SECOND);
        this.minute = (byte) calendar.get(Calendar.MINUTE);
        this.hour = (byte) calendar.get(Calendar.HOUR_OF_DAY);
        this.day = new Day(time, calendar);
        peg(calendar);
    }

    /**
     * Returns the second.
     *
     * @return The second.
     */
    public Second getSecond() {
=====================================================================
Found a 36 line (63 tokens) duplication in the following files: 
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultHighLowDataset.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultOHLCDataset.java

    }

    /**
     * Returns the open-value (as a double primitive) for an item within a
     * series.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The open-value.
     *
     * @see #getOpen(int, int)
     */
    @Override
    public double getOpenValue(int series, int item) {
        double result = Double.NaN;
        Number open = getOpen(series, item);
        if (open != null) {
            result = open.doubleValue();
        }
        return result;
    }

    /**
     * Returns the close-value for one item in a series.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The close-value.
     *
     * @see #getCloseValue(int, int)
     */
    @Override
    public Number getClose(int series, int item) {
        return this.close[item];
=====================================================================
Found a 29 line (63 tokens) duplication in the following files: 
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

    public DefaultIntervalXYDataset() {
        this.seriesKeys = new ArrayList<>();
        this.seriesList = new ArrayList<>();
    }

    /**
     * Returns the number of series in the dataset.
     *
     * @return The series count.
     */
    @Override
    public int getSeriesCount() {
        return this.seriesList.size();
    }

    /**
     * Returns the key for a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     *
     * @return The key for the series.
     *
     * @throws IllegalArgumentException if {@code series} is not in the
     *     specified range.
     */
    @Override
    public S getSeriesKey(int series) {
        Args.requireInRange(series, "series", 0, this.seriesKeys.size() - 1);
=====================================================================
Found a 46 line (63 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java

        double[][] seriesArray = this.seriesList.get(series);
        return seriesArray[0].length;
    }

    /**
     * Returns the x-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The x-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getX(int, int)
     */
    @Override
    public double getXValue(int series, int item) {
        double[][] seriesData = this.seriesList.get(series);
        return seriesData[0][item];
    }

    /**
     * Returns the y-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The y-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getY(int, int)
     */
    @Override
    public double getYValue(int series, int item) {
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 388 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 397 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 462 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 536 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 545 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 610 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 619 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 684 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 693 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 758 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 767 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 832 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 841 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 906 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 915 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 980 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 989 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        assertTrue(nsd.getTime() >= d0.getTime());

        axis.setRange(d1, end);
        psd = axis.previousStandardDate(d1, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d1.getTime());
        assertTrue(nsd.getTime() >= d1.getTime());

        // MIDDLE: check d1, d2 and d3
        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 335 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 492 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 566 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 631 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 640 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 705 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 714 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 779 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 788 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 853 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 862 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 927 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 936 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1001 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1010 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        assertTrue(nsd.getTime() >= d2.getTime());

        axis.setRange(d3, end);
        psd = axis.previousStandardDate(d3, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d3.getTime());
        assertTrue(nsd.getTime() >= d3.getTime());

        // END: check d3 and d4
        axis.setTickMarkPosition(DateTickMarkPosition.END);
=====================================================================
Found a 6 line (63 tokens) duplication in the following files: 
Starting at line 55 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/QuarterDateFormatTest.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/QuarterDateFormatTest.java

    public void testEquals() {
        QuarterDateFormat qf1 = new QuarterDateFormat(TimeZone.getTimeZone(
                "GMT"), new String[] {"1", "2", "3", "4"});
        QuarterDateFormat qf2 = new QuarterDateFormat(TimeZone.getTimeZone(
                "GMT"), new String[] {"1", "2", "3", "4"});
        assertEquals(qf1, qf2);
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 1016 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1039 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.setDomainAxis(new SubCategoryAxis("SubCategoryAxis"));
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("There should be no exception.");
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 492 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 510 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00101 - left and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 546 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 575 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 681 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
=====================================================================
Found a 7 line (63 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (63 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (63 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 6 line (63 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 10 line (63 tokens) duplication in the following files: 
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.setRenderer(1, new LineAndShapeRenderer());
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
        catch (Exception e) {
            fail("No exception should be thrown.");
=====================================================================
Found a 8 line (63 tokens) duplication in the following files: 
Starting at line 971 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1054 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1080 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testGetDomainAxisForDataset() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));
=====================================================================
Found a 12 line (63 tokens) duplication in the following files: 
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/MultiplePiePlotTest.java
Starting at line 303 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java

    }

    /**
     * Fetches the legend items and checks the values.
     */
    @Test
    public void testGetLegendItems() {
        DefaultCategoryDataset<String,String> dataset = new DefaultCategoryDataset<>();
        dataset.addValue(35.0, "S1", "C1");
        dataset.addValue(45.0, "S1", "C2");
        dataset.addValue(55.0, "S2", "C1");
        dataset.addValue(15.0, "S2", "C2");
=====================================================================
Found a 7 line (63 tokens) duplication in the following files: 
Starting at line 1076 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testGetDomainAxisForDataset() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));
=====================================================================
Found a 8 line (63 tokens) duplication in the following files: 
Starting at line 470 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 520 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

                    -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
            ChartRenderingInfo info = new ChartRenderingInfo();
            JFreeChart chart = new JFreeChart(plot);
            /* BufferedImage image = */ chart.createBufferedImage(300, 200,
                    info);
=====================================================================
Found a 9 line (63 tokens) duplication in the following files: 
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYBarRendererTest.java
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYBarRendererTest.java

    public void testFindDomainBounds() {
        TableXYDataset<String> dataset
                = RendererXYPackageUtils.createTestTableXYDataset();
        JFreeChart chart = ChartFactory.createStackedXYAreaChart(
                "Test Chart", "X", "Y", dataset,
                PlotOrientation.VERTICAL, false, false, false);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
        plot.setRenderer(new StackedXYBarRenderer());
        NumberAxis domainAxis = (NumberAxis) plot.getDomainAxis();
=====================================================================
Found a 9 line (63 tokens) duplication in the following files: 
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBlockRendererTest.java
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBlockRendererTest.java

    public void testFindRangeBounds() {
        XYBlockRenderer renderer = new XYBlockRenderer();
        assertNull(renderer.findRangeBounds(null));

        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        XYSeries<String> series = new XYSeries<>("S1");
        series.add(1.0, null);
        dataset.addSeries(series);
        Range r = renderer.findRangeBounds(dataset);
=====================================================================
Found a 9 line (63 tokens) duplication in the following files: 
Starting at line 180 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBlockRendererTest.java
Starting at line 166 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java

        XYBlockRenderer renderer = new XYBlockRenderer();
        assertNull(renderer.findRangeBounds(null));

        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        XYSeries<String> series = new XYSeries<>("S1");
        series.add(1.0, null);
        dataset.addSeries(series);
        Range r = renderer.findRangeBounds(dataset);
        assertNull(r);
=====================================================================
Found a 8 line (63 tokens) duplication in the following files: 
Starting at line 149 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 181 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java

    public void test2502355_zoom() {
        DefaultXYDataset<String> dataset = new DefaultXYDataset<>();
        JFreeChart chart = ChartFactory.createXYLineChart("TestChart", "X",
                "Y", dataset, PlotOrientation.VERTICAL, false, false, false);
        ChartPanel panel = new ChartPanel(chart);
        chart.addChangeListener(this);
        this.chartChangeEvents.clear();
        panel.zoom(new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0));
=====================================================================
Found a 11 line (63 tokens) duplication in the following files: 
Starting at line 391 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

        assertEquals(data.getKey(3), "A");

        // check retrieve value by key
        assertEquals(data.getValue("A"), 2.0);
        assertNull(data.getValue("B"));
        assertEquals(data.getValue("C"), 1.0);
        assertEquals(data.getValue("D"), 3.0);

        // check retrieve value by index
        assertEquals(data.getValue(0), 3.0);
        assertEquals(data.getValue(1), 1.0);
=====================================================================
Found a 11 line (63 tokens) duplication in the following files: 
Starting at line 424 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 458 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

        assertEquals(data.getKey(2), "D");
        assertEquals(data.getKey(3), "B");

        // check retrieve value by key
        assertEquals(data.getValue("A"), 2.0);
        assertNull(data.getValue("B"));
        assertEquals(data.getValue("C"), 1.0);
        assertEquals(data.getValue("D"), 3.0);

        // check retrieve value by index
        assertEquals(data.getValue(0), 1.0);
=====================================================================
Found a 7 line (63 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
                new double[1], new double[1], new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
=====================================================================
Found a 27 line (62 tokens) duplication in the following files: 
Starting at line 489 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 503 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 595 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 934 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        temp = Double.doubleToLongBits(this.labelOffset);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.arrowPaint, stream);
=====================================================================
Found a 26 line (62 tokens) duplication in the following files: 
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/TextAnnotation.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java

    public static final Font DEFAULT_FONT
            = new Font("SansSerif", Font.PLAIN, 10);

    /** The default paint. */
    public static final Paint DEFAULT_PAINT = Color.BLACK;

    /** The default text anchor. */
    public static final TextAnchor DEFAULT_TEXT_ANCHOR = TextAnchor.CENTER;

    /** The default rotation anchor. */
    public static final TextAnchor DEFAULT_ROTATION_ANCHOR = TextAnchor.CENTER;

    /** The default rotation angle. */
    public static final double DEFAULT_ROTATION_ANGLE = 0.0;

    /** The text. */
    private String text;

    /** The font. */
    private Font font;

    /** The paint. */
    private transient Paint paint;

    /** The text anchor. */
    private TextAnchor textAnchor;
=====================================================================
Found a 26 line (62 tokens) duplication in the following files: 
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java

        result = 29 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java

            area.moveTo((float) y, (float) x);
            for (int i = 2; i < this.polygon.length; i += 2) {
                x = domainAxis.valueToJava2D(this.polygon[i], dataArea,
                        domainEdge);
                y = rangeAxis.valueToJava2D(this.polygon[i + 1], dataArea,
                        rangeEdge);
                area.lineTo((float) y, (float) x);
=====================================================================
Found a 18 line (62 tokens) duplication in the following files: 
Starting at line 367 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

        ColumnArrangement that = (ColumnArrangement) obj;
        if (this.horizontalAlignment != that.horizontalAlignment) {
            return false;
        }
        if (this.verticalAlignment != that.verticalAlignment) {
            return false;
        }
        if (this.horizontalGap != that.horizontalGap) {
            return false;
        }
        if (this.verticalGap != that.verticalGap) {
            return false;
        }
        return true;
    }


}
=====================================================================
Found a 36 line (62 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYZToolTipGenerator.java

    public BubbleXYItemLabelGenerator(String formatString,
            DateFormat xFormat, DateFormat yFormat, DateFormat zFormat) {
        super(formatString, xFormat, yFormat);
        Args.nullNotPermitted(zFormat, "zFormat");
        this.zDateFormat = zFormat;
    }

    /**
     * Returns the number formatter for the z-values.
     *
     * @return The number formatter (possibly {@code null}).
     */
    public NumberFormat getZFormat() {
        return this.zFormat;
    }

    /**
     * Returns the date formatter for the z-values.
     *
     * @return The date formatter (possibly {@code null}).
     */
    public DateFormat getZDateFormat() {
        return this.zDateFormat;
    }

    /**
     * Generates an item label for a particular item within a series.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The item label (possibly {@code null}).
     */
    @Override
    public String generateLabel(XYDataset dataset, int series, int item) {
=====================================================================
Found a 25 line (62 tokens) duplication in the following files: 
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 356 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

    public LegendItem(String label, String description, String toolTipText, 
            String urlText, Shape shape, Paint fillPaint, Stroke outlineStroke, 
            Paint outlinePaint) {

        this(label, description, toolTipText, urlText,
                /* shape visible = */ true, shape,
                /* shape filled = */ true, fillPaint,
                /* shape outlined = */ true, outlinePaint, outlineStroke,
                /* line visible */ false, UNUSED_SHAPE, UNUSED_STROKE,
                Color.BLACK);

    }

    /**
     * Creates a legend item using a line.
     *
     * @param label  the label ({@code null} not permitted).
     * @param description  the description ({@code null} permitted).
     * @param toolTipText  the tool tip text ({@code null} permitted).
     * @param urlText  the URL text ({@code null} permitted).
     * @param line  the line ({@code null} not permitted).
     * @param lineStroke  the line stroke ({@code null} not permitted).
     * @param linePaint  the line paint ({@code null} not permitted).
     */
    public LegendItem(String label, String description, String toolTipText, 
=====================================================================
Found a 16 line (62 tokens) duplication in the following files: 
Starting at line 643 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

            p.setFixedRangeAxisSpace(space, false);
        }
    }

    /**
     * Handles a 'click' on the plot by updating the anchor values.
     *
     * @param x  x-coordinate, where the click occurred.
     * @param y  y-coordinate, where the click occurred.
     * @param info  object containing information about the plot dimensions.
     */
    @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {
        Rectangle2D dataArea = info.getDataArea();
        if (dataArea.contains(x, y)) {
            for (int i = 0; i < this.subplots.size(); i++) {
=====================================================================
Found a 65 line (62 tokens) duplication in the following files: 
Starting at line 1227 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 562 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 522 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns the x-offset for the shadow effect.
     *
     * @return The offset (in Java2D units).
     *
     * @see #setShadowXOffset(double)
     */
    public double getShadowXOffset() {
        return this.shadowXOffset;
    }

    /**
     * Sets the x-offset for the shadow effect and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param offset  the offset (in Java2D units).
     *
     * @see #getShadowXOffset()
     */
    public void setShadowXOffset(double offset) {
        this.shadowXOffset = offset;
        fireChangeEvent();
    }

    /**
     * Returns the y-offset for the shadow effect.
     *
     * @return The offset (in Java2D units).
     *
     * @see #setShadowYOffset(double)
     */
    public double getShadowYOffset() {
        return this.shadowYOffset;
    }

    /**
     * Sets the y-offset for the shadow effect and sends a
     * {@link PlotChangeEvent} to all registered listeners.
     *
     * @param offset  the offset (in Java2D units).
     *
     * @see #getShadowYOffset()
     */
    public void setShadowYOffset(double offset) {
        this.shadowYOffset = offset;
        fireChangeEvent();
    }

    /**
     * Returns the amount that the section with the specified key should be
     * exploded.
     *
     * @param key  the key ({@code null} not permitted).
     *
     * @return The amount that the section with the specified key should be
     *     exploded.
     *
     * @throws IllegalArgumentException if {@code key} is {@code null}.
     *
     * @see #setExplodePercent(K, double)
     */
    public double getExplodePercent(K key) {
=====================================================================
Found a 13 line (62 tokens) duplication in the following files: 
Starting at line 3994 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 4021 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            List<Integer> mappedAxes = this.datasetToDomainAxesMap.get(index);
            if (mappedAxes == null) {
                if (axisIndex.equals(ZERO)) {
                    result.add(entry.getValue());
                }
            } else {
                if (mappedAxes.contains(axisIndex)) {
                    result.add(entry.getValue());
                }
            }
        }
        return result;
    }
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 1347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1528 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 265 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/YIntervalRenderer.java

            Point2D anchorPoint = calculateLabelAnchorPoint(
                    position.getItemLabelAnchor(), x, y, orientation);
            TextUtils.drawRotatedString(label, g2,
                    (float) anchorPoint.getX(), (float) anchorPoint.getY(),
                    position.getTextAnchor(),
                    position.getAngle(), position.getRotationAnchor());
        }
=====================================================================
Found a 14 line (62 tokens) duplication in the following files: 
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 329 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java
Starting at line 793 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            } else {
                barBase = RectangleEdge.LEFT;
            }
        } else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            } else {
                barBase = RectangleEdge.TOP;
            }
        }
        if (pass == 0 && getShadowsVisible()) {
=====================================================================
Found a 12 line (62 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 289 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1091 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

                        this.plotLines, this.legendLine, lineStroke, linePaint);
                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
            }
        }
=====================================================================
Found a 8 line (62 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

        GeneralPath area = new GeneralPath();
        area.moveTo(0.0f, -4.0f);
        area.lineTo(3.0f, -2.0f);
        area.lineTo(4.0f, 4.0f);
        area.lineTo(-4.0f, 4.0f);
        area.lineTo(-3.0f, -2.0f);
        area.closePath();
        this.legendArea = area;
=====================================================================
Found a 10 line (62 tokens) duplication in the following files: 
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java

                "Series_Stroke")));
        info = new JTextField(localizationResources.getString(
                "No_editor_implemented"));
        info.setEnabled(false);
        interior.add(info);
        button = new JButton(localizationResources.getString("Edit..."));
        button.setEnabled(false);
        interior.add(button);

        interior.add(new JLabel(localizationResources.getString(
=====================================================================
Found a 23 line (62 tokens) duplication in the following files: 
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/format/LogFormat.java
Starting at line 172 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/format/LogFormat.java

    public StringBuffer format(double number, StringBuffer toAppendTo,
            FieldPosition pos) {
        StringBuffer result = new StringBuffer();
        if (this.showBase) {
            result.append(this.baseLabel);
            result.append(this.powerLabel);
        }
        result.append(this.formatter.format(calculateLog(number)));
        return result;
    }

    /**
     * Formats the specified number as a hexadecimal string.  The decimal
     * fraction is ignored.
     *
     * @param number  the number to format.
     * @param toAppendTo  the buffer to append to (ignored here).
     * @param pos  the field position (ignored here).
     *
     * @return The string buffer.
     */
    @Override
    public StringBuffer format(long number, StringBuffer toAppendTo,
=====================================================================
Found a 56 line (62 tokens) duplication in the following files: 
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java
Starting at line 209 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 182 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Month.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Quarter.java
Starting at line 242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Year.java

    }

    /**
     * Returns the first millisecond of the day.  This will be determined
     * relative to the time zone specified in the constructor, or in the
     * calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The first millisecond of the day.
     *
     * @see #getLastMillisecond()
     */
    @Override
    public long getFirstMillisecond() {
        return this.firstMillisecond;
    }

    /**
     * Returns the last millisecond of the day.  This will be
     * determined relative to the time zone specified in the constructor, or
     * in the calendar instance passed in the most recent call to the
     * {@link #peg(Calendar)} method.
     *
     * @return The last millisecond of the day.
     *
     * @see #getFirstMillisecond()
     */
    @Override
    public long getLastMillisecond() {
        return this.lastMillisecond;
    }

    /**
     * Recalculates the start date/time and end date/time for this time period
     * relative to the supplied calendar (which incorporates a time zone).
     *
     * @param calendar  the calendar ({@code null} not permitted).
     *
     * @since 1.0.3
     */
    @Override
    public void peg(Calendar calendar) {
        this.firstMillisecond = getFirstMillisecond(calendar);
        this.lastMillisecond = getLastMillisecond(calendar);
    }

    /**
     * Returns the day preceding this one.
     * No matter what time zone and locale this instance was created with,
     * the returned instance will use the default calendar for time
     * calculations, obtained with {@link RegularTimePeriod#getCalendarInstance()}.
     *
     * @return The day preceding this one.
     */
    @Override
    public RegularTimePeriod previous() {
=====================================================================
Found a 5 line (62 tokens) duplication in the following files: 
Starting at line 525 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

        clone.seriesList = new ArrayList<>(this.seriesList.size());
        for (int i = 0; i < this.seriesList.size(); i++) {
            double[][] data = (double[][]) this.seriesList.get(i);
            double[] x = data[0];
            double[] xStart = data[1];
=====================================================================
Found a 9 line (62 tokens) duplication in the following files: 
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYTitleAnnotationTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRenderer2Test.java
Starting at line 185 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepAreaRendererTest.java
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java
Starting at line 169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYStepRendererTest.java

            s1.add(10.0, 15.5);
            s1.add(15.0, 9.5);
            s1.add(20.0, 7.5);
            dataset.addSeries(s1);

            XYSeries<String> s2 = new XYSeries<>("Series 2", true, false);
            s2.add(5.0, 5.0);
            s2.add(10.0, 15.5);
            s2.add(15.0, 9.5);
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 174 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

    public void testAutoRange3() {
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        dataset.setValue(100.0, "Row 1", "Column 1");
        dataset.setValue(200.0, "Row 1", "Column 2");
        JFreeChart chart = ChartFactory.createLineChart("Test", "Categories",
                "Value", dataset, PlotOrientation.VERTICAL, false, false,
                false);
=====================================================================
Found a 10 line (62 tokens) duplication in the following files: 
Starting at line 493 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 511 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 529 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 605 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00101 - left and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 10 line (62 tokens) duplication in the following files: 
Starting at line 547 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 566 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 623 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 642 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (62 tokens) duplication in the following files: 
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 6 line (62 tokens) duplication in the following files: 
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 9 line (62 tokens) duplication in the following files: 
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        r.setIncludeBaseInRange(true);

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-6.0, "R2", "C1");
=====================================================================
Found a 5 line (62 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/ClusteredXYBarRendererTest.java
Starting at line 1084 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 333 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java

        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[] y1Start = new double[] {1.09, 2.09, 3.09};
        double[] y1End = new double[] {1.11, 2.11, 3.11};
        double[][] data1 = new double[][] {x1, x1Start, x1End, y1, y1Start,
                y1End};
=====================================================================
Found a 13 line (62 tokens) duplication in the following files: 
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

        assertEquals(s2, s1);

        s1.add(new Task("T3", new Date(22), new Date(33)));
        assertNotEquals(s1, s2);
        s2.add(new Task("T3", new Date(22), new Date(33)));
        assertEquals(s1, s2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 17 line (62 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 519 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java

            Day d = new Day(new Date(ms));
            assertEquals(1970, d.getYear());
            assertEquals(1, d.getMonth());
            assertEquals(2, d.getDayOfMonth());
            assertEquals(ms, d.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the minute-hour constructor should use it.
     */
    @Test
    public void testDMYConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 4 line (61 tokens) duplication in the following files: 
Starting at line 589 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/Vector.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYCoordinate.java

        long temp = Double.doubleToLongBits(this.x);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.y);
        result = 37 * result + (int) (temp ^ (temp >>> 32));
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 793 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 809 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {
            years = calendar.get(Calendar.YEAR);
            months = calendar.get(Calendar.MONTH);
            days = calendar.get(Calendar.DATE);
            hours = calendar.get(Calendar.HOUR_OF_DAY);
            minutes = calendar.get(Calendar.MINUTE);
=====================================================================
Found a 16 line (61 tokens) duplication in the following files: 
Starting at line 1035 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 643 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SymbolAxis.java

                        angle = Math.PI / 2.0;
                    }
                }
                else {
                    if (edge == RectangleEdge.LEFT) {
                        anchor = TextAnchor.CENTER_RIGHT;
                        rotationAnchor = TextAnchor.CENTER_RIGHT;
                    }
                    else {
                        anchor = TextAnchor.CENTER_LEFT;
                        rotationAnchor = TextAnchor.CENTER_LEFT;
                    }
                }

                Tick tick = new NumberTick(currentTickValue, tickLabel, anchor, 
                        rotationAnchor, angle);
=====================================================================
Found a 11 line (61 tokens) duplication in the following files: 
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColumnArrangement.java

                contentSize = arrangeNN(container, g2);
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 1063 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/JFreeChart.java
Starting at line 1011 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/Plot.java

            Composite originalComposite = g2.getComposite();
            g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER,
                    this.backgroundImageAlpha));
            Rectangle2D dest = new Rectangle2D.Double(0.0, 0.0,
                    this.backgroundImage.getWidth(null),
                    this.backgroundImage.getHeight(null));
            this.backgroundImageAlignment.align(dest, chartArea);
=====================================================================
Found a 36 line (61 tokens) duplication in the following files: 
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 380 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

    public LegendItem(String label, String description, String toolTipText, 
            String urlText, Shape line, Stroke lineStroke, Paint linePaint) {

        this(label, description, toolTipText, urlText,
                /* shape visible = */ false, UNUSED_SHAPE,
                /* shape filled = */ false, Color.BLACK,
                /* shape outlined = */ false, Color.BLACK, UNUSED_STROKE,
                /* line visible = */ true, line, lineStroke, linePaint);
    }

    /**
     * Creates a new legend item.
     *
     * @param label  the label ({@code null} not permitted).
     * @param description  the description (not currently used,
     *        {@code null} permitted).
     * @param toolTipText  the tool tip text ({@code null} permitted).
     * @param urlText  the URL text ({@code null} permitted).
     * @param shapeVisible  a flag that controls whether or not the shape is
     *                      displayed.
     * @param shape  the shape ({@code null} permitted).
     * @param shapeFilled  a flag that controls whether or not the shape is
     *                     filled.
     * @param fillPaint  the fill paint ({@code null} not permitted).
     * @param shapeOutlineVisible  a flag that controls whether or not the
     *                             shape is outlined.
     * @param outlinePaint  the outline paint ({@code null} not permitted).
     * @param outlineStroke  the outline stroke ({@code null} not
     *                       permitted).
     * @param lineVisible  a flag that controls whether or not the line is
     *                     visible.
     * @param line  the line.
     * @param lineStroke  the stroke ({@code null} not permitted).
     * @param linePaint  the line paint ({@code null} not permitted).
     */
    public LegendItem(String label, String description,
=====================================================================
Found a 20 line (61 tokens) duplication in the following files: 
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

    }

    /**
     * Arranges the contents of the block, within the given constraints, and
     * returns the block size.
     *
     * @param g2  the graphics device.
     * @param constraint  the constraint ({@code null} not permitted).
     *
     * @return The block size (in Java2D units, never {@code null}).
     */
    @Override
    public Size2D arrange(Graphics2D g2, RectangleConstraint constraint) {
        RectangleConstraint cc = toContentConstraint(constraint);
        LengthConstraintType w = cc.getWidthConstraintType();
        LengthConstraintType h = cc.getHeightConstraintType();
        Size2D contentSize = null;
        if (w == LengthConstraintType.NONE) {
            if (h == LengthConstraintType.NONE) {
                contentSize = new Size2D(getWidth(), getHeight());
=====================================================================
Found a 28 line (61 tokens) duplication in the following files: 
Starting at line 3126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2735 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                    space = xAxis.reserveSpace(g2, this, plotArea, edge, space);
                }
            }
        }

        return space;

    }

    /**
     * Calculates the space required for the range axis/axes.
     *
     * @param g2  the graphics device.
     * @param plotArea  the plot area.
     * @param space  a carrier for the result ({@code null} permitted).
     *
     * @return The required space.
     */
    protected AxisSpace calculateRangeAxisSpace(Graphics2D g2,
            Rectangle2D plotArea, AxisSpace space) {

        if (space == null) {
            space = new AxisSpace();
        }

        // reserve some space for the range axis...
        if (this.fixedRangeAxisSpace != null) {
            if (this.orientation.isHorizontal()) {
=====================================================================
Found a 28 line (61 tokens) duplication in the following files: 
Starting at line 3230 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2823 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (Entry<Integer, CategoryItemRenderer> entry : this.renderers.entrySet()) {
            if (entry.getValue() != null) {
                entry.getValue().receive(visitor);
            }            
        }
        // and finally this plot
        visitor.visit(this);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).
     * <P>
     * At your option, you may supply an instance of {@link PlotRenderingInfo}.
     * If you do, it will be populated with information about the drawing,
     * including various plot dimensions and tooltip info.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axes) should
     *              be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param state  collects info as the chart is drawn (possibly
     *               {@code null}).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo state) {
=====================================================================
Found a 53 line (61 tokens) duplication in the following files: 
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the angle used to calculate the anchor point.
     *
     * @return The angle (in degrees).
     *
     * @see #setAngle(double)
     * @see #getRadius()
     */
    public double getAngle() {
        return this.angle;
    }

    /**
     * Sets the angle used to calculate the anchor point and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param angle  the angle (in degrees).
     *
     * @see #getAngle()
     * @see #setRadius(double)
     */
    public void setAngle(double angle) {
        this.angle = angle;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the radius used to calculate the anchor point.  This is
     * specified as a percentage relative to the dial's framing rectangle.
     *
     * @return The radius.
     *
     * @see #setRadius(double)
     * @see #getAngle()
     */
    public double getRadius() {
        return this.radius;
    }

    /**
     * Sets the radius used to calculate the anchor point and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param radius  the radius (as a percentage of the dial's framing
     *                rectangle).
     *
     * @see #getRadius()
     * @see #setAngle(double)
     */
    public void setRadius(double radius) {
=====================================================================
Found a 31 line (61 tokens) duplication in the following files: 
Starting at line 1145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java

        return anchor.getAnchorPoint(anchorRect);

    }

    /**
     * Returns a legend item for a series.  This default implementation will
     * return {@code null} if {@link #isSeriesVisible(int)} or
     * {@link #isSeriesVisibleInLegend(int)} returns {@code false}.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return The legend item (possibly {@code null}).
     *
     * @see #getLegendItems()
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {

        CategoryPlot p = getPlot();
        if (p == null) {
            return null;
        }

        // check that a legend item needs to be displayed...
        if (!isSeriesVisible(series) || !isSeriesVisibleInLegend(series)) {
            return null;
        }

        CategoryDataset dataset = p.getDataset(datasetIndex);
        String label = this.legendItemLabelGenerator.generateLabel(dataset,
=====================================================================
Found a 68 line (61 tokens) duplication in the following files: 
Starting at line 406 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 425 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        fireChangeEvent();
    }

    /**
     * Returns the fallback position for positive item labels that don't fit
     * within a bar.
     *
     * @return The fallback position ({@code null} possible).
     *
     * @see #setPositiveItemLabelPositionFallback(ItemLabelPosition)
     */
    public ItemLabelPosition getPositiveItemLabelPositionFallback() {
        return this.positiveItemLabelPositionFallback;
    }

    /**
     * Sets the fallback position for positive item labels that don't fit
     * within a bar, and sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param position  the position ({@code null} permitted).
     *
     * @see #getPositiveItemLabelPositionFallback()
     */
    public void setPositiveItemLabelPositionFallback(
            ItemLabelPosition position) {
        this.positiveItemLabelPositionFallback = position;
        fireChangeEvent();
    }

    /**
     * Returns the fallback position for negative item labels that don't fit
     * within a bar.
     *
     * @return The fallback position ({@code null} possible).
     *
     * @see #setPositiveItemLabelPositionFallback(ItemLabelPosition)
     */
    public ItemLabelPosition getNegativeItemLabelPositionFallback() {
        return this.negativeItemLabelPositionFallback;
    }

    /**
     * Sets the fallback position for negative item labels that don't fit
     * within a bar, and sends a {@link RendererChangeEvent} to all registered
     * listeners.
     *
     * @param position  the position ({@code null} permitted).
     *
     * @see #getNegativeItemLabelPositionFallback()
     */
    public void setNegativeItemLabelPositionFallback(
            ItemLabelPosition position) {
        this.negativeItemLabelPositionFallback = position;
        fireChangeEvent();
    }

    /**
     * Returns the flag that controls whether or not the base value for the
     * bars is included in the range calculated by
     * {@link #findRangeBounds(CategoryDataset)}.
     *
     * @return {@code true} if the base is included in the range, and
     *         {@code false} otherwise.
     *
     * @see #setIncludeBaseInRange(boolean)
     */
    public boolean getIncludeBaseInRange() {
=====================================================================
Found a 31 line (61 tokens) duplication in the following files: 
Starting at line 257 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/HighLowRenderer.java
Starting at line 373 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java

        }
        else {
            return null;
        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        double x = dataset.getXValue(series, item);
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 513 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/util/AttrStringUtils.java

                    textAnchor);
            float[] rotateAdj = deriveRotationAnchorOffsets(g2, text, 
                    rotationAnchor);
            drawRotatedString(text, g2, x + textAdj[0], y + textAdj[1],
                    angle, x + textAdj[0] + rotateAdj[0],
                    y + textAdj[1] + rotateAdj[1]);
        }
=====================================================================
Found a 13 line (61 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

    public static double[] getOLSRegression(double[][] data) {

        int n = data.length;
        if (n < 2) {
            throw new IllegalArgumentException("Not enough data.");
        }

        double sumX = 0;
        double sumY = 0;
        double sumXX = 0;
        double sumXY = 0;
        for (int i = 0; i < n; i++) {
            double x = data[i][0];
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 390 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java
Starting at line 415 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java

        c.set(Calendar.WEEK_OF_YEAR, this.week);
        c.set(Calendar.DAY_OF_WEEK, c.getFirstDayOfWeek());
        c.set(Calendar.HOUR, 0);
        c.set(Calendar.MINUTE, 0);
        c.set(Calendar.SECOND, 0);
        c.set(Calendar.MILLISECOND, 0);
        return c.getTimeInMillis();
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 1051 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1060 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1095 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java
Starting at line 1104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/DateAxisTest.java

        axis.setTickMarkPosition(DateTickMarkPosition.MIDDLE);

        axis.setRange(d0, end);
        psd = axis.previousStandardDate(d0, unit);
        nsd = unit.addToDate(psd, TimeZone.getDefault());
        assertTrue(psd.getTime() < d0.getTime());
        assertTrue(nsd.getTime() >= d0.getTime());
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 222 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 540 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 559 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01100
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 616 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10010 - right and top only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 635 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(33.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10100 - top and left only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 357 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 675 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(12.0, size.height, EPSILON);

        // TBLRC
        // 11000 - top and bottom only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 725 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11011
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 407 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 704 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(21.0, size.width, EPSILON);
        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11101
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (61 tokens) duplication in the following files: 
Starting at line 971 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1054 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1080 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1169 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

    public void testGetDomainAxisForDataset() {
        CategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        CategoryAxis xAxis = new CategoryAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        CategoryItemRenderer renderer = new BarRenderer();
        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
=====================================================================
Found a 16 line (61 tokens) duplication in the following files: 
Starting at line 1065 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        dataset2.setValue(1, "R1", "C1");
        
        // we should be able to give a dataset an arbitrary index
        plot.setDataset(99, dataset2);
        assertEquals(2, plot.getDatasetCount());
        assertEquals(dataset2, plot.getDataset(99));
        
        assertEquals(0, plot.indexOf(dataset));
        assertEquals(99, plot.indexOf(dataset2));
    }
    
    /**
     * Tests for the getDomainAxis() and getRangeAxis() methods.
     */
    @Test
    public void testAxisIndices() {
=====================================================================
Found a 9 line (61 tokens) duplication in the following files: 
Starting at line 277 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java

        BarRenderer r = new BarRenderer();
        assertNull(r.findRangeBounds(null));

        // an empty dataset should return a null range
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        assertNull(r.findRangeBounds(dataset));

        dataset.addValue(1.0, "R1", "C1");
        assertEquals(new Range(0.0, 1.0), r.findRangeBounds(dataset));
=====================================================================
Found a 12 line (61 tokens) duplication in the following files: 
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java

        SlidingCategoryDataset<String, String> d2 = new SlidingCategoryDataset<>(u2, 0, 5);
        assertEquals(d1, d2);

        d1.setFirstCategoryIndex(1);
        assertNotEquals(d1, d2);
        d2.setFirstCategoryIndex(1);
        assertEquals(d1, d2);

        d1.setMaximumCategoryCount(99);
        assertNotEquals(d1, d2);
        d2.setMaximumCategoryCount(99);
        assertEquals(d1, d2);
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        DefaultCategoryDataset<String, String> u1 = new DefaultCategoryDataset<>();
        u1.addValue(1.0, "R1", "C1");
        u1.addValue(2.0, "R1", "C2");
        SlidingCategoryDataset<String, String> d1 = new SlidingCategoryDataset<>(u1, 0, 5);
        SlidingCategoryDataset<String, String> d2;
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimePeriodValuesTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 482 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        TimePeriodValues<String> s1 = new TimePeriodValues<>("A test");
        s1.add(new Year(2000), 13.75);
        s1.add(new Year(2001), 11.90);
        s1.add(new Year(2002), null);
        s1.add(new Year(2005), 19.32);
        s1.add(new Year(2007), 16.89);
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new Date[] {new Date(123L)}, new double[1], new double[1],
                new double[1], new double[1], new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[1]);
=====================================================================
Found a 12 line (61 tokens) duplication in the following files: 
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        XIntervalSeries<String> s1 = new XIntervalSeries<>("Series 1");
        s1.add(1.0, 1.0, 1.0, 2.0);
        s1.add(2.0, 2.0, 2.0, 3.0);
        s1.add(3.0, 3.0, 3.0, 4.0);
        assertEquals(0, s1.indexOf(1.0));
    }

    /**
     * A check for the indexOf() method for an unsorted series.
     */
    @Test
    public void testIndexOf2() {
=====================================================================
Found a 18 line (61 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        s1.add(3.0, 3.0, 3.0, 3.0);
        assertEquals(3, s1.getItemCount());

        s1.remove(2.0);
        assertEquals(3.0, s1.getX(1));

        s1.remove(1.0);
        assertEquals(3.0, s1.getX(0));
    }

    private static final double EPSILON = 0.0000000001;

    /**
     * When items are added with duplicate x-values, we expect them to remain
     * in the order they were added.
     */
    @Test
    public void testAdditionOfDuplicateXValues() {
=====================================================================
Found a 8 line (60 tokens) duplication in the following files: 
Starting at line 1326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1341 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1438 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

        if (edge == RectangleEdge.TOP) {
            AffineTransform t = AffineTransform.getRotateInstance(
                    getLabelAngle(), labelBounds.getCenterX(),
                    labelBounds.getCenterY());
            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
            labelBounds = rotatedLabelBounds.getBounds2D();
            double labelx = labelLocationX(this.labelLocation, dataArea);
            double labely = state.getCursor() - insets.getBottom()
=====================================================================
Found a 12 line (60 tokens) duplication in the following files: 
Starting at line 721 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 505 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

        double axisMax = this.timeline.toTimelineValue(range.getUpperMillis());

        double min = 0.0;
        double max = 0.0;
        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            min = area.getMaxY();
            max = area.getY();
        }
=====================================================================
Found a 15 line (60 tokens) duplication in the following files: 
Starting at line 693 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 840 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java

        double upperBoundVal = range.getUpperBound();

        //get log10 version of lower bound and round to integer:
        int iBegCount = (int) Math.rint(switchedLog10(lowerBoundVal));
        //get log10 version of upper bound and round to integer:
        int iEndCount = (int) Math.rint(switchedLog10(upperBoundVal));

        if (iBegCount == iEndCount && iBegCount > 0
                && Math.pow(10, iBegCount) > lowerBoundVal) {
              //only 1 power of 10 value, it's > 0 and its resulting
              // tick value will be larger than lower bound of data
            --iBegCount;       //decrement to generate more ticks
        }

        double currentTickValue;
=====================================================================
Found a 20 line (60 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 350 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 1010 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

    }

    /**
     * Adjusts the axis range to match the data range that the axis is
     * required to display.
     */
    @Override
    protected void autoAdjustRange() {
        Plot plot = getPlot();
        if (plot == null) {
            return;  // no plot, no data
        }

        if (plot instanceof ValueAxisPlot) {
            ValueAxisPlot vap = (ValueAxisPlot) plot;

            Range r = vap.getDataRange(this);
            if (r == null) {
                r = getDefaultAutoRange();
            }
=====================================================================
Found a 9 line (60 tokens) duplication in the following files: 
Starting at line 391 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartUtils.java
Starting at line 418 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartUtils.java

    public static void writeChartAsJPEG(OutputStream out, JFreeChart chart,
            int width, int height, ChartRenderingInfo info)
            throws IOException {

        Args.nullNotPermitted(out, "out");
        Args.nullNotPermitted(chart, "chart");
        BufferedImage image = chart.createBufferedImage(width, height,
                BufferedImage.TYPE_INT_RGB, info);
        EncoderUtil.writeBufferedImage(image, ImageFormat.JPEG, out);
=====================================================================
Found a 12 line (60 tokens) duplication in the following files: 
Starting at line 88 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/ArrayUtils.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/ArrayUtils.java
Starting at line 1421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java
Starting at line 770 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java

            Object[] array2) {
        if (array1 == null) {
            return (array2 == null);
        }
        if (array2 == null) {
            return false;
        }
        if (array1.length != array2.length) {
            return false;
        }
        for (int i = 0; i < array1.length; i++) {
            if (array1[i] == null) {
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 580 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/SerialUtils.java
Starting at line 629 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/SerialUtils.java

    public static void writeMapOfPaint(Map<Integer, Paint> map, ObjectOutputStream stream) throws IOException {
        Args.nullNotPermitted(stream, "stream");
        if (map != null) {
            stream.writeBoolean(false);
            int keyCount = map.keySet().size();
            stream.writeInt(keyCount);
            for (Integer key : map.keySet()) {
=====================================================================
Found a 9 line (60 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 562 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

                            - this.stripWidth, ww, this.stripWidth);
                    g2.setPaint(p);
                    g2.fill(r);
                }
                if (isStripOutlineVisible()) {
                    g2.setPaint(this.stripOutlinePaint);
                    g2.setStroke(this.stripOutlineStroke);
                    g2.draw(new Rectangle2D.Double(target.getMinX(),
                            target.getMaxY() - this.stripWidth,
=====================================================================
Found a 42 line (60 tokens) duplication in the following files: 
Starting at line 1968 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4898 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Returns the fixed legend items, if any.
     *
     * @return The legend items (possibly {@code null}).
     *
     * @see #setFixedLegendItems(LegendItemCollection)
     */
    public LegendItemCollection getFixedLegendItems() {
        return this.fixedLegendItems;
    }

    /**
     * Sets the fixed legend items for the plot.  Leave this set to
     * {@code null} if you prefer the legend items to be created
     * automatically.
     *
     * @param items  the legend items ({@code null} permitted).
     *
     * @see #getFixedLegendItems()
     */
    public void setFixedLegendItems(LegendItemCollection items) {
        this.fixedLegendItems = items;
        fireChangeEvent();
    }

    /**
     * Returns the legend items for the plot.  By default, this method creates
     * a legend item for each series in each of the datasets.  You can change
     * this behaviour by overriding this method.
     *
     * @return The legend items.
     */
    @Override
    public LegendItemCollection getLegendItems() {
        if (this.fixedLegendItems != null) {
            return this.fixedLegendItems;
        }
        LegendItemCollection result = new LegendItemCollection();
        // get the legend items for the datasets...
        for (CategoryDataset<R, C> dataset: this.datasets.values()) {
=====================================================================
Found a 20 line (60 tokens) duplication in the following files: 
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PinNeedle.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/ShipNeedle.java

        shape.add(new Area(pointer));
        if ((rotate != null) && (angle != 0)) {
            /// we have rotation
            getTransform().setToRotation(angle, rotate.getX(), rotate.getY());
            shape.transform(getTransform());
        }

        defaultDisplay(g2, shape);

    }

    /**
     * Tests another object for equality with this object.
     *
     * @param obj  the object to test ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
=====================================================================
Found a 11 line (60 tokens) duplication in the following files: 
Starting at line 469 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/MultiplePiePlot.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/MultiplePiePlot.java

                Comparable key = this.dataset.getColumnKey(c);
                Paint p = piePlot.getSectionPaint(key);
                if (p == null) {
                    p = (Paint) this.sectionPaints.get(key);
                    if (p == null) {
                        p = getDrawingSupplier().getNextPaint();
                    }
                }
                this.sectionPaints.put(key, p);
            }
        }
=====================================================================
Found a 10 line (60 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 850 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 487 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 604 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 489 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

                urlText, shape, paint, outlineStroke, outlinePaint);
        result.setLabelFont(lookupLegendTextFont(series));
        Paint labelPaint = lookupLegendTextPaint(series);
        if (labelPaint != null) {
            result.setLabelPaint(labelPaint);
        }
        result.setDataset(dataset);
        result.setDatasetIndex(datasetIndex);
        result.setSeriesKey(dataset.getRowKey(series));
        result.setSeriesIndex(series);
=====================================================================
Found a 16 line (60 tokens) duplication in the following files: 
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/GroupedStackedBarRenderer.java
Starting at line 284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java
Starting at line 793 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        if (orientation == PlotOrientation.HORIZONTAL) {
            if (positive && inverted || !positive && !inverted) {
                barBase = RectangleEdge.RIGHT;
            }
            else {
                barBase = RectangleEdge.LEFT;
            }
        }
        else {
            if (positive && !inverted || !positive && inverted) {
                barBase = RectangleEdge.BOTTOM;
            }
            else {
                barBase = RectangleEdge.TOP;
            }
        }
=====================================================================
Found a 39 line (60 tokens) duplication in the following files: 
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java
Starting at line 343 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

        super();
    }

    /**
     * Returns the range of values from the specified dataset.  For this
     * renderer, this is equivalent to calling
     * {@code findRangeBounds(dataset, true)}.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range (or {@code null} if the dataset is
     *         {@code null} or empty).
     */
    @Override
    public Range findRangeBounds(CategoryDataset dataset) {
        return findRangeBounds(dataset, true);
    }

    /**
     * Draws the bar for a single (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
            int pass) {

         if (dataset instanceof IntervalCategoryDataset) {
=====================================================================
Found a 34 line (60 tokens) duplication in the following files: 
Starting at line 235 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 675 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        return (pass == 1);
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }

        // first pass draws the shading
        if (pass == 0) {
=====================================================================
Found a 9 line (60 tokens) duplication in the following files: 
Starting at line 222 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java

        int itemCount = dataset.getItemCount(series);
        double x2 = dataset.getXValue(series, Math.min(item + 1,
                itemCount - 1));
        double y2 = dataset.getYValue(series, Math.min(item + 1,
                itemCount - 1));
        if (Double.isNaN(y2)) {
            y2 = 0.0;
        }
        double[] stack2 = getStackValues(tdataset, series, Math.min(item + 1,
=====================================================================
Found a 31 line (60 tokens) duplication in the following files: 
Starting at line 409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 670 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java

        }
        return result;
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 31 line (60 tokens) duplication in the following files: 
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java

        fireChangeEvent();
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain (horizontal) axis.
     * @param rangeAxis  the range (vertical) axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 10 line (60 tokens) duplication in the following files: 
Starting at line 279 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 1055 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

                    getLegendShape(), fillPaint);
            result.setLabelFont(lookupLegendTextFont(series));
            Paint labelPaint = lookupLegendTextPaint(series);
            if (labelPaint != null) {
                result.setLabelPaint(labelPaint);
            }
            result.setSeriesKey(dataset.getSeriesKey(series));
            result.setSeriesIndex(series);
            result.setDataset(dataset);
            result.setDatasetIndex(datasetIndex);
=====================================================================
Found a 6 line (60 tokens) duplication in the following files: 
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 354 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

    public long getFirstMillisecond(Calendar calendar) {
        int year = this.day.getYear();
        int month = this.day.getMonth() - 1;
        int d = this.day.getDayOfMonth();
        calendar.clear();
        calendar.set(year, month, d, this.hour, this.minute, this.second);
=====================================================================
Found a 39 line (60 tokens) duplication in the following files: 
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimePeriodValue.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimeSeriesDataItem.java

    public TimePeriod getPeriod() {
        return this.period;
    }

    /**
     * Returns the value.
     *
     * @return The value (possibly {@code null}).
     *
     * @see #setValue(Number)
     */
    public Number getValue() {
        return this.value;
    }

    /**
     * Sets the value for this data item.
     *
     * @param value  the new value ({@code null} permitted).
     *
     * @see #getValue()
     */
    public void setValue(Number value) {
        this.value = value;
    }

    /**
     * Tests this object for equality with the target object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (!(obj instanceof TimePeriodValue)) {
=====================================================================
Found a 42 line (60 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

        Args.requireInRange(series, "series", 0, this.seriesKeys.size() - 1);
        return this.seriesKeys.get(series);
    }

    /**
     * Returns the index of the series with the specified key, or -1 if there
     * is no such series in the dataset.
     *
     * @param seriesKey  the series key ({@code null} permitted).
     *
     * @return The index, or -1.
     */
    @Override
    public int indexOf(S seriesKey) {
        return this.seriesKeys.indexOf(seriesKey);
    }

    /**
     * Returns the order of the domain (x-) values in the dataset.  In this
     * implementation, we cannot guarantee that the x-values are ordered, so
     * this method returns {@code DomainOrder.NONE}.
     *
     * @return {@code DomainOrder.NONE}.
     */
    @Override
    public DomainOrder getDomainOrder() {
        return DomainOrder.NONE;
    }

    /**
     * Returns the number of items in the specified series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     *
     * @return The item count.
     *
     * @throws IllegalArgumentException if {@code series} is not in the
     *     specified range.
     */
    @Override
    public int getItemCount(int series) {
=====================================================================
Found a 42 line (60 tokens) duplication in the following files: 
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYInterval.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YInterval.java

    }

    /**
     * Returns the y-value.
     *
     * @return The y-value.
     */
    public double getY() {
        return this.y;
    }

    /**
     * Returns the lower bound of the y-interval.
     *
     * @return The lower bound of the y-interval.
     */
    public double getYLow() {
        return this.yLow;
    }

    /**
     * Returns the upper bound of the y-interval.
     *
     * @return The upper bound of the y-interval.
     */
    public double getYHigh() {
        return this.yHigh;
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof XYInterval)) {
=====================================================================
Found a 8 line (60 tokens) duplication in the following files: 
Starting at line 244 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        LogAxis axis = new LogAxis("X");
        axis.setRange(0.0, 10.0);
        axis.setLowerBound(5.0);
        assertEquals(5.0, axis.getLowerBound(), EPSILON);
        axis.setLowerBound(10.0);
        assertEquals(10.0, axis.getLowerBound(), EPSILON);
        assertEquals(11.0, axis.getUpperBound(), EPSILON);
    }
=====================================================================
Found a 18 line (60 tokens) duplication in the following files: 
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/ValueAxisTest.java

        NumberAxis a2 = CloneUtils.clone(a1);
        assertNotSame(a1, a2);
        assertSame(a1.getClass(), a2.getClass());
        assertEquals(a1, a2);
    }

    /**
     * Confirm that the equals method can distinguish all the required fields.
     */
    @Test
    public void testEquals() {

        NumberAxis a1 = new NumberAxis("Test");
        NumberAxis a2 = new NumberAxis("Test");
        assertEquals(a1, a2);

        //private boolean autoRangeIncludesZero;
        a1.setAutoRangeIncludesZero(false);
=====================================================================
Found a 10 line (60 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 211 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00011 - right and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (60 tokens) duplication in the following files: 
Starting at line 229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01011 - bottom, right and center
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3));
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/StandardEntityCollectionTest.java

    public void testCloning() throws CloneNotSupportedException {
        PieSectionEntity<String> e1 = new PieSectionEntity<>(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), 
                new DefaultPieDataset<String>(), 0, 1, "Key", "ToolTip", "URL");
        StandardEntityCollection c1 = new StandardEntityCollection();
        c1.add(e1);
        StandardEntityCollection c2 = CloneUtils.clone(c1);
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 6 line (60 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
=====================================================================
Found a 13 line (60 tokens) duplication in the following files: 
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.setDomainGridlinePosition(CategoryAnchor.END);
        assertEquals(plot1, plot2);

        // domainGridlineStroke
        Stroke stroke = new BasicStroke(2.0f);
        plot1.setDomainGridlineStroke(stroke);
        assertNotEquals(plot1, plot2);
        plot2.setDomainGridlineStroke(stroke);
        assertEquals(plot1, plot2);

        // domainGridlinePaint
        plot1.setDomainGridlinePaint(new GradientPaint(1.0f, 2.0f, Color.BLUE,
                3.0f, 4.0f, Color.YELLOW));
=====================================================================
Found a 11 line (60 tokens) duplication in the following files: 
Starting at line 337 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot2.addRangeMarker(new ValueMarker(5.0), Layer.BACKGROUND);
        assertEquals(plot1, plot2);

        // foreground range markers...
        plot1.addRangeMarker(1, new ValueMarker(4.0), Layer.FOREGROUND);
        assertNotEquals(plot1, plot2);
        plot2.addRangeMarker(1, new ValueMarker(4.0), Layer.FOREGROUND);
        assertEquals(plot1, plot2);

        // background range markers...
        plot1.addRangeMarker(1, new ValueMarker(5.0), Layer.BACKGROUND);
=====================================================================
Found a 3 line (60 tokens) duplication in the following files: 
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/IntervalBarRendererTest.java
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/IntervalBarRendererTest.java

            double[][] starts = new double[][] {{0.1, 0.2, 0.3},
                    {0.3, 0.4, 0.5}};
            double[][] ends = new double[][] {{0.5, 0.6, 0.7}, {0.7, 0.8, 0.9}};
=====================================================================
Found a 14 line (60 tokens) duplication in the following files: 
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LevelRendererTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/ScatterRendererTest.java

        LevelRenderer r2 = CloneUtils.clone(r1);
        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);

        assertTrue(checkIndependence(r1, r2));
        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * Check that this class implements PublicCloneable.
     */
    @Test
    public void testPublicCloneable() {
=====================================================================
Found a 14 line (60 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 148 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYBarRendererTest.java

        assertEquals(r1, r2);
    }

    /**
     * Check that the renderer is calculating the range bounds correctly.
     */
    @Test
    public void testFindRangeBounds() {
        TableXYDataset<String> dataset
                = RendererXYPackageUtils.createTestTableXYDataset();
        JFreeChart chart = ChartFactory.createStackedXYAreaChart(
                "Test Chart", "X", "Y", dataset, PlotOrientation.VERTICAL,
                false, false, false);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 5 line (60 tokens) duplication in the following files: 
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 483 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    public void testEquals() {

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
=====================================================================
Found a 7 line (60 tokens) duplication in the following files: 
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java

    public void testEquals() {
        DefaultBoxAndWhiskerCategoryDataset<String, String> d1
                = new DefaultBoxAndWhiskerCategoryDataset<>();
        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0,
                new ArrayList<>()), "ROW1", "COLUMN1");
        DefaultBoxAndWhiskerCategoryDataset<String, String> d2
                = new DefaultBoxAndWhiskerCategoryDataset<>();
=====================================================================
Found a 6 line (60 tokens) duplication in the following files: 
Starting at line 369 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 375 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

        m = (Minute) m.next();
        assertEquals(2000, m.getHour().getYear());
        assertEquals(12, m.getHour().getMonth());
        assertEquals(12, m.getHour().getDayOfMonth());
        assertEquals(1, m.getHour().getHour());
        assertEquals(31, m.getMinute());
=====================================================================
Found a 6 line (60 tokens) duplication in the following files: 
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 420 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

            m = (Minute) m.next();
            assertEquals(1970, m.getHour().getYear());
            assertEquals(1, m.getHour().getMonth());
            assertEquals(1, m.getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getHour().getHour());
            assertEquals(1, m.getMinute());
=====================================================================
Found a 8 line (60 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java

    public void testEquals() {
        DefaultTableXYDataset<String> d1 = new DefaultTableXYDataset<>();
        XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
        s1.add(1.0, 1.1);
        s1.add(2.0, 2.2);
        d1.addSeries(s1);

        DefaultTableXYDataset<String> d2 = new DefaultTableXYDataset<>();
=====================================================================
Found a 31 line (59 tokens) duplication in the following files: 
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/TextAnnotation.java
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextFragment.java

        result = 37 * result + this.textAnchor.hashCode();
        return result;
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 465 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 484 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 502 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 610 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 629 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 650 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 668 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

                    result.remove(result.size() - 1);
                    result.add(new CycleBoundTick(
                        this.boundMappedToLastCycle, lastTick.getNumber(),
                        lastTick.getText(), anchor, anchor,
                        lastTick.getAngle())
                    );
                    this.internalMarkerWhenTicksOverlap = true;
                    anchor = isInverted()
                        ? TextAnchor.BOTTOM_RIGHT : TextAnchor.TOP_RIGHT;
=====================================================================
Found a 4 line (59 tokens) duplication in the following files: 
Starting at line 750 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java
Starting at line 914 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogarithmicAxis.java

                    currentTickValue = (i >= 0)
                        ? Math.pow(10, i) + (Math.pow(10, i) * j)
                        : -(Math.pow(10, -i) - (Math.pow(10, -i - 1) * j));
                    if (!zeroTickFlag) {  // did not do zero tick last iteration
=====================================================================
Found a 11 line (59 tokens) duplication in the following files: 
Starting at line 95 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

                throw new RuntimeException("Not implemented.");
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not implemented.");
            }
        }
        else if (w == LengthConstraintType.FIXED) {
            if (h == LengthConstraintType.NONE) {
                return arrangeFN(container, g2, constraint);
            }
            else if (h == LengthConstraintType.FIXED) {
=====================================================================
Found a 13 line (59 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 251 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 271 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

    protected Size2D arrangeRR(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {

        // first arrange without constraints, and see if this fits within
        // the required ranges...
        Size2D s1 = arrangeNN(container, g2);
        if (constraint.getWidthRange().contains(s1.width)) {
            return s1;  // TODO: we didn't check the height yet
        }
        else {
            RectangleConstraint c = constraint.toFixedWidth(
                    constraint.getWidthRange().getUpperBound());
            return arrangeFR(container, g2, c);
=====================================================================
Found a 40 line (59 tokens) duplication in the following files: 
Starting at line 280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/CenterArrangement.java
Starting at line 384 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/FlowArrangement.java

        return new Size2D(s.width, s.height);
    }

    /**
     * Arranges the blocks with no width constraint and a fixed height
     * constraint.  This puts all blocks into a single row.
     *
     * @param container  the container.
     * @param g2  the graphics device.
     * @param constraint  the constraint.
     *
     * @return The size after the arrangement.
     */
    protected Size2D arrangeNF(BlockContainer container, Graphics2D g2,
                               RectangleConstraint constraint) {
        // TODO: for now we are ignoring the height constraint
        return arrangeNN(container, g2);
    }

    /**
     * Clears any cached information.
     */
    @Override
    public void clear() {
        // no action required.
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof CenterArrangement)) {
=====================================================================
Found a 13 line (59 tokens) duplication in the following files: 
Starting at line 3847 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3729 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (r == null) {
            return;
        }

        Collection<Marker> markers = getRangeMarkers(index, layer);
        ValueAxis axis = getRangeAxisForDataset(index);
        if (markers != null && axis != null) {
            for (Marker marker : markers) {
                r.drawRangeMarker(g2, this, axis, marker, dataArea);
            }
        }

    }
=====================================================================
Found a 17 line (59 tokens) duplication in the following files: 
Starting at line 589 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 461 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java

    }

    /**
     * Handles a 'click' on the plot.
     *
     * @param x  x-coordinate of the click.
     * @param y  y-coordinate of the click.
     * @param info  information about the plot's dimensions.
     *
     */
    @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {

        Rectangle2D dataArea = info.getDataArea();
        if (dataArea.contains(x, y)) {
            for (int i = 0; i < this.subplots.size(); i++) {
                CategoryPlot subplot = (CategoryPlot) this.subplots.get(i);
=====================================================================
Found a 32 line (59 tokens) duplication in the following files: 
Starting at line 308 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java

        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the parent state.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);

        // calculate the data area...
        AxisSpace space = calculateAxisSpace(g2, area);
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 2269 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 473 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/RingPlot.java

        else if (this.direction == Rotation.ANTICLOCKWISE) {
            angle1 = state.getLatestAngle();
            angle2 = angle1 + value / state.getTotal() * 360.0;
        }
        else {
            throw new IllegalStateException("Rotation type not recognised.");
        }

        double angle = (angle2 - angle1);
        if (Math.abs(angle) > getMinimumArcAngleToDraw()) {
=====================================================================
Found a 33 line (59 tokens) duplication in the following files: 
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java
Starting at line 676 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }

        // first pass draws the shading
        if (pass == 0) {
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 539 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 399 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 208 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 659 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1092 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

                result.setLabelFont(lookupLegendTextFont(series));
                Paint labelPaint = lookupLegendTextPaint(series);
                if (labelPaint != null) {
                    result.setLabelPaint(labelPaint);
                }
                result.setDataset(dataset);
                result.setDatasetIndex(datasetIndex);
                result.setSeriesKey(dataset.getSeriesKey(series));
                result.setSeriesIndex(series);
=====================================================================
Found a 11 line (59 tokens) duplication in the following files: 
Starting at line 966 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java
Starting at line 470 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYShapeRenderer.java

                if (this.drawOutlines) {
                    if (getUseOutlinePaint()) {
                        g2.setPaint(getItemOutlinePaint(series, item));
                    }
                    else {
                        g2.setPaint(getItemPaint(series, item));
                    }
                    g2.setStroke(getItemOutlineStroke(series, item));
                    g2.draw(shape);
                }
            }
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java

        JTextField info = new JTextField(localizationResources.getString(
                "No_editor_implemented"));
        info.setEnabled(false);
        interior.add(info);
        button = new JButton(localizationResources.getString("Edit..."));
        button.setEnabled(false);
        interior.add(button);

        interior.add(new JLabel(localizationResources.getString(
=====================================================================
Found a 11 line (59 tokens) duplication in the following files: 
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 495 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 536 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getValue(R rowKey, C columnKey) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getValue(r, c + this.firstCategoryIndex);
=====================================================================
Found a 8 line (59 tokens) duplication in the following files: 
Starting at line 434 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/ComparableObjectSeries.java
Starting at line 952 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeries.java

            ComparableObjectItem item = getDataItem(count / 2);
            result = 29 * result + item.hashCode();
        }
        result = 29 * result + this.maximumItemCount;
        result = 29 * result + (this.autoSort ? 1 : 0);
        result = 29 * result + (this.allowDuplicateXValues ? 1 : 0);
        return result;
    }
=====================================================================
Found a 17 line (59 tokens) duplication in the following files: 
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultTableXYDataset.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/VectorSeriesCollection.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java

    public XYSeries<S> getSeries(int series) {
        Args.requireInRange(series, "series", 0, this.data.size() - 1);
        return this.data.get(series);
    }

    /**
     * Returns the key for a series.
     *
     * @param series  the series (zero-based index).
     *
     * @return The key for a series.
     */
    @Override
    public S getSeriesKey(int series) {
        // check arguments...delegated
        return getSeries(series).getKey();
    }
=====================================================================
Found a 5 line (59 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

    private static JFreeChart createAreaChart() {
        Number[][] data = new Integer[][] {{-3, -2}, {-1, 1}, {2, 3}};
        CategoryDataset<String, String> dataset 
                = DatasetUtils.createCategoryDataset("S", "C", data);
        return ChartFactory.createAreaChart("Area Chart", "Domain", "Range",
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 537 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 546 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 556 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 565 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 575 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 585 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 681 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 613 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 622 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 641 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10010 - right and top only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 5 line (59 tokens) duplication in the following files: 
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemCollectionTest.java
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                "ToolTip", "URL", true,
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true, Color.RED,
                true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true,
                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 17 line (59 tokens) duplication in the following files: 
Starting at line 454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java
Starting at line 474 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java

        p1.setLegendLabelGenerator(generator);
        PiePlot p2 = CloneUtils.clone(p1);
        assertNotSame(p1, p2);
        assertSame(p1.getClass(), p2.getClass());
        assertEquals(p1, p2);

        // change the generator and make sure it only affects p1
        generator.getNumberFormat().setMinimumFractionDigits(2);
        assertNotEquals(p1, p2);
    }

    /**
     * Check cloning of the legendLabelToolTipGenerator field.
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning_LegendLabelToolTipGenerator() throws CloneNotSupportedException {
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 1076 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testGetDomainAxisForDataset() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 249 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 267 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java
Starting at line 303 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/ChartPanelTest.java

    public void test2502355_zoomInDomain() {
        DefaultXYDataset<String> dataset = new DefaultXYDataset<>();
        JFreeChart chart = ChartFactory.createXYLineChart("TestChart", "X",
                "Y", dataset, PlotOrientation.VERTICAL, false, false, false);
        XYPlot<?> plot = (XYPlot<?>) chart.getPlot();
        plot.setDomainAxis(1, new NumberAxis("X2"));
=====================================================================
Found a 17 line (59 tokens) duplication in the following files: 
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/title/TextTitleTest.java
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/title/TitleTest.java

        t2.setExpandToFitSpace(!t2.getExpandToFitSpace());
        assertEquals(t1, t2);

    }

    /**
     * Two objects that are equal are required to return the same hashCode.
     */
    @Test
    public void testHashcode() {
        TextTitle t1 = new TextTitle();
        TextTitle t2 = new TextTitle();
        assertEquals(t1, t2);
        int h1 = t1.hashCode();
        int h2 = t2.hashCode();
        assertEquals(h1, h2);
    }
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 312 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/DefaultCategoryDatasetTest.java
Starting at line 306 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValues2DTest.java

        DefaultCategoryDataset<String,String> d = new DefaultCategoryDataset<>();
        d.addValue(1.0, "R1", "C1");
        d.addValue(2.0, "R2", "C2");
        d.removeColumn("C2");
        d.addValue(3.0, "R2", "C2");
        assertEquals(3.0, d.getValue("R2", "C2").doubleValue(), EPSILON);
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 69 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DataUtilsTest.java

    public void testCalculateColumnTotal() {
        DefaultKeyedValues2D<String, String> table = new DefaultKeyedValues2D<>();
        table.addValue(1.0, "R0", "C0");
        table.addValue(2.0, "R0", "C1");
        table.addValue(3.0, "R1", "C0");
        table.addValue(4.0, "R1", "C1");
        assertEquals(4.0, DataUtils.calculateColumnTotal(table, 0), EPSILON);
=====================================================================
Found a 13 line (59 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

        assertEquals(cal.getTime(), h.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 8, 1, 59, 59);
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 194 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 413 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

            Minute m = new Minute(new Date(0L));
            assertEquals(1970, m.getHour().getYear());
            assertEquals(1, m.getHour().getMonth());
            assertEquals(1, m.getHour().getDayOfMonth());
            assertEquals(hoursOffset, m.getHour().getHour());
            assertEquals(0, m.getMinute());
=====================================================================
Found a 16 line (59 tokens) duplication in the following files: 
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

            Month m = new Month(1, 1970);
            assertEquals(1970, m.getYear().getYear());
            assertEquals(1, m.getMonth());
            assertEquals(-3_600_000L * hoursOffset, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the (int, Year) month-year constructor should use it.
     */
    @Test
    public void testMonthYearConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 16 line (59 tokens) duplication in the following files: 
Starting at line 211 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 249 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java

            Quarter q = new Quarter(1, 1970);
            assertEquals(1970, q.getYear().getYear());
            assertEquals(1, q.getQuarter());
            assertEquals(-3_600_000L * hoursOffset, q.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the (int, Year) quarter-year constructor should use it.
     */
    @Test
    public void testQuarterYearConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[1], new double[1],
                new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[1],
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[] {5.6}, new double[1],
                new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[1],
=====================================================================
Found a 7 line (59 tokens) duplication in the following files: 
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

        assertEquals(d1, d2);

        // try a dataset with some content...
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
        d1.addSeries("S1", data1);
=====================================================================
Found a 6 line (59 tokens) duplication in the following files: 
Starting at line 390 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 441 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java

        assertEquals(2, s1.getMaximumItemCount());
        s1.add(1.0, 1.1);
        s1.add(2.0, 2.2);
        s1.add(3.0, 3.3);
        assertEquals(2.0, s1.getX(0).doubleValue(), EPSILON);
        assertEquals(3.0, s1.getX(1).doubleValue(), EPSILON);
=====================================================================
Found a 28 line (58 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/AbstractAnnotation.java
Starting at line 186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/AbstractDataset.java

        AbstractAnnotation clone = (AbstractAnnotation) super.clone();
        clone.listenerList = new EventListenerList();
        return clone;
    }

    /**
     * Handles serialization.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O problem.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
    }

    /**
     * Restores a serialized object.
     *
     * @param stream  the input stream.
     *
     * @throws IOException if there is an I/O problem.
     * @throws ClassNotFoundException if there is a problem loading a class.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.listenerList = new EventListenerList();
=====================================================================
Found a 20 line (58 tokens) duplication in the following files: 
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java

        if (this.value2 != that.getValue2()) {
            return false;
        }
        if (!PaintUtils.equal(this.paint, that.paint)) {
            return false;
        }
        if (!Objects.equals(this.stroke, that.stroke)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 193;
=====================================================================
Found a 26 line (58 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 504 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 935 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.arrowPaint, stream);
=====================================================================
Found a 28 line (58 tokens) duplication in the following files: 
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java

        temp = Double.doubleToLongBits(this.y1);
        result = 29 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException not thrown by this class, but may be
     *                                    by subclasses.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream ({@code null} not permitted).
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeStroke(this.stroke, stream);
=====================================================================
Found a 24 line (58 tokens) duplication in the following files: 
Starting at line 1382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1479 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

            TextUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle() + Math.PI / 2.0, 
                    anchor);
            state.cursorRight(insets.getLeft() + labelBounds.getWidth()
                    + insets.getRight());
        }

        return state;

    }

    /**
     * Draws the axis label.
     *
     * @param label  the label text.
     * @param g2  the graphics device.
     * @param plotArea  the plot area.
     * @param dataArea  the area inside the axes.
     * @param edge  the location of the axis.
     * @param state  the axis state ({@code null} not permitted).
     *
     * @return Information about the axis.
     */
    protected AxisState drawAttributedLabel(AttributedString label, 
=====================================================================
Found a 10 line (58 tokens) duplication in the following files: 
Starting at line 735 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1001 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

        if (isInverted()) {
             result = axisMax - ((java2DValue - min) / (max - min)
                      * (axisMax - axisMin));
        }
        else {
             result = axisMin + ((java2DValue - min) / (max - min)
                      * (axisMax - axisMin));
        }

        return this.timeline.toMillisecond((long) result);
=====================================================================
Found a 9 line (58 tokens) duplication in the following files: 
Starting at line 509 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            min = area.getMaxY();
            max = area.getY();
        }
        if (isInverted()) {
=====================================================================
Found a 28 line (58 tokens) duplication in the following files: 
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/CompositeTitle.java

                calculateTotalHeight(s.getHeight()));
    }

    /**
     * Draws the block.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area) {
        draw(g2, area, null);
    }

    /**
     * Draws the block within the specified area.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     * @param params  ignored ({@code null} permitted).
     *
     * @return Always {@code null}.
     */
    @Override
    public Object draw(Graphics2D g2, Rectangle2D area, Object params) {
        area = trimMargin(area);
        drawBorder(g2, area);
        area = trimBorder(area);
=====================================================================
Found a 10 line (58 tokens) duplication in the following files: 
Starting at line 421 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 545 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

        PiePlot plot = new PiePlot(dataset);
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator());
        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));

        if (tooltips) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator());
        }
        if (urls) {
            plot.setURLGenerator(new StandardPieURLGenerator());
        }
=====================================================================
Found a 29 line (58 tokens) duplication in the following files: 
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

    public LegendItem(String label, String description,
                      String toolTipText, String urlText,
                      Shape shape, Paint fillPaint) {

        this(label, description, toolTipText, urlText,
                /* shape visible = */ true, shape,
                /* shape filled = */ true, fillPaint,
                /* shape outlined */ false, Color.BLACK, UNUSED_STROKE,
                /* line visible */ false, UNUSED_SHAPE, UNUSED_STROKE,
                Color.BLACK);

    }

    /**
     * Creates a legend item with a filled and outlined shape.
     *
     * @param label  the label ({@code null} not permitted).
     * @param description  the description ({@code null} permitted).
     * @param toolTipText  the tool tip text ({@code null} permitted).
     * @param urlText  the URL text ({@code null} permitted).
     * @param shape  the shape ({@code null} not permitted).
     * @param fillPaint  the paint used to fill the shape ({@code null}
     *                   not permitted).
     * @param outlineStroke  the outline stroke ({@code null} not
     *                       permitted).
     * @param outlinePaint  the outline paint ({@code null} not
     *                      permitted).
     */
    public LegendItem(String label, String description, String toolTipText, 
=====================================================================
Found a 9 line (58 tokens) duplication in the following files: 
Starting at line 563 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 617 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

                            this.stripWidth);
                    g2.setPaint(p);
                    g2.fill(r);
                }
                if (isStripOutlineVisible()) {
                    g2.setPaint(this.stripOutlinePaint);
                    g2.setStroke(this.stripOutlineStroke);
                    g2.draw(new Rectangle2D.Double(target.getMinX(),
                            target.getMinY(), target.getWidth(),
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 2511 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 2569 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java

    protected void drawLeftLabels(KeyedValues<K> leftKeys, Graphics2D g2,
                                  Rectangle2D plotArea, Rectangle2D linkArea,
                                  float maxLabelWidth, PiePlotState state) {

        this.labelDistributor.clear();
        double lGap = plotArea.getWidth() * this.labelGap;
        double verticalLinkRadius = state.getLinkArea().getHeight() / 2.0;
        for (int i = 0; i < leftKeys.getItemCount(); i++) {
=====================================================================
Found a 26 line (58 tokens) duplication in the following files: 
Starting at line 814 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 893 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 933 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                    dataArea.getMaxX(), v);
        }

        g2.setPaint(paint);
        g2.setStroke(stroke);
        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, 
                RenderingHints.VALUE_STROKE_NORMALIZE);
        g2.draw(line);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);
    }

    /**
     * Draws a marker for the domain axis.
     *
     * @param g2  the graphics device (not {@code null}).
     * @param plot  the plot (not {@code null}).
     * @param axis  the range axis (not {@code null}).
     * @param marker  the marker to be drawn (not {@code null}).
     * @param dataArea  the area inside the axes (not {@code null}).
     *
     * @see #drawRangeMarker(Graphics2D, CategoryPlot, ValueAxis, Marker,
     *     Rectangle2D)
     */
    @Override
    public void drawDomainMarker(Graphics2D g2, CategoryPlot plot,
=====================================================================
Found a 35 line (58 tokens) duplication in the following files: 
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java

        }
    }

    /**
     * Draws the visual representation of a single data item. This method
     * is mostly copied from the superclass, the change is that in the
     * calculated space for a singe bar we draw bars for each series next to
     * each other. The width of each bar is the available width divided by
     * the number of series. Bars for each series are drawn in order left to
     * right.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 31 line (58 tokens) duplication in the following files: 
Starting at line 235 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 675 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java
Starting at line 141 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/YIntervalRenderer.java

        return (pass == 1);
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 31 line (58 tokens) duplication in the following files: 
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java

    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
         Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
         ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
         int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }
        // get the data point...
        double x1 = dataset.getXValue(series, item);
=====================================================================
Found a 11 line (58 tokens) duplication in the following files: 
Starting at line 261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java
Starting at line 258 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 348 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 495 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 536 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java
Starting at line 577 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

    public Number getValue(R rowKey, C columnKey) {
        int r = getRowIndex(rowKey);
        int c = getColumnIndex(columnKey);
        if (c == -1) {
            throw new UnknownKeyException("Unknown columnKey: " + columnKey);
        }
        else if (r == -1) {
            throw new UnknownKeyException("Unknown rowKey: " + rowKey);
        }
        else {
            return this.underlying.getValue(r, c + this.firstCategoryIndex);
=====================================================================
Found a 9 line (58 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/BoxAndWhiskerCalculator.java

    public static double calculateQ1(List values) {
        Args.nullNotPermitted(values, "values");

        double result = Double.NaN;
        int count = values.size();
        if (count > 0) {
            if (count % 2 == 1) {
                if (count > 1) {
                    result = Statistics.calculateMedian(values, 0, count / 2);
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 337 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 377 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 655 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 695 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10110 - top, left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 7 line (58 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 14 line (58 tokens) duplication in the following files: 
Starting at line 1090 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryAxis xAxis2 = new CategoryAxis("X2");
        plot.setDomainAxis(99, xAxis2);
        assertEquals(xAxis2, plot.getDomainAxis(99));
        
        NumberAxis yAxis2 = new NumberAxis("Y2");
        plot.setRangeAxis(99, yAxis2);
        assertEquals(yAxis2, plot.getRangeAxis(99));
    }

    /**
     * Tests for the getDomainAxisLocation() and getRangeAxisLocation() methods.
     */
    @Test 
    public void testAxisLocationIndices() {
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 988 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1011 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void test1654215() {
        DefaultXYDataset<String> dataset = new DefaultXYDataset<>();
        JFreeChart chart = ChartFactory.createXYLineChart("Title", "X", "Y",
                dataset, PlotOrientation.VERTICAL, true, false, false);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
        plot.setRenderer(1, new XYLineAndShapeRenderer());
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 1198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testAxisLocationIndices() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);

        NumberAxis xAxis2 = new NumberAxis("X2");
=====================================================================
Found a 7 line (58 tokens) duplication in the following files: 
Starting at line 311 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 288 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/GroupedStackedBarRendererTest.java

        assertEquals(new Range(1.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(-2.0, "R1", "C2");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));

        dataset.addValue(null, "R1", "C3");
        assertEquals(new Range(-2.0, 1.0), r.findRangeBounds(dataset));
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/LookupPaintScaleTest.java
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/LookupPaintScaleTest.java

        s.add(25.0, Color.GREEN);
        assertEquals(Color.BLACK, s.getPaint(-1.0));
        assertEquals(Color.BLACK, s.getPaint(0.0));
        assertEquals(Color.GREEN, s.getPaint(25.0));
        assertEquals(Color.RED, s.getPaint(50.0));
        assertEquals(Color.RED, s.getPaint(100.0));
=====================================================================
Found a 4 line (58 tokens) duplication in the following files: 
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

    public void testCloning() throws CloneNotSupportedException {
        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 1423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1449 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1454 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        series.add(1.0, 5.0);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 0.0)));
        assertEquals(5.0, DatasetUtils.findYValue(dataset, 0, 1.0), EPSILON);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 2.0)));
        
        series.add(0.0, 10.0);
=====================================================================
Found a 7 line (58 tokens) duplication in the following files: 
Starting at line 59 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java
Starting at line 91 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java

    public void testEquals() {
        DefaultBoxAndWhiskerCategoryDataset<String, String> d1
                = new DefaultBoxAndWhiskerCategoryDataset<>();
        d1.add(new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0,
                new ArrayList<>()), "ROW1", "COLUMN1");
        DefaultBoxAndWhiskerCategoryDataset<String, String> d2
                = new DefaultBoxAndWhiskerCategoryDataset<>();
=====================================================================
Found a 13 line (58 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/HistogramDatasetTest.java
Starting at line 101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/HistogramDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/HistogramDatasetTest.java

        assertEquals(d2, d1);

        d1.addSeries("Series 2", new double[] {1.0, 2.0, 3.0}, 2);
        assertNotEquals(d1, d2);
        d2.addSeries("Series 2", new double[] {1.0, 2.0, 3.0}, 2);
        assertEquals(d1, d2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeTableXYDatasetTest.java
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeTableXYDatasetTest.java

    public void testStandard() {
        TimeTableXYDataset d = new TimeTableXYDataset();
        d.add(new Year(1999), 1.0, "Series 1");
        assertEquals(d.getItemCount(), 1);
        assertEquals(d.getSeriesCount(), 1);
        d.add(new Year(2000), 2.0, "Series 2");
=====================================================================
Found a 4 line (58 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[] {99.9});
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 56 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java

    public void testEquals() {
        DefaultTableXYDataset<String> d1 = new DefaultTableXYDataset<>();
        XYSeries<String> s1 = new XYSeries<>("Series 1", true, false);
        s1.add(1.0, 1.1);
        s1.add(2.0, 2.2);
        d1.addSeries(s1);

        DefaultTableXYDataset<String> d2 = new DefaultTableXYDataset<>();
=====================================================================
Found a 11 line (57 tokens) duplication in the following files: 
Starting at line 3276 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2861 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        RectangleInsets insets = getInsets();
        insets.trim(area);

        // calculate the data area...
        AxisSpace space = calculateAxisSpace(g2, area);
        Rectangle2D dataArea = space.shrink(area, null);
        this.axisOffset.trim(dataArea);
        dataArea = integerise(dataArea);
        if (dataArea.isEmpty()) {
            return;
        }
=====================================================================
Found a 8 line (57 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/MiddlePinNeedle.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PinNeedle.java

        int midX = (int) (plotArea.getMinX() + (plotArea.getWidth() / 2));
        //int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
        int lenX = (int) (plotArea.getWidth() / 10);
        if (lenX < 2) {
            lenX = 2;
        }

        pointer.moveTo(midX - lenX, midY - lenX);
=====================================================================
Found a 19 line (57 tokens) duplication in the following files: 
Starting at line 1242 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 839 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 1412 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        if (!Objects.equals(this.legendItemLabelGenerator, that.legendItemLabelGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemToolTipGenerator, that.legendItemToolTipGenerator)) {
            return false;
        }
        if (!Objects.equals(this.legendItemURLGenerator, that.legendItemURLGenerator)) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a hash code for the renderer.
     *
     * @return The hash code.
     */
    @Override
    public int hashCode() {
=====================================================================
Found a 10 line (57 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

            int rows = dataset.getRowCount();
            double space = 0.0;
            PlotOrientation orientation = plot.getOrientation();
            if (orientation == PlotOrientation.HORIZONTAL) {
                space = dataArea.getHeight();
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                space = dataArea.getWidth();
            }
            double maxWidth = space * getMaximumBarWidth();
=====================================================================
Found a 29 line (57 tokens) duplication in the following files: 
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area in which the data is drawn.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the data (must be an instance of
     *                 {@link BoxAndWhiskerCategoryDataset}).
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
        Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
        ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
        int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(row, column)) {
            return;
        }

        if (!(dataset instanceof BoxAndWhiskerCategoryDataset)) {
=====================================================================
Found a 8 line (57 tokens) duplication in the following files: 
Starting at line 943 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 640 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

            for (Iterator iterator = outlierListCollection.iterator();
                     iterator.hasNext();) {
                OutlierList list = (OutlierList) iterator.next();
                Outlier outlier = list.getAveragedOutlier();
                Point2D point = outlier.getPoint();

                if (list.isMultiple()) {
                    drawMultipleEllipse(point, state.getBarWidth(), oRadius,
=====================================================================
Found a 24 line (57 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java
Starting at line 500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

                    false);
        }

        // add an item entity, if this information is being collected
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }

    }

    /**
     * Tests this renderer for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IntervalBarRenderer)) {
=====================================================================
Found a 23 line (57 tokens) duplication in the following files: 
Starting at line 500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/WaterfallBarRenderer.java

                    (value < 0.0));
        }

        // add an item entity, if this information is being collected
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }
    }

    /**
     * Tests this renderer for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof StatisticalBarRenderer)) {
=====================================================================
Found a 34 line (57 tokens) duplication in the following files: 
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationRenderer.java
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/DeviationStepRenderer.java
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 672 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java
Starting at line 126 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 676 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepRenderer.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/YIntervalRenderer.java

    }

    /**
     * Draws the visual representation of a single data item. This method
     * is mostly copied from the superclass, the change is that in the
     * calculated space for a singe bar we draw bars for each series next to
     * each other. The width of each bar is the available width divided by
     * the number of series. Bars for each series are drawn in order left to
     * right.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index.
     * @param item  the item index.
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        if (!getItemVisible(series, item)) {
            return;
        }
=====================================================================
Found a 11 line (57 tokens) duplication in the following files: 
Starting at line 795 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 945 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        if (getBaseShapesVisible()) {

            Shape shape = getItemShape(series, item);
            if (orientation == PlotOrientation.HORIZONTAL) {
                shape = ShapeUtils.createTranslatedShape(shape, transY1,
                        transX1);
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                shape = ShapeUtils.createTranslatedShape(shape, transX1,
                        transY1);
            }
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 507 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 467 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java

        if (getPlotShapes()) {
            shape = getItemShape(series, item);
            if (orientation == PlotOrientation.VERTICAL) {
                shape = ShapeUtils.createTranslatedShape(shape, transX1,
                        transY1);
            } else if (orientation == PlotOrientation.HORIZONTAL) {
                shape = ShapeUtils.createTranslatedShape(shape, transY1,
                        transX1);
            }
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 2465 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 2503 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 2623 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java

                    localizationResources.getString("PNG_Image_Files"), "png");
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setFileFilter(filter);

        int option = fileChooser.showSaveDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            String filename = fileChooser.getSelectedFile().getPath();
            if (isEnforceFileExtensions()) {
                if (!filename.endsWith(".png")) {
=====================================================================
Found a 25 line (57 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/urls/CustomCategoryURLGenerator.java
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/urls/CustomXYURLGenerator.java

                String u2 = generator.getURL(series, item);
                if (u1 != null) {
                    if (!u1.equals(u2)) {
                        return false;
                    }
                } else {
                    if (u2 != null) {
                        return false;
                    }
                }
            }
        }
        return true;
    }

    /**
     * Returns a new generator that is a copy of, and independent from, this
     * generator.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem with cloning.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 32 line (57 tokens) duplication in the following files: 
Starting at line 750 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 826 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            findRangeBounds(CategoryDataset<R, C> dataset, 
                    boolean includeInterval) {
        Args.nullNotPermitted(dataset, "dataset");
        Range result;
        if (dataset instanceof RangeInfo) {
            RangeInfo info = (RangeInfo) dataset;
            result = info.getRangeBounds(includeInterval);
        }
        else {
            result = iterateRangeBounds(dataset, includeInterval);
        }
        return result;
    }

    /**
     * Finds the bounds of the y-values in the specified dataset, including
     * only those series that are listed in visibleSeriesKeys.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param visibleSeriesKeys  the keys for the visible series
     *     ({@code null} not permitted).
     * @param includeInterval  include the y-interval (if the dataset has a
     *     y-interval).
     *
     * @param <R>  the type for the row keys.
     * @param <C>  the type for the column keys.
     * 
     * @return The data bounds.
     *
     * @since 1.0.13
     */
    public static <R extends Comparable<R>, C extends Comparable<C>> 
=====================================================================
Found a 7 line (57 tokens) duplication in the following files: 
Starting at line 2048 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 2143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            int seriesCount = dataset.getRowCount();
            for (int series = 0; series < seriesCount; series++) {
                Number number = dataset.getValue(series, item);
                if (number != null) {
                    hasValidData = true;
                    double value = number.doubleValue();
                    if (value > 0.0) {
=====================================================================
Found a 40 line (57 tokens) duplication in the following files: 
Starting at line 567 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java
Starting at line 302 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultMultiValueCategoryDataset.java

    public List<R> getRowKeys() {
        return this.data.getRowKeys();
    }

    /**
     * Returns the number of rows in the table.
     *
     * @return The row count.
     *
     * @see #getColumnCount()
     */
    @Override
    public int getRowCount() {
        return this.data.getRowCount();
    }

    /**
     * Returns the number of columns in the table.
     *
     * @return The column count.
     *
     * @see #getRowCount()
     */
    @Override
    public int getColumnCount() {
        return this.data.getColumnCount();
    }

    /**
     * Returns the minimum y-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         y-interval is taken into account.
     *
     * @return The minimum value.
     *
     * @see #getRangeUpperBound(boolean)
     */
    @Override
    public double getRangeLowerBound(boolean includeInterval) {
=====================================================================
Found a 7 line (57 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYLineAnnotationTest.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYLineAnnotationTest.java

    public void testEquals() {
        Stroke stroke = new BasicStroke(2.0f);
        XYLineAnnotation a1 = new XYLineAnnotation(10.0, 20.0, 100.0, 200.0,
                stroke, Color.BLUE);
        XYLineAnnotation a2 = new XYLineAnnotation(10.0, 20.0, 100.0, 200.0,
                stroke, Color.BLUE);
        assertEquals(a1, a2);
=====================================================================
Found a 7 line (57 tokens) duplication in the following files: 
Starting at line 219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        JFreeChart chart = ChartFactory.createLineChart("Test", "Categories",
                "Value", dataset, PlotOrientation.VERTICAL, false, false,
                false);
        @SuppressWarnings("unchecked")
        CategoryPlot<String, String> plot = (CategoryPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getRangeAxis();
        axis.setAutoRangeIncludesZero(false);
=====================================================================
Found a 15 line (57 tokens) duplication in the following files: 
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }

    /**
     * Create a bar chart with sample data in the range -3 to +3.
     *
     * @return The chart.
     */
    private static JFreeChart createBarChart() {
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 495 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00101 - left and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2);
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 531 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 01001 - bottom and center only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (57 tokens) duplication in the following files: 
Starting at line 219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 228 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 363 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 10 line (57 tokens) duplication in the following files: 
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 257 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 267 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2);
        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01100
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 289 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 607 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 10001 - top and center only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
=====================================================================
Found a 10 line (57 tokens) duplication in the following files: 
Starting at line 295 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 323 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
        size = container.arrange(g2);
        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10010 - right and top only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/legend/LegendGraphicTest.java
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/legend/LegendGraphicTest.java

    public void testEquals() {
        LegendGraphic g1 = new LegendGraphic(new Rectangle2D.Double(1.0, 2.0,
                3.0, 4.0), Color.BLACK);
        LegendGraphic g2 = new LegendGraphic(new Rectangle2D.Double(1.0, 2.0,
                3.0, 4.0), Color.BLACK);
        assertEquals(g1, g2);
=====================================================================
Found a 7 line (57 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 165 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 12 line (57 tokens) duplication in the following files: 
Starting at line 551 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 602 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 633 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 668 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java

                5.0f, 6.0f, Color.WHITE));
        CategoryPlot<String, String> p2;
        try {
            p2 = CloneUtils.clone(p1);
        }
        catch (CloneNotSupportedException e) {
            fail("Cloning failed.");
            return;
        }
        assertNotSame(p1, p2);
        assertSame(p1.getClass(), p2.getClass());
        assertEquals(p1, p2);
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 1256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        LineAndShapeRenderer renderer2 = new LineAndShapeRenderer();
        plot.setRenderer(99, renderer2);
        plot.mapDatasetToRangeAxis(99, 1);
        
        ValueMarker yMarker1 = new ValueMarker(123);
        plot.addRangeMarker(99, yMarker1, Layer.FOREGROUND);
        assertTrue(plot.getRangeMarkers(99, Layer.FOREGROUND).contains(
                yMarker1));
    }
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 1076 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1261 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1284 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

    public void testGetDomainAxisForDataset() {
        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);
=====================================================================
Found a 17 line (57 tokens) duplication in the following files: 
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 110 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/AbstractXYItemRendererTest.java

        BarRenderer r2 = (BarRenderer) r1.clone();

        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);

        // check that the generator has been cloned
        assertNotSame(r1.getLegendItemLabelGenerator(), r2.getLegendItemLabelGenerator());
    }

    /**
     * Check that the legendItemToolTipGenerator is cloned.
     * 
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning_LegendItemToolTipGenerator() throws CloneNotSupportedException {
=====================================================================
Found a 9 line (57 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        r2.setGapThreshold(1.23);
        assertEquals(r1, r2);

        r1.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));
        assertNotEquals(r1, r2);
        r2.setLegendLine(new Line2D.Double(1.0, 2.0, 3.0, 4.0));
        assertEquals(r1, r2);

        r1.setSeriesShapesFilled(1, Boolean.TRUE);
=====================================================================
Found a 13 line (57 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYSplineRendererTest.java

        XYLineAndShapeRenderer r2 = new XYLineAndShapeRenderer();
        assertEquals(r1, r2);
        int h1 = r1.hashCode();
        int h2 = r2.hashCode();
        assertEquals(h1, h2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
        Rectangle2D legendShape = new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0);
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/CrosshairOverlayTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/swing/CrosshairOverlayTest.java

    public void testSerialization() {
        CrosshairOverlay o1 = new CrosshairOverlay();
        o1.addDomainCrosshair(new Crosshair(99.9));
        o1.addRangeCrosshair(new Crosshair(1.23, new GradientPaint(1.0f, 2.0f,
                Color.RED, 3.0f, 4.0f, Color.BLUE), new BasicStroke(1.1f)));
        CrosshairOverlay o2 = TestUtils.serialised(o1);
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDatasetTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDatasetTest.java

    public void testSerialization() {
        DefaultBoxAndWhiskerXYDataset<String> d1 
                = new DefaultBoxAndWhiskerXYDataset<>("Series");
        d1.add(new Date(1L), new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0,
                6.0, 7.0, 8.0, new ArrayList<>()));
        DefaultBoxAndWhiskerXYDataset<String> d2 = TestUtils.serialised(d1);
=====================================================================
Found a 13 line (57 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

        assertEquals(cal.getTime(), h.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 8, 1, 59, 59);
=====================================================================
Found a 16 line (57 tokens) duplication in the following files: 
Starting at line 583 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 667 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

            Week w = new Week(new Date(ms));
            assertEquals(1970, w.getYear().getYear());
            assertEquals(2, w.getWeek());
            assertEquals(ms, w.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the (int, int) week-year constructor should use it.
     */
    @Test
    public void testWeekIntYearConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[1], new double[1], new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[1], new double[1],
                new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
=====================================================================
Found a 4 line (57 tokens) duplication in the following files: 
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

        DefaultXYDataset<String> d = new DefaultXYDataset<>();
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
=====================================================================
Found a 29 line (56 tokens) duplication in the following files: 
Starting at line 322 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/TextAnnotation.java
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BlockBorder.java
Starting at line 162 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColorBlock.java
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialBackground.java
Starting at line 367 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/LookupPaintScale.java
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextFragment.java

    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.paint = SerialUtils.readPaint(stream);
    }

}
=====================================================================
Found a 27 line (56 tokens) duplication in the following files: 
Starting at line 596 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 713 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java
Starting at line 812 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writePaint(this.backgroundPaint, stream);
=====================================================================
Found a 20 line (56 tokens) duplication in the following files: 
Starting at line 1139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 422 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 350 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 1010 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

    }

    /**
     * Rescales the axis to ensure that all data is visible.
     */
    @Override
    protected void autoAdjustRange() {

        Plot plot = getPlot();

        if (plot == null) {
            return;  // no plot, no data
        }

        if (plot instanceof ValueAxisPlot) {
            ValueAxisPlot vap = (ValueAxisPlot) plot;

            Range r = vap.getDataRange(this);
            if (r == null) {
                r = new DateRange();
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 205 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 373 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java

                    RectangleConstraint.NONE);
            w[4] = size.width;
            h[4] = size.height;
        }
        double width = Math.max(w[0], Math.max(w[1], w[2] + w[4] + w[3]));
        double centerHeight = Math.max(h[2], Math.max(h[3], h[4]));
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 809 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 1075 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

    public static JFreeChart createAreaChart(String title,
            String categoryAxisLabel, String valueAxisLabel,
            CategoryDataset dataset, PlotOrientation orientation,
            boolean legend, boolean tooltips, boolean urls) {

        Args.nullNotPermitted(orientation, "orientation");
        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);
        categoryAxis.setCategoryMargin(0.0);

        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 1196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 1498 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 1618 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

    public static JFreeChart createScatterPlot(String title, String xAxisLabel,
            String yAxisLabel, XYDataset dataset, PlotOrientation orientation,
            boolean legend, boolean tooltips, boolean urls) {

        Args.nullNotPermitted(orientation, "orientation");
        NumberAxis xAxis = new NumberAxis(xAxisLabel);
        xAxis.setAutoRangeIncludesZero(false);
        NumberAxis yAxis = new NumberAxis(yAxisLabel);
=====================================================================
Found a 11 line (56 tokens) duplication in the following files: 
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 420 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

                contentSize = new Size2D(getWidth(), getHeight());
            }
            else if (h == LengthConstraintType.RANGE) {
                throw new RuntimeException("Not yet implemented.");
            }
            else if (h == LengthConstraintType.FIXED) {
                throw new RuntimeException("Not yet implemented.");
            }
        }
        else if (w == LengthConstraintType.RANGE) {
            if (h == LengthConstraintType.NONE) {
=====================================================================
Found a 12 line (56 tokens) duplication in the following files: 
Starting at line 3319 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 2911 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                if (getOrientation() == PlotOrientation.VERTICAL) {
                    y = rangeAxis.java2DToValue(anchor.getY(), dataArea,
                            getRangeAxisEdge());
                }
                else {
                    y = rangeAxis.java2DToValue(anchor.getX(), dataArea,
                            getRangeAxisEdge());
                }
                crosshairState.setAnchorY(y);
            }
        }
        crosshairState.setRowKey(getDomainCrosshairRowKey());
=====================================================================
Found a 16 line (56 tokens) duplication in the following files: 
Starting at line 589 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 645 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 628 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

    }

    /**
     * Handles a 'click' on the plot.
     *
     * @param x  x-coordinate of the click.
     * @param y  y-coordinate of the click.
     * @param info  information about the plot's dimensions.
     *
     */
    @Override
    public void handleClick(int x, int y, PlotRenderingInfo info) {

        Rectangle2D dataArea = info.getDataArea();
        if (dataArea.contains(x, y)) {
            for (int i = 0; i < this.subplots.size(); i++) {
=====================================================================
Found a 28 line (56 tokens) duplication in the following files: 
Starting at line 408 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java

        });
        super.receive(visitor);
    }

    /**
     * Draws the plot within the specified area on a graphics device.
     *
     * @param g2  the graphics device.
     * @param area  the plot area (in Java2D space).
     * @param anchor  an anchor point in Java2D space ({@code null}
     *                permitted).
     * @param parentState  the state from the parent plot, if there is one
     *                     ({@code null} permitted).
     * @param info  collects chart drawing information ({@code null}
     *              permitted).
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
        insets.trim(area);
=====================================================================
Found a 33 line (56 tokens) duplication in the following files: 
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PinNeedle.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PlumNeedle.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PointerNeedle.java

        if (!(obj instanceof PinNeedle)) {
            return false;
        }
        if (!super.equals(obj)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        return super.hashCode();
    }

    /**
     * Returns a clone of this needle.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if the {@code PinNeedle}
     *     cannot be cloned (in theory, this should not happen).
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

}
=====================================================================
Found a 9 line (56 tokens) duplication in the following files: 
Starting at line 997 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1023 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                    plot.getRangeAxisEdge());
            double low = Math.min(start2d, end2d);
            double high = Math.max(start2d, end2d);

            PlotOrientation orientation = plot.getOrientation();
            Rectangle2D rect = null;
            if (orientation == PlotOrientation.HORIZONTAL) {
                // clip left and right bounds to data area
                low = Math.max(low, dataArea.getMinX());
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 1003 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1036 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1232 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            if (orientation == PlotOrientation.HORIZONTAL) {
                // clip left and right bounds to data area
                low = Math.max(low, dataArea.getMinX());
                high = Math.min(high, dataArea.getMaxX());
                rect = new Rectangle2D.Double(low,
                        dataArea.getMinY(), high - low,
                        dataArea.getHeight());
            }
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 1011 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1029 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

            else if (orientation == PlotOrientation.VERTICAL) {
                // clip top and bottom bounds to data area
                low = Math.max(low, dataArea.getMinY());
                high = Math.min(high, dataArea.getMaxY());
                rect = new Rectangle2D.Double(dataArea.getMinX(),
                        low, dataArea.getWidth(),
                        high - low);
            }
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 726 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 306 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

        if (pass == 1) {
            Shape shape = getItemShape(row, column);
            if (orientation == PlotOrientation.HORIZONTAL) {
                shape = ShapeUtils.createTranslatedShape(shape, y1, x1);
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                shape = ShapeUtils.createTranslatedShape(shape, x1, y1);
            }
=====================================================================
Found a 9 line (56 tokens) duplication in the following files: 
Starting at line 727 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 416 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java

            Shape shape = getItemShape(row, column);
            if (orientation == PlotOrientation.HORIZONTAL) {
                shape = ShapeUtils.createTranslatedShape(shape, y1, x1);
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                shape = ShapeUtils.createTranslatedShape(shape, x1, y1);
            }

            if (getItemShapeVisible(row, column)) {
=====================================================================
Found a 28 line (56 tokens) duplication in the following files: 
Starting at line 260 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/HighLowRenderer.java
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java

        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        double x = dataset.getXValue(series, item);
=====================================================================
Found a 29 line (56 tokens) duplication in the following files: 
Starting at line 337 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/SamplingXYLineRenderer.java
Starting at line 972 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 1155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.legendLine = SerialUtils.readShape(stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeShape(this.legendLine, stream);
    }

}
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 259 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

        double[] stack1 = getStackValues(tdataset, series, item);

        // get the previous point and the next point so we can calculate a
        // "hot spot" for the area (used by the chart entity)...
        double x0 = dataset.getXValue(series, Math.max(item - 1, 0));
        double y0 = dataset.getYValue(series, Math.max(item - 1, 0));
        if (Double.isNaN(y0)) {
            y0 = 0.0;
        }
        double[] stack0 = getStackValues(tdataset, series, Math.max(item - 1,
=====================================================================
Found a 26 line (56 tokens) duplication in the following files: 
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java

                    lvalue = dataset.getXValue(series, item);
                    uvalue = lvalue;
                    minimum = Math.min(minimum, lvalue);
                    maximum = Math.max(maximum, uvalue);
                }
            }
        }
        if (minimum > maximum) {
            return null;
        }
        else {
            return new Range(minimum, maximum);
        }
    }

    /**
     * Returns the range of values the renderer requires to display all the
     * items from the specified dataset.
     *
     * @param dataset  the dataset ({@code null} permitted).
     *
     * @return The range ({@code null} if the dataset is {@code null}
     *         or empty).
     */
    @Override
    public Range findRangeBounds(XYDataset dataset) {
=====================================================================
Found a 28 line (56 tokens) duplication in the following files: 
Starting at line 690 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 394 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java

    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.legendArea = SerialUtils.readShape(stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException  if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writeShape(this.legendArea, stream);
    }
}
=====================================================================
Found a 13 line (56 tokens) duplication in the following files: 
Starting at line 684 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 774 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java

                l_polygonYs.add(l_intersectY);

                // add the subtrahend's points to the polygon in reverse
                Collections.reverse(l_subtrahendXs);
                Collections.reverse(l_subtrahendYs);
                l_polygonXs.addAll(l_subtrahendXs);
                l_polygonYs.addAll(l_subtrahendYs);

                // create an actual polygon
                b_positive = (l_subtrahendMaxY <= l_minuendMaxY)
                        && (l_subtrahendMinY <= l_minuendMinY);
                createPolygon(x_graphics, x_dataArea, x_plot, x_domainAxis,
                        x_rangeAxis, b_positive, l_polygonXs, l_polygonYs);
=====================================================================
Found a 14 line (56 tokens) duplication in the following files: 
Starting at line 2683 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/util/ExportUtils.java

            this.chart.draw(g2, drawArea);
            Method m3 = pdfDocClass.getMethod("writeToFile", File.class);
            m3.invoke(pdfDoc, file);
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                NoSuchMethodException | SecurityException | IllegalArgumentException |
                InvocationTargetException ex) {
            throw new RuntimeException(ex);
        }
    }

    /**
     * Creates a print job for the chart.
     */
    public void createChartPrintJob() {
=====================================================================
Found a 8 line (56 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 534 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

    protected Size2D arrangeRN(Graphics2D g2, Range widthRange) {
        Size2D s = arrangeNN(g2);
        if (widthRange.contains(s.getWidth())) {
            return s;
        }
        double ww = widthRange.constrain(s.getWidth());
        return arrangeFN(g2, ww);
    }
=====================================================================
Found a 9 line (56 tokens) duplication in the following files: 
Starting at line 344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues.java
Starting at line 370 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/DefaultKeyedValues.java

                KeyedValueComparatorType.BY_KEY, order);
        Arrays.sort(data, comparator);
        clear();

        for (int i = 0; i < data.length; i++) {
            final DefaultKeyedValue<K> value = data[i];
            addValue(value.getKey(), value.getValue());
        }
    }
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 1403 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1525 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                    }
                }
            }
        } else {
            // standard case - plain XYDataset
            for (S seriesKey : visibleSeriesKeys) {
                int series = dataset.indexOf(seriesKey);
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    double x = dataset.getXValue(series, item);
=====================================================================
Found a 24 line (56 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/CategoryDatasetHandler.java
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/PieDatasetHandler.java

        this.dataset.addValue(value, rowKey, columnKey);
    }

    /**
     * The start of an element.
     *
     * @param namespaceURI  the namespace.
     * @param localName  the element name.
     * @param qName  the element name.
     * @param atts  the element attributes.
     *
     * @throws SAXException for errors.
     */
    @Override
    public void startElement(String namespaceURI,
                             String localName,
                             String qName,
                             Attributes atts) throws SAXException {

        DefaultHandler current = getCurrentHandler();
        if (current != this) {
            current.startElement(namespaceURI, localName, qName, atts);
        }
        else if (qName.equals(CATEGORYDATASET_TAG)) {
=====================================================================
Found a 46 line (56 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

        double[][] seriesArray = this.seriesList.get(series);
        return seriesArray[0].length;
    }

    /**
     * Returns the x-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The x-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getX(int, int)
     */
    @Override
    public double getXValue(int series, int item) {
        double[][] seriesData = this.seriesList.get(series);
        return seriesData[0][item];
    }

    /**
     * Returns the y-value for an item within a series.
     *
     * @param series  the series index (in the range {@code 0} to
     *     {@code getSeriesCount() - 1}).
     * @param item  the item index (in the range {@code 0} to
     *     {@code getItemCount(series)}).
     *
     * @return The y-value.
     *
     * @throws ArrayIndexOutOfBoundsException if {@code series} is not
     *     within the specified range.
     * @throws ArrayIndexOutOfBoundsException if {@code item} is not
     *     within the specified range.
     *
     * @see #getY(int, int)
     */
    @Override
    public double getYValue(int series, int item) {
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 66 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java

                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
        assertEquals(p1, p2);

        p1 = new CategoryLabelPositions(
                new CategoryLabelPosition(RA_BOTTOM,
                        TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
=====================================================================
Found a 10 line (56 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java

                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
        assertEquals(p1, p2);

        p1 = new CategoryLabelPositions(
                new CategoryLabelPosition(RA_BOTTOM,
                        TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_BOTTOM, TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
=====================================================================
Found a 12 line (56 tokens) duplication in the following files: 
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/CategoryLabelPositionsTest.java

                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
        assertEquals(p1, p2);

        p1 = new CategoryLabelPositions(
                new CategoryLabelPosition(RA_BOTTOM,
                        TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_BOTTOM,
                        TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_BOTTOM,
                        TextBlockAnchor.TOP_CENTER),
                new CategoryLabelPosition(RA_TOP, TextBlockAnchor.CENTER));
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), true,
                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 7 line (56 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (56 tokens) duplication in the following files: 
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (56 tokens) duplication in the following files: 
Starting at line 884 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java

        plot.setRenderer(1, new LineAndShapeRenderer());
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
=====================================================================
Found a 5 line (56 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java

    public void testEquals() {
        DefaultCategoryDataset<String, String> u1 = new DefaultCategoryDataset<>();
        u1.addValue(1.0, "R1", "C1");
        u1.addValue(2.0, "R1", "C2");
        SlidingCategoryDataset<String, String> d1 = new SlidingCategoryDataset<>(u1, 0, 5);
=====================================================================
Found a 5 line (56 tokens) duplication in the following files: 
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

    public void testCloning() throws CloneNotSupportedException {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 5 line (56 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 93 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

    public void testSerialization() {
        TaskSeries<String> s1 = new TaskSeries<>("Series");
        s1.add(new Task("Task 1", new Date(0L), new Date(1L)));
        TaskSeriesCollection<String, String> u1 = new TaskSeriesCollection<>();
        u1.add(s1);
=====================================================================
Found a 4 line (56 tokens) duplication in the following files: 
Starting at line 424 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 484 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

        TaskSeries<String> s1 = new TaskSeries<>("S");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S");
=====================================================================
Found a 17 line (56 tokens) duplication in the following files: 
Starting at line 166 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjects2DTest.java
Starting at line 184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjects2DTest.java

        boolean pass = false;
        try {
            data.getObject("XX", "C1");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);

        pass = false;
        try {
            data.getObject("R1", "XX");
        }
        catch (UnknownKeyException e) {
            pass = true;
        }
        assertTrue(pass);
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDatasetTest.java

    public void testAdd() {
        DefaultBoxAndWhiskerCategoryDataset<String, String> dataset
                = new DefaultBoxAndWhiskerCategoryDataset<>();
        BoxAndWhiskerItem item1 = new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0,
                5.0, 6.0, 7.0, 8.0, new ArrayList<>());
        dataset.add(item1, "R1", "C1");
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 474 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 460 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
        cal.set(Calendar.MILLISECOND, 555);
=====================================================================
Found a 6 line (56 tokens) duplication in the following files: 
Starting at line 489 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 16, 3, 47, 55);
        cal.set(Calendar.MILLISECOND, 555);
=====================================================================
Found a 16 line (56 tokens) duplication in the following files: 
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 546 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

            Month m = new Month(new Date(ms));
            assertEquals(1970, m.getYear().getYear());
            assertEquals(1, m.getMonth());
            assertEquals(ms, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the (int, int) month-year constructor should use it.
     */
    @Test
    public void testMonthIntYearConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 16 line (56 tokens) duplication in the following files: 
Starting at line 173 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 569 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java

            Quarter q = new Quarter(new Date(ms));
            assertEquals(1970, q.getYear().getYear());
            assertEquals(1, q.getQuarter());
            assertEquals(ms, q.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * If a thread-local calendar was set, the (int, int) quarter-year constructor should use it.
     */
    @Test
    public void testQuarterIntYearConstructorWithThreadLocalCalendar() {
=====================================================================
Found a 16 line (56 tokens) duplication in the following files: 
Starting at line 472 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 583 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 625 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 667 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java

            w = (Week) w.previous();
            assertEquals(1970, w.getYear().getYear());
            assertEquals(2, w.getWeek());
            assertEquals(ms, w.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
=====================================================================
Found a 4 line (56 tokens) duplication in the following files: 
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[1]);
=====================================================================
Found a 28 line (55 tokens) duplication in the following files: 
Starting at line 378 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

        result = 37 * result + HashUtils.hashCodeForPaint(this.paint);
        result = 37 * result + this.stroke.hashCode();
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 550 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 980 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    protected List refreshVerticalTicks(Graphics2D g2, Rectangle2D dataArea,
            RectangleEdge edge) {

        List result = new java.util.ArrayList();
        result.clear();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);
        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java
Starting at line 299 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/BorderArrangement.java

            Size2D size = this.rightBlock.arrange(g2, RectangleConstraint.NONE);
            w[3] = size.width;
            h[3] = size.height;
        }

        h[2] = Math.max(h[2], h[3]);
        h[3] = h[2];

        if (this.centerBlock != null) {
=====================================================================
Found a 27 line (55 tokens) duplication in the following files: 
Starting at line 2071 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

    }

    /**
     * Receives notification of a change to an {@link Annotation} added to
     * this plot.
     *
     * @param event  information about the event (not used here).
     */
    @Override
    public void annotationChanged(AnnotationChangeEvent event) {
        if (getParent() != null) {
            getParent().annotationChanged(event);
        } else {
            PlotChangeEvent e = new PlotChangeEvent(this);
            notifyListeners(e);
        }
    }

    /**
     * Receives notification of a change to the plot's dataset.
     * <P>
     * The range axis bounds will be recalculated if necessary.
     *
     * @param event  information about the event (not used here).
     */
    @Override
    public void datasetChanged(DatasetChangeEvent event) {
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 365 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 312 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            if (orientation == PlotOrientation.HORIZONTAL) {
                double w = usableSize * plot.getWeight() / totalWeight;
                this.subplotAreas[i] = new Rectangle2D.Double(x, y, w,
                        adjustedPlotArea.getHeight());
                x = x + w + this.gap;
            }
            else if (orientation == PlotOrientation.VERTICAL) {
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 278 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 314 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

                this.subplotArea[i] = new Rectangle2D.Double(x, y, w,
                        adjustedPlotArea.getHeight());
                x = x + w + this.gap;
            }
            else if (orientation == PlotOrientation.HORIZONTAL) {
                double h = usableSize * plot.getWeight() / totalWeight;
                this.subplotArea[i] = new Rectangle2D.Double(x, y,
=====================================================================
Found a 11 line (55 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/MiddlePinNeedle.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/PinNeedle.java

    @Override
    protected void drawNeedle(Graphics2D g2, Rectangle2D plotArea,
            Point2D rotate, double angle) {

        Area shape;
        GeneralPath pointer = new GeneralPath();

        int minY = (int) (plotArea.getMinY());
        //int maxX = (int) (plotArea.getMaxX());
        int maxY = (int) (plotArea.getMaxY());
        int midY = ((maxY - minY) / 2) + minY;
=====================================================================
Found a 39 line (55 tokens) duplication in the following files: 
Starting at line 254 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPointer.java
Starting at line 173 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

            this.paint = paint;
            notifyListeners(new DialLayerChangeEvent(this));
        }

        /**
         * Returns the stroke.
         *
         * @return The stroke (never {@code null}).
         *
         * @see #setStroke(Stroke)
         */
        public Stroke getStroke() {
            return this.stroke;
        }

        /**
         * Sets the stroke and sends a {@link DialLayerChangeEvent} to all
         * registered listeners.
         *
         * @param stroke  the stroke ({@code null} not permitted).
         *
         * @see #getStroke()
         */
        public void setStroke(Stroke stroke) {
            Args.nullNotPermitted(stroke, "stroke");
            this.stroke = stroke;
            notifyListeners(new DialLayerChangeEvent(this));
        }

        /**
         * Draws the pointer.
         *
         * @param g2  the graphics target.
         * @param plot  the plot.
         * @param frame  the dial's reference frame.
         * @param view  the dial's view.
         */
        @Override
        public void draw(Graphics2D g2, DialPlot plot, Rectangle2D frame,
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 673 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java
Starting at line 705 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java

    private Range calculateXDataRange(float[][] data) {

        Range result = null;

        if (data != null) {
            float lowest = Float.POSITIVE_INFINITY;
            float highest = Float.NEGATIVE_INFINITY;
            for (int i = 0; i < data[0].length; i++) {
                float v = data[0][i];
=====================================================================
Found a 21 line (55 tokens) duplication in the following files: 
Starting at line 778 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 897 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        g2.setStroke(stroke);
        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, 
                RenderingHints.VALUE_STROKE_NORMALIZE);
        g2.draw(line);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);
    }

    /**
     * Draws a line perpendicular to the range axis.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param axis  the value axis.
     * @param dataArea  the area for plotting data.
     * @param value  the value at which the grid line should be drawn.
     * @param paint  the paint ({@code null} not permitted).
     * @param stroke  the stroke ({@code null} not permitted).
     */
    @Override
    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,
=====================================================================
Found a 10 line (55 tokens) duplication in the following files: 
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2.java
Starting at line 331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 471 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        // setup for collecting optional entity info...
        EntityCollection entities = null;
        if (info != null) {
            entities = info.getOwner().getEntityCollection();
        }
=====================================================================
Found a 36 line (55 tokens) duplication in the following files: 
Starting at line 263 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 318 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java

        fireChangeEvent();
    }

    /**
     * Initialises the renderer and returns a state object that should be
     * passed to subsequent calls to the drawItem() method.  This method will
     * be called before the first item is rendered, giving the renderer an
     * opportunity to initialise any state information it wants to maintain.
     * The renderer can do nothing if it chooses.
     *
     * @param g2  the graphics device.
     * @param dataArea  the area inside the axes.
     * @param plot  the plot.
     * @param data  the data.
     * @param info  an optional info collection object to return data back to
     *              the caller.
     *
     * @return A state object.
     */
    @Override
    public XYItemRendererState initialise(Graphics2D g2, Rectangle2D dataArea,
            XYPlot plot, XYDataset data, PlotRenderingInfo info) {
        XYItemRendererState state = super.initialise(g2, dataArea, plot, data,
                info);
        state.setProcessVisibleItemsOnly(false);
        return state;
    }

    /**
     * Returns {@code 2}, the number of passes required by the renderer.
     * The {@link XYPlot} will run through the dataset this number of times.
     *
     * @return The number of passes required by the renderer.
     */
    @Override
    public int getPassCount() {
=====================================================================
Found a 36 line (55 tokens) duplication in the following files: 
Starting at line 289 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYShapeRenderer.java

    }

    /**
     * Returns {@code 2}, the number of passes required by the renderer.
     * The {@link XYPlot} will run through the dataset this number of times.
     *
     * @return The number of passes required by the renderer.
     */
    @Override
    public int getPassCount() {
        return 2;
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain (horizontal) axis.
     * @param rangeAxis  the range (vertical) axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {
=====================================================================
Found a 5 line (55 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 159 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

        this.millisecond = calendar.get(Calendar.MILLISECOND);
        this.second = (byte) calendar.get(Calendar.SECOND);
        this.minute = (byte) calendar.get(Calendar.MINUTE);
        this.hour = (byte) calendar.get(Calendar.HOUR_OF_DAY);
        this.day = new Day(time, zone, locale);
=====================================================================
Found a 30 line (55 tokens) duplication in the following files: 
Starting at line 492 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultIntervalXYDataset.java
Starting at line 334 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYDataset.java
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/DefaultXYZDataset.java

            if (!Arrays.equals(d1ye, d2ye)) {
                return false;
            }
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result;
        result = this.seriesKeys.hashCode();
        result = 29 * result + this.seriesList.hashCode();
        return result;
    }

    /**
     * Returns a clone of this dataset.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if the dataset contains a series with
     *         a key that cannot be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/BarChartTest.java
Starting at line 85 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LineChartTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/ScatterPlotTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedAreaChartTest.java
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/StackedBarChartTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/TimeSeriesChartTest.java
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYAreaChartTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYBarChartTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYLineChartTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepAreaChartTest.java
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/XYStepChartTest.java

        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            this.chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null,
                    null);
            g2.dispose();
        }
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 137 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java

        plot.setDomainAxis(new SubCategoryAxis("SubCategoryAxis"));
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
=====================================================================
Found a 9 line (55 tokens) duplication in the following files: 
Starting at line 485 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 521 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(8.0, 45.6), RectangleEdge.RIGHT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00100 - left item only
        container.clear();
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 6 line (55 tokens) duplication in the following files: 
Starting at line 680 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 690 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 700 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 721 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);
=====================================================================
Found a 10 line (55 tokens) duplication in the following files: 
Starting at line 712 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 733 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(16.0, size.height, EPSILON);

        // TBLRC
        // 11100
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.LEFT);
=====================================================================
Found a 5 line (55 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/JFreeChartTest.java
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/JFreeChartTest.java

    public void testEquals() {
        JFreeChart chart1 = new JFreeChart("Title",
                new Font("SansSerif", Font.PLAIN, 12), new PiePlot(), true);
        JFreeChart chart2 = new JFreeChart("Title",
                new Font("SansSerif", Font.PLAIN, 12), new PiePlot(), true);
=====================================================================
Found a 10 line (55 tokens) duplication in the following files: 
Starting at line 186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/StandardDialScaleTest.java
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/StandardDialScaleTest.java

        assertSame(s1.getClass(), s2.getClass());
        assertEquals(s1, s2);

        // try a customised instance
        s1 = new StandardDialScale();
        s1.setExtent(123.4);
        s1.setMajorTickPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f,
                4.0f, Color.WHITE));
        s1.setMajorTickStroke(new BasicStroke(2.0f));
        s2 = (StandardDialScale) s1.clone();
=====================================================================
Found a 12 line (55 tokens) duplication in the following files: 
Starting at line 265 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BarRendererTest.java
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

    /**
     * Some checks for the findRangeBounds() method.
     */
    @Test
    public void testFindRangeBounds() {
=====================================================================
Found a 5 line (55 tokens) duplication in the following files: 
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 340 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(1.0, 2.0, 0.0, 4.0, 0.5,
                    4.5, -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
=====================================================================
Found a 6 line (55 tokens) duplication in the following files: 
Starting at line 219 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 0, 10.0, 11.0));

        // check a series with one item
        d.addSeries("S2", new double[][] {{1.0}, {9.9}});
        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 0.0, 1.1));
        assertEquals(0, RendererUtils.findLiveItemsUpperBound(d, 1, 2.0, 3.3));
=====================================================================
Found a 8 line (55 tokens) duplication in the following files: 
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBlockRendererTest.java
Starting at line 166 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYShapeRendererTest.java

        XYBlockRenderer renderer = new XYBlockRenderer();
        assertNull(renderer.findRangeBounds(null));

        XYSeriesCollection<String> dataset = new XYSeriesCollection<>();
        XYSeries<String> series = new XYSeries<>("S1");
        series.add(1.0, null);
        dataset.addSeries(series);
        Range r = renderer.findDomainBounds(dataset);
=====================================================================
Found a 7 line (55 tokens) duplication in the following files: 
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java

    public void testGetValue() {
        DefaultCategoryDataset<String, String> underlying = new DefaultCategoryDataset<>();
        underlying.addValue(1.1, "R1", "C1");
        underlying.addValue(2.2, "R1", "C2");
        CategoryToPieDataset d1 = new CategoryToPieDataset(underlying,
                TableOrder.BY_ROW, 0);
        assertEquals(d1.getValue("C1"), 1.1);
=====================================================================
Found a 5 line (55 tokens) duplication in the following files: 
Starting at line 159 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjects2DTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjects2DTest.java

        data.addObject("Obj2", "R2", "C2");
        assertEquals("Obj1", data.getObject("R1", "C1"));
        assertEquals("Obj2", data.getObject("R2", "C2"));
        assertNull(data.getObject("R1", "C2"));
        assertNull(data.getObject("R2", "C1"));
=====================================================================
Found a 13 line (55 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 591 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertEquals(cal.getTime(), h.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(2006, Calendar.JANUARY, 8, 1, 59, 59);
=====================================================================
Found a 4 line (55 tokens) duplication in the following files: 
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java
Starting at line 226 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/ohlc/OHLCSeriesTest.java

        assertEquals(2, s1.getMaximumItemCount());
        s1.add(new Year(2006), 1.0, 1.1, 1.1, 1.1);
        s1.add(new Year(2007), 2.0, 2.2, 2.2, 2.2);
        s1.add(new Year(2008), 3.0, 3.3, 3.3, 3.3);
=====================================================================
Found a 6 line (55 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new Date[] {new Date(123L)}, new double[1], new double[1],
                new double[1], new double[1], new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
=====================================================================
Found a 5 line (55 tokens) duplication in the following files: 
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
                new double[1], new double[1], new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
=====================================================================
Found a 6 line (55 tokens) duplication in the following files: 
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultIntervalXYDatasetTest.java
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultIntervalXYDataset<String> d = createSampleDataset1();
        assertEquals(0, d.indexOf("S1"));
        assertEquals(1, d.indexOf("S2"));
        assertEquals(-1, d.indexOf("Green Eggs and Ham"));
        assertEquals(-1, d.indexOf(null));
    }
=====================================================================
Found a 26 line (54 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryPointerAnnotation.java
Starting at line 329 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 504 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPointerAnnotation.java
Starting at line 596 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYTextAnnotation.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 935 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialScale.java

        result = 37 * result + (int) (temp ^ (temp >>> 32));
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  if the annotation can't be cloned.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.arrowPaint, stream);
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 197 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/imagemap/ImageMapUtils.java
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/imagemap/ImageMapUtils.java

    public static String htmlEscape(String input) {
        Args.nullNotPermitted(input, "input");
        StringBuilder result = new StringBuilder();
        int length = input.length();
        for (int i = 0; i < length; i++) {
            char c = input.charAt(i);
            if (c == '&') {
=====================================================================
Found a 18 line (54 tokens) duplication in the following files: 
Starting at line 244 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/BubbleXYItemLabelGenerator.java
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYZToolTipGenerator.java

        BubbleXYItemLabelGenerator that = (BubbleXYItemLabelGenerator) obj;
        if (!Objects.equals(this.zFormat, that.zFormat)) {
            return false;
        }
        if (!Objects.equals(this.zDateFormat, that.zDateFormat)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int h = super.hashCode();
=====================================================================
Found a 9 line (54 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 617 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

                            - this.stripWidth, ww, this.stripWidth);
                    g2.setPaint(p);
                    g2.fill(r);
                }
                if (isStripOutlineVisible()) {
                    g2.setPaint(this.stripOutlinePaint);
                    g2.setStroke(this.stripOutlineStroke);
                    g2.draw(new Rectangle2D.Double(target.getMinX(),
                            target.getMaxY() - this.stripWidth,
=====================================================================
Found a 11 line (54 tokens) duplication in the following files: 
Starting at line 3478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3098 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 3112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                this.datasets.entrySet()) {
            if (entry.getValue() != null) {
                result.add(entry.getKey());
            }
        }
        Collections.sort(result);
        if (order == DatasetRenderingOrder.REVERSE) {
            Collections.reverse(result);
        }
        return result;
    }
=====================================================================
Found a 11 line (54 tokens) duplication in the following files: 
Starting at line 4642 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 5083 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (this.rangeZeroBaselineVisible != that.rangeZeroBaselineVisible) {
            return false;
        }
        if (!PaintUtils.equal(this.rangeZeroBaselinePaint,
                that.rangeZeroBaselinePaint)) {
            return false;
        }
        if (!Objects.equals(this.rangeZeroBaselineStroke, that.rangeZeroBaselineStroke)) {
            return false;
        }
        if (!Objects.equals(this.shadowGenerator, that.shadowGenerator)) {
=====================================================================
Found a 20 line (54 tokens) duplication in the following files: 
Starting at line 639 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 716 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 509 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeCategoryPlot.java
Starting at line 675 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

        CombinedDomainCategoryPlot that = (CombinedDomainCategoryPlot) obj;
        if (this.gap != that.gap) {
            return false;
        }
        if (!Objects.equals(this.subplots, that.subplots)) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a clone of the plot.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 4 line (54 tokens) duplication in the following files: 
Starting at line 613 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/CompassPlot.java
Starting at line 622 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/compass/CompassPlot.java

        for (int w = 45; w < 360; w += 90) {
            a = Math.toRadians(w);
            x1 = midX - ((int) (Math.sin(a) * innerRadius));
            y1 = midY - ((int) (Math.cos(a) * innerRadius));
=====================================================================
Found a 25 line (54 tokens) duplication in the following files: 
Starting at line 681 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java
Starting at line 334 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/ThermometerPlot.java

        ValueDataset existing = this.dataset;
        if (existing != null) {
            existing.removeChangeListener(this);
        }

        // set the new dataset, and register the chart as a change listener...
        this.dataset = dataset;
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self...
        DatasetChangeEvent event = new DatasetChangeEvent(this, dataset);
        datasetChanged(event);

    }

    /**
     * Returns an unmodifiable list of the intervals for the plot.
     *
     * @return A list.
     *
     * @see #addInterval(MeterInterval)
     */
    public List<MeterInterval> getIntervals() {
=====================================================================
Found a 29 line (54 tokens) duplication in the following files: 
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 628 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area in which the data is drawn.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the data (must be an instance of
     *                 {@link BoxAndWhiskerCategoryDataset}).
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
        Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
        ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
        int pass) {

        // do nothing if item is not visible
        if (!getItemVisible(row, column)) {
            return;
        }

        if (!(dataset instanceof BoxAndWhiskerCategoryDataset)) {
=====================================================================
Found a 24 line (54 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java
Starting at line 393 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/WaterfallBarRenderer.java

                    false);
        }

        // add an item entity, if this information is being collected
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }

    }

    /**
     * Tests this renderer for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof IntervalBarRenderer)) {
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 416 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

            Shape shape = getItemShape(row, column);
            if (orientation == PlotOrientation.HORIZONTAL) {
                shape = ShapeUtils.createTranslatedShape(shape, y1, x1);
            }
            else if (orientation == PlotOrientation.VERTICAL) {
                shape = ShapeUtils.createTranslatedShape(shape, x1, y1);
            }
=====================================================================
Found a 15 line (54 tokens) duplication in the following files: 
Starting at line 330 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/SlidingCategoryDataset.java
Starting at line 620 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/SlidingGanttCategoryDataset.java

        SlidingCategoryDataset that = (SlidingCategoryDataset) obj;
        if (this.firstCategoryIndex != that.firstCategoryIndex) {
            return false;
        }
        if (this.maximumCategoryCount != that.maximumCategoryCount) {
            return false;
        }
        if (!this.underlying.equals(that.underlying)) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode(){
=====================================================================
Found a 9 line (54 tokens) duplication in the following files: 
Starting at line 1448 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1570 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            XYDataset<S> dataset, List<S> visibleSeriesKeys, Range xRange, 
            boolean includeInterval) {

        Args.nullNotPermitted(dataset, "dataset");
        Args.nullNotPermitted(visibleSeriesKeys, "visibleSeriesKeys");
        Args.nullNotPermitted(xRange, "xRange");

        double minimum = Double.POSITIVE_INFINITY;
        double maximum = Double.NEGATIVE_INFINITY;
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java

    public Hour(Date time, TimeZone zone, Locale locale) {
        Args.nullNotPermitted(time, "time");
        Args.nullNotPermitted(zone, "zone");
        Args.nullNotPermitted(locale, "locale");
        Calendar calendar = Calendar.getInstance(zone, locale);
        calendar.setTime(time);
        this.hour = (byte) calendar.get(Calendar.HOUR_OF_DAY);
=====================================================================
Found a 39 line (54 tokens) duplication in the following files: 
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/TimePeriodValuesCollection.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/CategoryTableXYDataset.java

        return dp.getValue();
    }

    /**
     * Returns the starting Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The starting Y value for the specified series and item.
     */
    @Override
    public Number getStartY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Returns the ending Y value for the specified series and item.
     *
     * @param series  the series (zero-based index).
     * @param item  the item (zero-based index).
     *
     * @return The ending Y value for the specified series and item.
     */
    @Override
    public Number getEndY(int series, int item) {
        return getY(series, item);
    }

    /**
     * Returns the minimum x-value in the dataset.
     *
     * @param includeInterval  a flag that determines whether or not the
     *                         x-interval is taken into account.
     *
     * @return The minimum value.
     */
    @Override
    public double getDomainLowerBound(boolean includeInterval) {
=====================================================================
Found a 24 line (54 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/KeyHandler.java
Starting at line 68 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xml/ValueHandler.java

    public KeyHandler(RootHandler rootHandler, ItemHandler itemHandler) {
        this.rootHandler = rootHandler;
        this.itemHandler = itemHandler;
        this.currentText = new StringBuffer();
        //this.key = null;
    }

    /**
     * The start of an element.
     *
     * @param namespaceURI  the namespace.
     * @param localName  the element name.
     * @param qName  the element name.
     * @param atts  the attributes.
     *
     * @throws SAXException for errors.
     */
    @Override
    public void startElement(String namespaceURI,
                             String localName,
                             String qName,
                             Attributes atts) throws SAXException {

        if (qName.equals(KEY_TAG)) {
=====================================================================
Found a 13 line (54 tokens) duplication in the following files: 
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYBoxAnnotationTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/annotations/XYShapeAnnotationTest.java

        XYBoxAnnotation a2 = new XYBoxAnnotation(1.0, 2.0, 3.0, 4.0,
                new BasicStroke(1.2f), Color.RED, Color.BLUE);
        assertEquals(a1, a2);
        int h1 = a1.hashCode();
        int h2 = a2.hashCode();
        assertEquals(h1, h2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
=====================================================================
Found a 8 line (54 tokens) duplication in the following files: 
Starting at line 101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/AreaChartTest.java
Starting at line 144 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/GanttChartTest.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/WaterfallChartTest.java

        CategoryPlot<?, ?> plot = (CategoryPlot) this.chart.getPlot();
        CategoryItemRenderer renderer = plot.getRenderer();
        StandardCategoryURLGenerator url1
                = new StandardCategoryURLGenerator();
        renderer.setSeriesItemURLGenerator(0, url1);
        CategoryURLGenerator url2 = renderer.getItemURLGenerator(0, 0);
        assertSame(url2, url1);
    }
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 5 line (54 tokens) duplication in the following files: 
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f), true,
=====================================================================
Found a 14 line (54 tokens) duplication in the following files: 
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/AbstractDialLayerTest.java
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialCapTest.java

        assertEquals(c1, c2);
    }

    /**
     * Confirm that cloning works.
     */
    @Test
    public void testCloning() throws CloneNotSupportedException {
        // test a default instance
        DialCap c1 = new DialCap();
        DialCap c2 = CloneUtils.clone(c1);
        assertNotSame(c1, c2);
        assertSame(c1.getClass(), c2.getClass());
        assertEquals(c1, c2);
=====================================================================
Found a 7 line (54 tokens) duplication in the following files: 
Starting at line 292 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java
Starting at line 1016 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1039 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 74 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java

        JFreeChart chart = new JFreeChart(plot);
        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
=====================================================================
Found a 12 line (54 tokens) duplication in the following files: 
Starting at line 101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

    public void testFindLiveItemsLowerBound_Ascending() {
        var d = new DefaultXYDataset<String>() {
            @Override
            public DomainOrder getDomainOrder() {
                // we're doing this for testing only, and make sure that we
                // only add data in ascending order by x-value
                return DomainOrder.ASCENDING;
            }
        };
        // check a series with no items
        d.addSeries("S1", new double[][] {{}, {}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.1));
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 294 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 4.0, 5.5));

        // check a series with repeating items
        d.addSeries("S5", new double[][] {{1.0, 2.0, 2.0, 2.0, 3.0}, {9.9, 9.9,
                9.9, 9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 4.0));
=====================================================================
Found a 12 line (54 tokens) duplication in the following files: 
Starting at line 157 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 311 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

    public void testFindLiveItemsLowerBound_Descending() {
        var d = new DefaultXYDataset<String>() {
            @Override
            public DomainOrder getDomainOrder() {
                // we're doing this for testing only, and make sure that we
                // only add data in descending order by x-value
                return DomainOrder.DESCENDING;
            }
        };
        // check a series with no items
        d.addSeries("S1", new double[][] {{}, {}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0, 11.0));
=====================================================================
Found a 9 line (54 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java

        StandardXYItemRenderer r2 = CloneUtils.clone(r1);
        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);

        // check independence
        rect1.setRect(4.0, 3.0, 2.0, 1.0);
        assertNotEquals(r1, r2);
        r2.setLegendLine(new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0));
=====================================================================
Found a 5 line (54 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/SlidingCategoryDatasetTest.java

    public void testEquals() {
        DefaultCategoryDataset<String, String> u1 = new DefaultCategoryDataset<>();
        u1.addValue(1.0, "R1", "C1");
        u1.addValue(2.0, "R1", "C2");
        SlidingCategoryDataset<String, String> d1 = new SlidingCategoryDataset<>(u1, 0, 5);
=====================================================================
Found a 10 line (54 tokens) duplication in the following files: 
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

        data.addValue("D", null);

        // check key order
        assertEquals(data.getKey(0), "A");
        assertEquals(data.getKey(1), "B");
        assertEquals(data.getKey(2), "C");
        assertEquals(data.getKey(3), "D");

        // check retrieve value by key
        assertEquals(data.getValue("A"), 1.0);
=====================================================================
Found a 10 line (54 tokens) duplication in the following files: 
Starting at line 1409 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 1463 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        assertEquals(7.5, DatasetUtils.findYValue(dataset, 0, 1.5), EPSILON);
        assertEquals(10.0, DatasetUtils.findYValue(dataset, 0, 2.0), EPSILON);
        assertTrue(Double.isNaN(DatasetUtils.findYValue(dataset, 0, 3.0)));
    }
    
    /**
     * Check the findYValue() method with a dataset that is not sorted.
     */
    @Test
    public void testFindYValueNonSorted() {
=====================================================================
Found a 14 line (54 tokens) duplication in the following files: 
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjectsTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjectTest.java

        KeyedObjects<String> ko2 = CloneUtils.clone(ko1);
        assertNotSame(ko1, ko2);
        assertSame(ko1.getClass(), ko2.getClass());
        assertEquals(ko1, ko2);
    }

    /**
     * Confirm special features of cloning.
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning2() throws CloneNotSupportedException {
        // case 1 - object is mutable but not PublicCloneable
        Object obj1 = new ArrayList<>();
=====================================================================
Found a 12 line (54 tokens) duplication in the following files: 
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 70 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java

        assertEquals(millisecond, millisecond);
    }

    /**
     * Tests the equals method.
     */
    @Test
    public void testEquals() {
        Day day1 = new Day(29, MonthConstants.MARCH, 2002);
        Hour hour1 = new Hour(15, day1);
        Minute minute1 = new Minute(15, hour1);
        Second second1 = new Second(34, minute1);
=====================================================================
Found a 16 line (54 tokens) duplication in the following files: 
Starting at line 461 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 425 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java

            assertEquals(0L, m.getMillisecond());
            assertEquals(0L, m.getFirstMillisecond());
        } finally {
            // reset everything, to avoid affecting other tests
            RegularTimePeriod.setThreadLocalCalendarInstance(null);
            RegularTimePeriod.setCalendarInstancePrototype(null);
        }
    }

    /**
     * Some checks for the getStart() method.
     */
    @Test
    public void testGetStart() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
=====================================================================
Found a 13 line (54 tokens) duplication in the following files: 
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 371 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        Minute m = new Minute(45, 5, 1, 2, 2003);
        assertFalse(m instanceof Cloneable);
    }

    /**
     * Some checks for the getFirstMillisecond() method.
     */
    @Test
    public void testGetFirstMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 221 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 1015 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

    public void testDelete_RegularTimePeriod() {
        TimeSeries<String> s1 = new TimeSeries<>("S1");
        s1.add(new Year(2010), 1.1);
        s1.add(new Year(2011), 2.2);
        s1.add(new Year(2012), 3.3);
        s1.add(new Year(2013), 4.4);
=====================================================================
Found a 4 line (54 tokens) duplication in the following files: 
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[1],
                new double[1]);
=====================================================================
Found a 9 line (54 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 187 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        d.addSeries("S1", new double[][] {{11.0}, {12.0}});
        assertEquals(1, d.getSeriesCount());
        assertEquals(12.0, d.getYValue(0, 0), EPSILON);

        // check null key
        boolean pass = false;
        try
        {
          d.addSeries(null, new double[][] {{1.0}, {2.0}});
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 170 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java

    public void testIndexOf2() {
        VectorSeries<String> s1 = new VectorSeries<>("Series 1");
        s1.add(1.0, 1.0, 1.0, 2.0);
        s1.add(3.0, 3.0, 3.0, 3.0);
        s1.add(2.0, 2.0, 2.0, 2.0);
        assertEquals(0, s1.indexOf(new XYCoordinate(1.0, 1.0)));
=====================================================================
Found a 8 line (54 tokens) duplication in the following files: 
Starting at line 707 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 747 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java

    public void testUpdateByIndex2() {
        XYSeries<String> s1 = new XYSeries<>("S1");
        s1.add(1.0, Double.NaN);

        assertTrue(Double.isNaN(s1.getMinY()));
        assertTrue(Double.isNaN(s1.getMaxY()));

        s1.updateByIndex(0, 1.0);
=====================================================================
Found a 26 line (53 tokens) duplication in the following files: 
Starting at line 381 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java
Starting at line 619 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/Marker.java

    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
=====================================================================
Found a 11 line (53 tokens) duplication in the following files: 
Starting at line 401 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 885 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java

    protected List refreshTicksHorizontal(Graphics2D g2, Rectangle2D dataArea,
            RectangleEdge edge) {

        List result = new java.util.ArrayList();

        Font tickLabelFont = getTickLabelFont();
        g2.setFont(tickLabelFont);

        if (isAutoTickUnitSelection()) {
            selectAutoTickUnit(g2, dataArea, edge);
        }
=====================================================================
Found a 17 line (53 tokens) duplication in the following files: 
Starting at line 423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java
Starting at line 572 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CyclicNumberAxis.java

        float lastX = 0.0f;

        if (upperValue == cycleBound) {
            currentTickValue = calculateLowestVisibleTickValue();
            cycled = true;
            this.boundMappedToLastCycle = true;
        }

        while (currentTickValue <= upperValue) {

            // Cycle when necessary
            boolean cyclenow = false;
            if ((currentTickValue + unit > upperValue) && !cycled) {
                cyclenow = true;
            }

            double xx = valueToJava2D(currentTickValue, dataArea, edge);
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 508 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java
Starting at line 1032 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

        long lower = Math.round(range.getLowerBound());
        this.first = createInstance(this.autoRangeTimePeriodClass,
                new Date(lower), this.timeZone, this.locale);
        this.last = createInstance(this.autoRangeTimePeriodClass,
                new Date(upper), this.timeZone, this.locale);
=====================================================================
Found a 31 line (53 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/ColorBlock.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ImageTitle.java

        g2.fill(area);
    }

    /**
     * Draws the block within the specified area.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     * @param params  ignored ({@code null} permitted).
     *
     * @return Always {@code null}.
     */
    @Override
    public Object draw(Graphics2D g2, Rectangle2D area, Object params) {
        draw(g2, area);
        return null;
    }

    /**
     * Tests this block for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof ColorBlock)) {
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 427 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/ShapeUtils.java
Starting at line 450 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/internal/ShapeUtils.java

    public static boolean contains(Rectangle2D rect1, Rectangle2D rect2) {
        Args.nullNotPermitted(rect1, "rect1");
        Args.nullNotPermitted(rect2, "rect2");
        final double x0 = rect1.getX();
        final double y0 = rect1.getY();
        final double x = rect2.getX();
        final double y = rect2.getY();
=====================================================================
Found a 29 line (53 tokens) duplication in the following files: 
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.java
Starting at line 113 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java

        result[0] = dataset.getRowKey(series).toString();
        return result;
    }

    /**
     * Returns an independent copy of the generator.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if cloning is not supported.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the other object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof StandardCategorySeriesLabelGenerator)) {
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 528 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 553 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 582 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java
Starting at line 607 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

            if (axisEdge == RectangleEdge.TOP) {
                for (int i = 0; i < this.subdivisions; i++) {
                    double v = base + (i * increment);
                    Paint p = this.scale.getPaint(v);
                    double vv0 = this.axis.valueToJava2D(v, target,
                            RectangleEdge.TOP);
=====================================================================
Found a 8 line (53 tokens) duplication in the following files: 
Starting at line 371 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 382 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 318 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            else if (orientation == PlotOrientation.VERTICAL) {
                double h = usableSize * plot.getWeight() / totalWeight;
                this.subplotAreas[i] = new Rectangle2D.Double(x, y,
                        adjustedPlotArea.getWidth(), h);
                y = y + h + this.gap;
            }

            AxisSpace subSpace = plot.calculateRangeAxisSpace(g2,
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 368 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainXYPlot.java
Starting at line 304 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

        else if (orientation == PlotOrientation.VERTICAL) {
            usableSize = adjustedPlotArea.getHeight() - this.gap * (n - 1);
        }

        for (int i = 0; i < n; i++) {
            XYPlot plot = (XYPlot) this.subplots.get(i);

            // calculate sub-plot area
            if (orientation == PlotOrientation.HORIZONTAL) {
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 668 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

    protected void calculateBarWidth(CategoryPlot plot,
                                     Rectangle2D dataArea,
                                     int rendererIndex,
                                     CategoryItemRendererState state) {

        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);
        CategoryDataset dataset = plot.getDataset(rendererIndex);
        if (dataset != null) {
            int columns = dataset.getColumnCount();
            int rows = state.getVisibleSeriesCount() >= 0
=====================================================================
Found a 8 line (53 tokens) duplication in the following files: 
Starting at line 967 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/IntervalBarRenderer.java
Starting at line 423 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

        if (state.getElementHinting()) {
            endElementGroup(g2);
        }
        
        CategoryItemLabelGenerator generator = getItemLabelGenerator(row,
                column);
        if (generator != null && isItemLabelVisible(row, column)) {
            drawItemLabel(g2, dataset, row, column, plot, generator, bar,
=====================================================================
Found a 26 line (53 tokens) duplication in the following files: 
Starting at line 305 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java

                    value < base);
        }

        // collect entity and tool tip information...
        EntityCollection entities = state.getEntityCollection();
        if (entities != null) {
            addItemEntity(entities, dataset, row, column, bar);
        }
    }

    /**
     * Draws the bar for a single (series, category) data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     */
    protected void drawVerticalItem(Graphics2D g2,
            CategoryItemRendererState state, Rectangle2D dataArea,
            CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis,
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 311 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/ClusteredXYBarRenderer.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java

            if (info != null) {
                EntityCollection entities
                        = info.getOwner().getEntityCollection();
                if (entities != null) {
                    addEntity(entities, bar, dataset, series, item,
                            bar.getCenterX(), bar.getCenterY());
                }
            }
        }
=====================================================================
Found a 31 line (53 tokens) duplication in the following files: 
Starting at line 338 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 272 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java

        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  information about crosshairs on a plot.
     * @param pass  the pass index.
     *
     * @throws ClassCastException if {@code state} is not an instance of
     *         {@code StackedXYAreaRendererState} or {@code dataset}
     *         is not an instance of {@link TableXYDataset}.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        PlotOrientation orientation = plot.getOrientation();
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 680 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 375 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java

        PlotOrientation orientation = plot.getOrientation();
        Paint paint = getItemPaint(series, item);
        Stroke seriesStroke = getItemStroke(series, item);
        g2.setPaint(paint);
        g2.setStroke(seriesStroke);

        // get the data point...
        double x1 = dataset.getXValue(series, item);
        double y1 = dataset.getYValue(series, item);
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/VectorRenderer.java
Starting at line 698 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                }
            }
        }
        else {
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    lvalue = dataset.getXValue(series, item);
                    uvalue = lvalue;
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 475 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java
Starting at line 504 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextUtils.java

            double angle, float rotationX, float rotationY) {

        if (text == null || text.equals("")) {
            return;
        }
        if (angle == 0.0) {
            drawAlignedString(text, g2, x, y, textAnchor);
        } else {
            float[] textAdj = deriveTextBoundsAnchorOffsets(g2, text, 
                    textAnchor);
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ImageTitle.java
Starting at line 297 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ImageTitle.java

                throw new IllegalStateException("Unexpected horizontal alignment.");
        }
        g2.drawImage(this.image, (int) startX, (int) startY, (int) w, (int) h,
                null);

        return new Size2D(chartArea.getWidth() + leftSpace + rightSpace,
            h + topSpace + bottomSpace);

    }
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 350 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 389 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 442 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java

    public Number getStartValue(R rowKey, C columnKey) {
        Number result = null;
        int row = getRowIndex(rowKey);
        TaskSeries<R> series = this.data.get(row);
        Task task = series.get(columnKey.toString());
        if (task != null) {
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 2048 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 2101 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            int seriesCount = dataset.getRowCount();
            for (int series = 0; series < seriesCount; series++) {
                Number number = dataset.getValue(series, item);
                if (number != null) {
                    hasValidData = true;
                    double value = number.doubleValue();
                    if (value > 0.0) {
=====================================================================
Found a 20 line (53 tokens) duplication in the following files: 
Starting at line 329 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java

        calendar.set(year, month, dom, this.hour, 0, 0);
        calendar.set(Calendar.MILLISECOND, 0);
        return calendar.getTimeInMillis();
    }

    /**
     * Returns the last millisecond of the hour.
     *
     * @param calendar  the calendar/timezone ({@code null} not permitted).
     *
     * @return The last millisecond.
     *
     * @throws NullPointerException if {@code calendar} is
     *     {@code null}.
     */
    @Override
    public long getLastMillisecond(Calendar calendar) {
        int year = this.day.getYear();
        int month = this.day.getMonth() - 1;
        int dom = this.day.getDayOfMonth();
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java

    public Minute(Date time, TimeZone zone, Locale locale) {
        Args.nullNotPermitted(time, "time");
        Args.nullNotPermitted(zone, "zone");
        Args.nullNotPermitted(locale, "locale");
        Calendar calendar = Calendar.getInstance(zone, locale);
        calendar.setTime(time);
        int min = calendar.get(Calendar.MINUTE);
=====================================================================
Found a 16 line (53 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Quarter.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Quarter.java

        calendar.setTime(time);
        int month = calendar.get(Calendar.MONTH) + 1;
        this.quarter = (byte) SerialDate.monthCodeToQuarter(month);
        this.year = (short) calendar.get(Calendar.YEAR);
        peg(calendar);
    }

    /**
     * Constructs a new instance, based on a particular date/time.
     * The time zone and locale are determined by the {@code calendar}
     * parameter.
     *
     * @param time the date/time ({@code null} not permitted).
     * @param calendar the calendar to use for calculations ({@code null} not permitted).
     */
    public Quarter(Date time, Calendar calendar) {
=====================================================================
Found a 19 line (53 tokens) duplication in the following files: 
Starting at line 302 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java
Starting at line 161 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYSeriesCollection.java
Starting at line 291 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java

    public void removeSeries(XIntervalSeries<S> series) {
        Args.nullNotPermitted(series, "series");
        if (this.data.contains(series)) {
            series.removeChangeListener(this);
            this.data.remove(series);
            fireDatasetChanged();
        }
    }

    /**
     * Removes all the series from the collection and sends a
     * {@link DatasetChangeEvent} to all registered listeners.
     *
     * @since 1.0.10
     */
    public void removeAllSeries() {
        // Unregister the collection as a change listener to each series in
        // the collection.
        for (XIntervalSeries series : this.data) {
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 138 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 885 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 590 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java
Starting at line 994 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1017 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1040 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        try {
            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 152 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 233 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 247 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 214 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 227 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 240 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.YELLOW, new BasicStroke(2.1f),
                false, new Line2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 1077 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1180 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1220 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1239 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1262 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1308 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1332 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1358 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        XYDataset<String> dataset = new XYSeriesCollection<>();
        NumberAxis xAxis = new NumberAxis("X");
        NumberAxis yAxis = new NumberAxis("Y");
        XYItemRenderer renderer = new DefaultXYItemRenderer();
        XYPlot<String> plot = new XYPlot<>(dataset, xAxis, yAxis, renderer);
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 366 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(1.0, 2.0, 0.0, 4.0, 0.5,
                    4.5, -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRendererTest.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYBarRendererTest.java

    public void testFindRangeBounds() {
        TableXYDataset<String> dataset
                = RendererXYPackageUtils.createTestTableXYDataset();
        JFreeChart chart = ChartFactory.createStackedXYAreaChart(
                "Test Chart", "X", "Y", dataset, PlotOrientation.VERTICAL,
                false, false, false);
        XYPlot<?> plot = (XYPlot) chart.getPlot();
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 72 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java
Starting at line 115 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java

    public void testGetValue() {
        DefaultCategoryDataset<String, String> underlying = new DefaultCategoryDataset<>();
        underlying.addValue(1.1, "R1", "C1");
        underlying.addValue(2.2, "R1", "C2");
        CategoryToPieDataset d1 = new CategoryToPieDataset(underlying,
                TableOrder.BY_ROW, 0);
        assertEquals(d1.getValue("C1"), 1.1);
=====================================================================
Found a 10 line (53 tokens) duplication in the following files: 
Starting at line 293 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/KeyedObjectsTest.java

        data.addValue("D", null);

        // check key order
        assertEquals(data.getKey(0), "A");
        assertEquals(data.getKey(1), "B");
        assertEquals(data.getKey(2), "C");
        assertEquals(data.getKey(3), "D");

        // check retrieve value by key
        assertEquals(data.getValue("A"), 1.0);
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 343 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 377 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

    public void testSortByKeyAscending() {

        DefaultKeyedValues<String> data = new DefaultKeyedValues<>();
        data.addValue("C", 1.0);
        data.addValue("B", null);
        data.addValue("D", 3.0);
        data.addValue("A", 2.0);

        data.sortByKeys(SortOrder.ASCENDING);
=====================================================================
Found a 9 line (53 tokens) duplication in the following files: 
Starting at line 411 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 445 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

    public void testSortByValueAscending() {

        DefaultKeyedValues<String> data = new DefaultKeyedValues<>();
        data.addValue("C", 1.0);
        data.addValue("B", null);
        data.addValue("D", 3.0);
        data.addValue("A", 2.0);

        data.sortByValues(SortOrder.ASCENDING);
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 276 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 344 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java

    public void testGetStartValue3() {
        TaskSeriesCollection<String, String> c = new TaskSeriesCollection<>();
        TaskSeries<String> s = new TaskSeries<>("Series 1");
        s.add(new Task("Task with null duration", null));
        c.add(s);
        Number millis = c.getStartValue("Series 1", "Task with null duration");
=====================================================================
Found a 7 line (53 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java
Starting at line 168 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/RegressionTest.java

        for (int i = 0; i < 11; i++) {
            series.add(data[i][0], data[i][1]);
        }
        XYDataset<String> ds = new XYSeriesCollection<>(series);
        double[] result = Regression.getPowerRegression(ds, 0);

        assertEquals(0.91045813, result[0], 0.0000001);
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 78 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new Date[] {new Date(123L)}, new double[1], new double[1],
                new double[1], new double[1], new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[1], new double[1],
=====================================================================
Found a 5 line (53 tokens) duplication in the following files: 
Starting at line 109 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[1],
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[1]);
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[1]);
=====================================================================
Found a 4 line (53 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 172 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[] {5.6}, new double[] {7.8},
                new double[] {99.9});
=====================================================================
Found a 18 line (53 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultTableXYDatasetTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/TableXYDatasetTest.java

        assertNotEquals(d1, d2);
    }

    /**
     * Verify that this class implements {@link PublicCloneable}.
     */
    @Test
    public void testPublicCloneable() {
        DefaultTableXYDataset<String> d1 = new DefaultTableXYDataset<>();
        assertTrue(d1 instanceof PublicCloneable);
    }

    /**
     * Serialize an instance, restore it, and check for equality.
     */
    @Test
    public void testSerialization() {
        DefaultTableXYDataset<String> d1 = new DefaultTableXYDataset<>();
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesTest.java
Starting at line 244 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        VectorSeries<String> s1 = new VectorSeries<>("S1");
        s1.add(1.0, 1.1, 1.1, 1.1);
        s1.add(2.0, 2.2, 2.2, 2.2);
        s1.add(3.0, 3.3, 3.3, 3.3);
        s1.setMaximumItemCount(2);
        assertEquals(2.0, s1.getXValue(0), EPSILON);
=====================================================================
Found a 20 line (52 tokens) duplication in the following files: 
Starting at line 266 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java
Starting at line 196 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java

        addEntity(info, box, rendererIndex, getToolTipText(), getURL());
    }

    /**
     * Tests this annotation for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        // now try to reject equality
        if (!super.equals(obj)) {
            return false;
        }
        if (!(obj instanceof XYBoxAnnotation)) {
=====================================================================
Found a 29 line (52 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/EmptyBlock.java
Starting at line 287 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 156 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/CompositeTitle.java

        return constraint.calculateConstrainedSize(base);
    }

    /**
     * Draws the block.  Since the block is empty, there is nothing to draw
     * except the optional border.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area) {
        draw(g2, area, null);
    }

    /**
     * Draws the block within the specified area.  Since the block is empty,
     * there is nothing to draw except the optional border.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     * @param params  ignored ({@code null} permitted).
     *
     * @return Always {@code null}.
     */
    @Override
    public Object draw(Graphics2D g2, Rectangle2D area, Object params) {
        area = trimMargin(area);
        drawBorder(g2, area);
=====================================================================
Found a 52 line (52 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/ChartEntity.java
Starting at line 631 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java

    }

    /**
     * Returns the tool tip text.
     *
     * @return The tool tip text (possibly {@code null}).
     *
     * @see #setToolTipText(String)
     */
    public String getToolTipText() {
        return this.toolTipText;
    }

    /**
     * Sets the tool tip text.
     *
     * @param text  the text ({@code null} permitted).
     *
     * @see #getToolTipText()
     */
    public void setToolTipText(String text) {
        this.toolTipText = text;
    }

    /**
     * Returns the URL text.
     *
     * @return The URL text (possibly {@code null}).
     *
     * @see #setURLText(String)
     */
    public String getURLText() {
        return this.urlText;
    }

    /**
     * Sets the URL text.
     *
     * @param text  the text ({@code null} permitted).
     *
     * @see #getURLText()
     */
    public void setURLText(String text) {
        this.urlText = text;
    }

    /**
     * Returns the content alignment point.
     *
     * @return The content alignment point (never {@code null}).
     */
    public TextBlockAnchor getContentAlignmentPoint() {
=====================================================================
Found a 28 line (52 tokens) duplication in the following files: 
Starting at line 377 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 851 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/CandlestickRenderer.java

        if (!this.textAnchor.equals(that.textAnchor)) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a clone of this {@code LabelBlock} instance.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if there is a problem cloning.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 301 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

            boolean legend, boolean tooltips, Locale locale) {

        PiePlot plot = new PiePlot(dataset);
        plot.setLabelGenerator(new StandardPieSectionLabelGenerator(locale));
        plot.setInsets(new RectangleInsets(0.0, 5.0, 5.0, 5.0));
        if (tooltips) {
            plot.setToolTipGenerator(new StandardPieToolTipGenerator(locale));
        }
=====================================================================
Found a 7 line (52 tokens) duplication in the following files: 
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartUtils.java
Starting at line 507 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartUtils.java

    public static void saveChartAsJPEG(File file, JFreeChart chart,
            int width, int height, ChartRenderingInfo info) throws IOException {

        Args.nullNotPermitted(file, "file");
        Args.nullNotPermitted(chart, "chart");
        try (OutputStream out = new BufferedOutputStream(new FileOutputStream(file))) {
            writeChartAsJPEG(out, chart, width, height, info);
=====================================================================
Found a 26 line (52 tokens) duplication in the following files: 
Starting at line 145 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/MultipleXYSeriesLabelGenerator.java
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java

    }

    /**
     * Creates the array of items that can be passed to the
     * {@link MessageFormat} class for creating labels.
     *
     * @param dataset  the dataset ({@code null} not permitted).
     * @param series  the series (zero-based index).
     *
     * @return The items (never {@code null}).
     */
    protected Object[] createItemArray(XYDataset dataset, int series) {
        Object[] result = new Object[1];
        result[0] = dataset.getSeriesKey(series).toString();
        return result;
    }

    /**
     * Returns an independent copy of the generator.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException if cloning is not supported.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
=====================================================================
Found a 54 line (52 tokens) duplication in the following files: 
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendGraphic.java
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextBox.java

    }

    /**
     * Returns the outline paint.
     *
     * @return The paint.
     *
     * @see #setOutlinePaint(Paint)
     */
    public Paint getOutlinePaint() {
        return this.outlinePaint;
    }

    /**
     * Sets the outline paint.
     *
     * @param paint  the paint.
     *
     * @see #getOutlinePaint()
     */
    public void setOutlinePaint(Paint paint) {
        this.outlinePaint = paint;
    }

    /**
     * Returns the outline stroke.
     *
     * @return The stroke.
     *
     * @see #setOutlineStroke(Stroke)
     */
    public Stroke getOutlineStroke() {
        return this.outlineStroke;
    }

    /**
     * Sets the outline stroke.
     *
     * @param stroke  the stroke.
     *
     * @see #getOutlineStroke()
     */
    public void setOutlineStroke(Stroke stroke) {
        this.outlineStroke = stroke;
    }

    /**
     * Returns the shape anchor.
     *
     * @return The shape anchor.
     *
     * @see #getShapeAnchor()
     */
    public RectangleAnchor getShapeAnchor() {
=====================================================================
Found a 17 line (52 tokens) duplication in the following files: 
Starting at line 2103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4218 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        if (getParent() != null) {
            getParent().datasetChanged(event);
        } else {
            PlotChangeEvent e = new PlotChangeEvent(this);
            e.setType(ChartChangeEventType.DATASET_UPDATED);
            notifyListeners(e);
        }

    }

    /**
     * Receives notification of a renderer change event.
     *
     * @param event  the event.
     */
    @Override
    public void rendererChanged(RendererChangeEvent event) {
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 291 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedRangeXYPlot.java

            CategoryPlot sub = (CategoryPlot) this.subplots.get(i);
            totalWeight += sub.getWeight();
        }
        this.subplotAreas = new Rectangle2D[n];
        double x = adjustedPlotArea.getX();
        double y = adjustedPlotArea.getY();
        double usableSize = 0.0;
        if (orientation == PlotOrientation.HORIZONTAL) {
=====================================================================
Found a 28 line (52 tokens) duplication in the following files: 
Starting at line 175 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 254 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPointer.java

        this.foregroundPaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the stroke.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setStroke(Stroke)
     */
    public Stroke getStroke() {
        return this.stroke;
    }

    /**
     * Sets the stroke and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getStroke()
     */
    public void setStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.stroke = stroke;
        notifyListeners(new DialLayerChangeEvent(this));
    }
=====================================================================
Found a 18 line (52 tokens) duplication in the following files: 
Starting at line 435 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/ArcDialFrame.java
Starting at line 283 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

        if (this.outerRadius != that.outerRadius) {
            return false;
        }
        if (!this.stroke.equals(that.stroke)) {
            return false;
        }
        return super.equals(obj);
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return The hash code.
     */
    @Override
    public int hashCode() {
        int result = 193;
        long temp = Double.doubleToLongBits(this.startAngle);
=====================================================================
Found a 28 line (52 tokens) duplication in the following files: 
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialCap.java
Starting at line 400 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        this.outlinePaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the stroke used to draw the outline of the cap.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setOutlineStroke(Stroke)
     */
    public Stroke getOutlineStroke() {
        return this.outlineStroke;
    }

    /**
     * Sets the stroke used to draw the outline of the cap and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param stroke  the stroke ({@code null} not permitted).
     *
     * @see #getOutlineStroke()
     */
    public void setOutlineStroke(Stroke stroke) {
        Args.nullNotPermitted(stroke, "stroke");
        this.outlineStroke = stroke;
        notifyListeners(new DialLayerChangeEvent(this));
    }
=====================================================================
Found a 37 line (52 tokens) duplication in the following files: 
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialTextAnnotation.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint used to display the label.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setPaint(Paint)
     */
    public Paint getPaint() {
        return this.paint;
    }

    /**
     * Sets the paint used to display the label and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getPaint()
     */
    public void setPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.paint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the angle used to calculate the anchor point.
     *
     * @return The angle (in degrees).
     *
     * @see #setAngle(double)
     * @see #getRadius()
     */
    public double getAngle() {
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 935 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java
Starting at line 971 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterPlot.java

        double startAngle = valueToAngle(maxValue);
        double endAngle = valueToAngle(minValue);
        double extent = endAngle - startAngle;

        double x = area.getX();
        double y = area.getY();
        double w = area.getWidth();
        double h = area.getHeight();
=====================================================================
Found a 27 line (52 tokens) duplication in the following files: 
Starting at line 159 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/MultiplePiePlot.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/SpiderWebPlot.java
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/WaferMapPlot.java

    public void setDataset(CategoryDataset dataset) {
        // if there is an existing dataset, remove the plot from the list of
        // change listeners...
        if (this.dataset != null) {
            this.dataset.removeChangeListener(this);
        }

        // set the new dataset, and register the chart as a change listener...
        this.dataset = dataset;
        if (dataset != null) {
            dataset.addChangeListener(this);
        }

        // send a dataset change event to self to trigger plot change event
        datasetChanged(new DatasetChangeEvent(this, dataset));
    }

    /**
     * Returns the pie chart that is used to draw the individual pie plots.
     * Note that there are some attributes on this chart instance that will
     * be ignored at rendering time (for example, legend item settings).
     *
     * @return The pie chart (never {@code null}).
     *
     * @see #setPieChart(JFreeChart)
     */
    public JFreeChart getPieChart() {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 832 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BarRenderer.java
Starting at line 472 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 171 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 580 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 467 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 624 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/DefaultPolarItemRenderer.java
Starting at line 752 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 520 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StandardXYItemRenderer.java
Starting at line 386 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer.java
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYAreaRenderer2.java
Starting at line 637 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBarRenderer.java
Starting at line 274 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBubbleRenderer.java
Starting at line 1076 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDifferenceRenderer.java
Starting at line 267 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 1030 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

        String toolTipText = null;
        if (getLegendItemToolTipGenerator() != null) {
            toolTipText = getLegendItemToolTipGenerator().generateLabel(
                    dataset, series);
        }
        String urlText = null;
        if (getLegendItemURLGenerator() != null) {
            urlText = getLegendItemURLGenerator().generateLabel(dataset,
                    series);
        }
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 296 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/WaferMapRenderer.java
Starting at line 319 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/WaferMapRenderer.java

                    Paint paint = lookupSeriesPaint(
                            ((Integer) entry.getValue()).intValue());
                    Paint outlinePaint = Color.BLACK;
                    Stroke outlineStroke = DEFAULT_STROKE;

                    result.add(new LegendItem(label, description, null,
                            null, shape, paint, outlineStroke, outlinePaint));

                }
            }
=====================================================================
Found a 30 line (52 tokens) duplication in the following files: 
Starting at line 339 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 273 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBoxAndWhiskerRenderer.java
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYStepAreaRenderer.java

    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the data is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  information about crosshairs on a plot.
     * @param pass  the pass index.
     *
     * @throws ClassCastException if {@code state} is not an instance of
     *         {@code StackedXYAreaRendererState} or {@code dataset}
     *         is not an instance of {@link TableXYDataset}.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {

        PlotOrientation orientation = plot.getOrientation();
=====================================================================
Found a 30 line (52 tokens) duplication in the following files: 
Starting at line 184 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java
Starting at line 371 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java

                        (TableXYDataset) dataset);
            }
        } else {
            return null;
        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color information
     *              etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 2034 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 2103 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java

    public void zoomInDomain(double x, double y) {
        Plot plot = this.chart.getPlot();
        if (plot instanceof Zoomable) {
            // here we tweak the notify flag on the plot so that only
            // one notification happens even though we update multiple
            // axes...
            boolean savedNotify = plot.isNotify();
            plot.setNotify(false);
            Zoomable z = (Zoomable) plot;
            z.zoomDomainAxes(this.zoomInFactor, this.info.getPlotInfo(),
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 2058 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java
Starting at line 2127 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/ChartPanel.java

    public void zoomInRange(double x, double y) {
        Plot plot = this.chart.getPlot();
        if (plot instanceof Zoomable) {
            // here we tweak the notify flag on the plot so that only
            // one notification happens even though we update multiple
            // axes...
            boolean savedNotify = plot.isNotify();
            plot.setNotify(false);
            Zoomable z = (Zoomable) plot;
            z.zoomRangeAxes(this.zoomInFactor, this.info.getPlotInfo(),
=====================================================================
Found a 40 line (52 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultCategoryDataset.java
Starting at line 64 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/TestIntervalCategoryDataset.java

        this.data = new DefaultKeyedValues2D<>();
    }

    /**
     * Returns the number of rows in the table.
     *
     * @return The row count.
     *
     * @see #getColumnCount()
     */
    @Override
    public int getRowCount() {
        return this.data.getRowCount();
    }

    /**
     * Returns the number of columns in the table.
     *
     * @return The column count.
     *
     * @see #getRowCount()
     */
    @Override
    public int getColumnCount() {
        return this.data.getColumnCount();
    }

    /**
     * Returns a value from the table.
     *
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     *
     * @return The value (possibly {@code null}).
     *
     * @see #addValue(Number, Comparable, Comparable)
     * @see #removeValue(Comparable, Comparable)
     */
    @Override
    public Number getValue(int row, int column) {
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java
Starting at line 628 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/TaskSeriesCollection.java

        series.addChangeListener(this);

        // look for any keys that we don't already know about...
        for (Task task : series.getTasks()) {
            C key = (C) task.getDescription(); // FIXME
            int index = this.keys.indexOf(key);
            if (index < 0) {
                this.keys.add(key);
            }
        }
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java
Starting at line 135 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Millisecond.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Week.java

    public Day(Date time, TimeZone zone, Locale locale) {
        Args.nullNotPermitted(time, "time");
        Args.nullNotPermitted(zone, "zone");
        Args.nullNotPermitted(locale, "locale");
        Calendar calendar = Calendar.getInstance(zone, locale);
        calendar.setTime(time);
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 331 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java

    public long getFirstMillisecond(Calendar calendar) {
        int year = this.serialDate.getYYYY();
        int month = this.serialDate.getMonth();
        int day = this.serialDate.getDayOfMonth();
        calendar.clear();
        calendar.set(year, month - 1, day, 0, 0, 0);
=====================================================================
Found a 23 line (52 tokens) duplication in the following files: 
Starting at line 431 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/ohlc/OHLCSeriesCollection.java
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java

            OHLCSeries series = (OHLCSeries) this.data.get(i);
            series.removeChangeListener(this);
        }

        // remove all the series from the collection and notify listeners.
        this.data.clear();
        fireDatasetChanged();

    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof OHLCSeriesCollection)) {
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        CategoryPlot<?, ?> plot = (CategoryPlot) chart.getPlot();
        NumberAxis axis = (NumberAxis) plot.getRangeAxis();
        axis.setAutoRangeIncludesZero(false);
        assertEquals(axis.getLowerBound(), 95.0, EPSILON);
        assertEquals(axis.getUpperBound(), 205.0, EPSILON);
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/SubCategoryAxisTest.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/MeterChartTest.java
Starting at line 886 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 294 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/SpiderWebPlotTest.java
Starting at line 995 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1018 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 1041 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

            BufferedImage image = new BufferedImage(200 , 100,
                    BufferedImage.TYPE_INT_RGB);
            Graphics2D g2 = image.createGraphics();
            chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
            g2.dispose();
        }
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 222 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 616 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 241 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 317 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 559 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 635 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01100
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 260 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 336 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 578 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 654 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(31.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01110 - bottom. left and right
        container.clear();
        container.add(new EmptyBlock(21.0, 12.3), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 276 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 436 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 670 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 298 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 540 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 10010 - right and top only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.TOP);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 594 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 754 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java

    public void testEquals() {
        PieSectionEntity<String> e1 = new PieSectionEntity<>(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), 
                new DefaultPieDataset<String>(), 1, 2, "Key", "ToolTip", "URL");
        PieSectionEntity<String> e2 = new PieSectionEntity<>(
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 130 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 151 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 7 line (52 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 99 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", true, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 20 line (52 tokens) duplication in the following files: 
Starting at line 750 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 768 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        plot.addRangeMarker(new IntervalMarker(2.2, 3.3), Layer.BACKGROUND);
        JFreeChart chart2 = TestUtils.serialised(chart);
        assertEquals(chart, chart2);

        // now check that the chart is usable...
        try {
            chart2.createBufferedImage(300, 200);
        }
        catch (Exception e) {
            fail("No exception should be thrown.");
        }
    }

    /**
     * Tests a bug where the plot is no longer registered as a listener
     * with the dataset(s) and axes after deserialization.  See patch 1209475
     * at SourceForge.
     */
    @Test
    public void testSerialization5() {
=====================================================================
Found a 17 line (52 tokens) duplication in the following files: 
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/AbstractXYItemRendererTest.java

        BarRenderer r2 = (BarRenderer) r1.clone();

        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);

        // check that the generator has been cloned
        assertNotSame(r1.getLegendItemToolTipGenerator(), r2.getLegendItemToolTipGenerator());
    }

    /**
     * Check that the legendItemURLGenerator is cloned.
     * 
     * @throws java.lang.CloneNotSupportedException
     */
    @Test
    public void testCloning_LegendItemURLGenerator() throws CloneNotSupportedException {
=====================================================================
Found a 9 line (52 tokens) duplication in the following files: 
Starting at line 236 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYAreaRendererTest.java
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBubbleRendererTest.java
Starting at line 193 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYDifferenceRendererTest.java
Starting at line 290 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYLineAndShapeRendererTest.java

        plot.setDataset(1, d2);
        JFreeChart chart = new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("S5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

}
=====================================================================
Found a 10 line (52 tokens) duplication in the following files: 
Starting at line 357 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 391 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 425 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/DefaultKeyedValuesTest.java

        assertEquals(data.getKey(3), "D");

        // check retrieve value by key
        assertEquals(data.getValue("A"), 2.0);
        assertNull(data.getValue("B"));
        assertEquals(data.getValue("C"), 1.0);
        assertEquals(data.getValue("D"), 3.0);

        // check retrieve value by index
        assertEquals(data.getValue(0), 2.0);
=====================================================================
Found a 8 line (52 tokens) duplication in the following files: 
Starting at line 694 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java
Starting at line 733 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/TimeSeriesTest.java

        TimeSeries<String> series = new TimeSeries<>("Test Series");
        series.addChangeListener(this);
        assertEquals(Long.MAX_VALUE, series.getMaximumItemAge());
        assertEquals(Integer.MAX_VALUE, series.getMaximumItemCount());
        this.gotSeriesChangeEvent = false;

        // test empty series
        series.removeAgedItems(true);
=====================================================================
Found a 4 line (52 tokens) duplication in the following files: 
Starting at line 95 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
                new double[1]);
=====================================================================
Found a 7 line (52 tokens) duplication in the following files: 
Starting at line 117 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultXYDataset<String> d2 = TestUtils.serialised(d1);
        assertEquals(d1, d2);

        // try a dataset with some content...
        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/MatrixSeriesCollectionTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/MatrixSeriesCollectionTest.java

    public void testCloning() throws CloneNotSupportedException {
        MatrixSeries<String> s1 = new MatrixSeries<>("Series", 2, 3);
        s1.update(0, 0, 1.1);
        MatrixSeriesCollection<String> c1 = new MatrixSeriesCollection<>();
        c1.addSeries(s1);
        MatrixSeriesCollection<String> c2 = CloneUtils.clone(c1);
=====================================================================
Found a 15 line (52 tokens) duplication in the following files: 
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesCollectionTest.java
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java

        c2.getSeries(0).add(2.0, 2.1, 0.2, 0.3);
        assertEquals(c1, c2);

        // check that c2 gets notified when data series is updated
        DatasetChangeConfirmation listener = new DatasetChangeConfirmation();
        c2.addChangeListener(listener);
        c2.getSeries(0).add(3.0, 2.99, 3.01, 3.4);
        assertNotNull(listener.event);
    }

    /**
     * Some checks for the removeSeries() method.
     */
    @Test
    public void testRemoveSeries() {
=====================================================================
Found a 18 line (52 tokens) duplication in the following files: 
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYSeriesTest.java

        s1.add(3.0, 200.0);
        XYSeries<String> s2 = CloneUtils.clone(s1);
        assertEquals(s1, s2);

        // check independence
        s2.add(4.0, 300.0);
        assertNotEquals(s1, s2);
        s1.add(4.0, 300.0);
        assertEquals(s1, s2);
    }

    /**
     * Another test of the clone() method.
     *
     * @throws java.lang.CloneNotSupportedException  if there is a problem cloning.
     */
    @Test
    public void testCloning3() throws CloneNotSupportedException {
=====================================================================
Found a 28 line (51 tokens) duplication in the following files: 
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/CategoryLineAnnotation.java
Starting at line 713 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        result = 37 * result + this.stroke.hashCode();
        return result;
    }

    /**
     * Returns a clone of the annotation.
     *
     * @return A clone.
     *
     * @throws CloneNotSupportedException  this class will not throw this
     *         exception, but subclasses (if any) might.
     */
    @Override
    public Object clone() throws CloneNotSupportedException {
        return super.clone();
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the output stream.
     *
     * @throws IOException if there is an I/O error.
     */
    private void writeObject(ObjectOutputStream stream) throws IOException {
        stream.defaultWriteObject();
        SerialUtils.writePaint(this.paint, stream);
        SerialUtils.writeStroke(this.stroke, stream);
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 310 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java

        temp = Double.doubleToLongBits(this.y0);
        result = 29 * result + (int) (temp ^ (temp >>> 32));
        temp = Double.doubleToLongBits(this.y1);
        result = 29 * result + (int) (temp ^ (temp >>> 32));
=====================================================================
Found a 18 line (51 tokens) duplication in the following files: 
Starting at line 354 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYBoxAnnotation.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYPolygonAnnotation.java
Starting at line 275 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYShapeAnnotation.java

        stream.defaultWriteObject();
        SerialUtils.writeStroke(this.stroke, stream);
        SerialUtils.writePaint(this.outlinePaint, stream);
        SerialUtils.writePaint(this.fillPaint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream ({@code null} not permitted).
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
            throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.stroke = SerialUtils.readStroke(stream);
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 997 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 1001 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java

            block.draw(g2, (float) anchorPoint.getX(),
                    (float) anchorPoint.getY(), position.getLabelAnchor(),
                    (float) anchorPoint.getX(), (float) anchorPoint.getY(),
                    position.getAngle());
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 725 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 357 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java

        if (RectangleEdge.isTopOrBottom(edge)) {
            min = area.getX();
            max = area.getMaxX();
        }
        else if (RectangleEdge.isLeftOrRight(edge)) {
            min = area.getMaxY();
            max = area.getY();
        }
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 793 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 809 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 833 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

        if (DateTickUnitType.MILLISECOND.equals(unit.getUnitType())) {
            years = calendar.get(Calendar.YEAR);
            months = calendar.get(Calendar.MONTH);
            days = calendar.get(Calendar.DATE);
            hours = calendar.get(Calendar.HOUR_OF_DAY);
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 709 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 772 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java

            } else if (Double.isNaN(candidateWidth)) {
                candidate = prevCandidate;
                found = true;
            } else {
                prevCandidate = candidate;
                candidate = tickUnits.getLargerTickUnit(prevCandidate);
                if (candidate.equals(prevCandidate)) {
                    found = true;  // there are no more candidates
                }
            }
        } 
        setTickUnit((NumberTickUnit) candidate, false, false);
    }
=====================================================================
Found a 49 line (51 tokens) duplication in the following files: 
Starting at line 125 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/AbstractBlock.java
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/Size2D.java

    }

    /**
     * Returns the natural width of the block, if this is known in advance.
     * The actual width of the block may be overridden if layout constraints
     * make this necessary.
     *
     * @return The width.
     *
     * @see #setWidth(double)
     */
    public double getWidth() {
        return this.width;
    }

    /**
     * Sets the natural width of the block, if this is known in advance.
     *
     * @param width  the width (in Java2D units)
     *
     * @see #getWidth()
     */
    public void setWidth(double width) {
        this.width = width;
    }

    /**
     * Returns the natural height of the block, if this is known in advance.
     * The actual height of the block may be overridden if layout constraints
     * make this necessary.
     *
     * @return The height.
     *
     * @see #setHeight(double)
     */
    public double getHeight() {
        return this.height;
    }

    /**
     * Sets the natural width of the block, if this is known in advance.
     *
     * @param height  the width (in Java2D units)
     *
     * @see #getHeight()
     */
    public void setHeight(double height) {
        this.height = height;
    }
=====================================================================
Found a 45 line (51 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/block/LabelBlock.java
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/entity/ChartEntity.java
Starting at line 631 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItem.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendItemBlockContainer.java

    }

    /**
     * Returns the tool tip text.
     *
     * @return The tool tip text (possibly {@code null}).
     *
     * @see #setToolTipText(String)
     */
    public String getToolTipText() {
        return this.toolTipText;
    }

    /**
     * Sets the tool tip text.
     *
     * @param text  the text ({@code null} permitted).
     *
     * @see #getToolTipText()
     */
    public void setToolTipText(String text) {
        this.toolTipText = text;
    }

    /**
     * Returns the URL text.
     *
     * @return The URL text (possibly {@code null}).
     *
     * @see #setURLText(String)
     */
    public String getURLText() {
        return this.urlText;
    }

    /**
     * Sets the URL text.
     *
     * @param text  the text ({@code null} permitted).
     *
     * @see #getURLText()
     */
    public void setURLText(String text) {
        this.urlText = text;
    }
=====================================================================
Found a 20 line (51 tokens) duplication in the following files: 
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardCategorySeriesLabelGenerator.java
Starting at line 147 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/labels/StandardXYSeriesLabelGenerator.java

                = (StandardCategorySeriesLabelGenerator) obj;
        if (!this.formatPattern.equals(that.formatPattern)) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code for this instance.
     *
     * @return A hash code.
     */
    @Override
    public int hashCode() {
        int result = 127;
        result = HashUtils.hashCode(result, this.formatPattern);
        return result;
    }

}
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 3557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3347 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

                axisCollection.add(yAxis, getRangeAxisEdge(index));
            }
        }

        Map<Axis, AxisState> axisStateMap = new HashMap<>();

        // draw the top axes
        double cursor = dataArea.getMinY() - this.axisOffset.calculateTopOutset(
                dataArea.getHeight());
        for (Axis axis: axisCollection.getAxesAtTop()) {
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 4019 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 4046 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java

            List<Integer> mappedAxes = this.datasetToDomainAxesMap.get(datasetIndex);
            if (mappedAxes == null) {
                if (axisIndex == 0) {
                    result.add(dataset);
                }
            } else {
                if (mappedAxes.contains(axisIndex)) {
                    result.add(dataset);
                }
            }
        }
        return result;
    }
=====================================================================
Found a 11 line (51 tokens) duplication in the following files: 
Starting at line 612 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/Crosshair.java
Starting at line 2993 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/pie/PiePlot.java

        if (!this.labelFont.equals(that.labelFont)) {
            return false;
        }
        if (!PaintUtils.equal(this.labelPaint, that.labelPaint)) {
            return false;
        }
        if (!PaintUtils.equal(this.labelBackgroundPaint,
                that.labelBackgroundPaint)) {
            return false;
        }
        if (this.labelOutlineVisible != that.labelOutlineVisible) {
=====================================================================
Found a 36 line (51 tokens) duplication in the following files: 
Starting at line 154 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialCap.java
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint used to draw the outline of the cap.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setOutlinePaint(Paint)
     */
    public Paint getOutlinePaint() {
        return this.outlinePaint;
    }

    /**
     * Sets the paint used to draw the outline of the cap and sends a
     * {@link DialLayerChangeEvent} to all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getOutlinePaint()
     */
    public void setOutlinePaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.outlinePaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the stroke used to draw the outline of the cap.
     *
     * @return The stroke (never {@code null}).
     *
     * @see #setOutlineStroke(Stroke)
     */
    public Stroke getOutlineStroke() {
=====================================================================
Found a 36 line (51 tokens) duplication in the following files: 
Starting at line 351 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialRange.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the paint.
     *
     * @return The paint (never {@code null}).
     *
     * @see #setPaint(Paint)
     */
    public Paint getPaint() {
        return this.paint;
    }

    /**
     * Sets the paint and sends a {@link DialLayerChangeEvent} to all
     * registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getPaint()
     */
    public void setPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.paint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the background paint.
     *
     * @return The background paint.
     *
     * @see #setBackgroundPaint(Paint)
     */
    public Paint getBackgroundPaint() {
=====================================================================
Found a 36 line (51 tokens) duplication in the following files: 
Starting at line 376 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/StandardDialFrame.java

        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the background paint.
     *
     * @return The background paint.
     *
     * @see #setBackgroundPaint(Paint)
     */
    public Paint getBackgroundPaint() {
        return this.backgroundPaint;
    }

    /**
     * Sets the background paint and sends a {@link DialLayerChangeEvent} to
     * all registered listeners.
     *
     * @param paint  the paint ({@code null} not permitted).
     *
     * @see #getBackgroundPaint()
     */
    public void setBackgroundPaint(Paint paint) {
        Args.nullNotPermitted(paint, "paint");
        this.backgroundPaint = paint;
        notifyListeners(new DialLayerChangeEvent(this));
    }

    /**
     * Returns the outline stroke.
     *
     * @return The outline stroke (never {@code null}).
     *
     * @see #setOutlineStroke(Stroke)
     */
    public Stroke getOutlineStroke() {
=====================================================================
Found a 17 line (51 tokens) duplication in the following files: 
Starting at line 201 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/MeterInterval.java
Starting at line 402 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextBox.java

        SerialUtils.writePaint(this.backgroundPaint, stream);
    }

    /**
     * Provides serialization support.
     *
     * @param stream  the input stream.
     *
     * @throws IOException  if there is an I/O error.
     * @throws ClassNotFoundException  if there is a classpath problem.
     */
    private void readObject(ObjectInputStream stream)
        throws IOException, ClassNotFoundException {
        stream.defaultReadObject();
        this.outlinePaint = SerialUtils.readPaint(stream);
        this.outlineStroke = SerialUtils.readStroke(stream);
        this.backgroundPaint = SerialUtils.readPaint(stream);
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 2210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 2479 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

            List<Marker> markers = this.backgroundDomainMarkers.get(index);
            if (markers != null) {
                for (Marker m : markers) {
                    m.removeChangeListener(this);
                }
                markers.clear();
            }
        }
        if (this.foregroundRangeMarkers != null) {
            List<Marker> markers = this.foregroundDomainMarkers.get(index);
=====================================================================
Found a 26 line (51 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AreaRenderer.java
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/BoxAndWhiskerRenderer.java
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/CategoryStepRenderer.java
Starting at line 628 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LineAndShapeRenderer.java
Starting at line 359 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/ScatterRenderer.java
Starting at line 177 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data plot area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
            int pass) {

        // do nothing if item is not visible or null
        if (!getItemVisible(row, column)) {
            return;
        }
=====================================================================
Found a 30 line (51 tokens) duplication in the following files: 
Starting at line 256 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/HighLowRenderer.java
Starting at line 334 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java

            return DatasetUtils.findRangeBounds(dataset, true);
        }
        else {
            return null;
        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {
=====================================================================
Found a 27 line (51 tokens) duplication in the following files: 
Starting at line 234 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYDotRenderer.java
Starting at line 999 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java

                    transX, transY, orientation);
        }

    }

    /**
     * Returns a legend item for the specified series.
     *
     * @param datasetIndex  the dataset index (zero-based).
     * @param series  the series index (zero-based).
     *
     * @return A legend item for the series (possibly {@code null}).
     */
    @Override
    public LegendItem getLegendItem(int datasetIndex, int series) {

        // if the renderer isn't assigned to a plot, then we don't have a
        // dataset...
        XYPlot plot = getPlot();
        if (plot == null) {
            return null;
        }

        XYDataset dataset = plot.getDataset(datasetIndex);
        if (dataset == null) {
            return null;
        }
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 1123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYLineAndShapeRenderer.java
Starting at line 540 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYShapeRenderer.java

        if (this.defaultShapesFilled != that.defaultShapesFilled) {
            return false;
        }
        if (this.drawOutlines != that.drawOutlines) {
            return false;
        }
        if (this.useOutlinePaint != that.useOutlinePaint) {
            return false;
        }
        if (this.useFillPaint != that.useFillPaint) {
            return false;
        }
        if (this.drawSeriesLineAsPath != that.drawSeriesLineAsPath) {
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 133 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java
Starting at line 143 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java
Starting at line 153 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultChartEditor.java

                "Series_Stroke")));
        info = new JTextField(localizationResources.getString(
                "No_editor_implemented"));
        info.setEnabled(false);
        interior.add(info);
        button = new JButton(localizationResources.getString("Edit..."));
        button.setEnabled(false);
        interior.add(button);
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 163 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextBlock.java
Starting at line 199 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/text/TextBlock.java

    public Shape calculateBounds(Graphics2D g2, float anchorX, float anchorY, 
            TextBlockAnchor anchor, float rotateX, float rotateY, double angle) {
        Size2D d = calculateDimensions(g2);
        float[] offsets = calculateOffsets(anchor, d.getWidth(), d.getHeight());
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 178 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ImageTitle.java
Starting at line 643 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

        RectangleEdge position = getPosition();
        if (position == RectangleEdge.TOP || position == RectangleEdge.BOTTOM) {
            drawHorizontal(g2, area);
        }
        else if (position == RectangleEdge.LEFT
                     || position == RectangleEdge.RIGHT) {
            drawVertical(g2, area);
        }
=====================================================================
Found a 19 line (51 tokens) duplication in the following files: 
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/urls/CustomCategoryURLGenerator.java
Starting at line 94 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/urls/CustomXYURLGenerator.java

        List<String> urls = this.urlSeries.get(list);
        if (urls != null) {
            result = urls.size();
        }
        return result;
    }

    /**
     * Returns the URL for an item.
     *
     * @param series  the series index.
     * @param item  the item index.
     *
     * @return The URL (possibly {@code null}).
     */
    public String getURL(int series, int item) {
        String result = null;
        if (series < getListCount()) {
            List<String> urls = this.urlSeries.get(series);
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 350 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java
Starting at line 447 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/category/DefaultIntervalCategoryDataset.java

    public Number getValue(Comparable series, Comparable category) {
        int seriesIndex = getSeriesIndex(series);
        if (seriesIndex < 0) {
            throw new UnknownKeyException("Unknown 'series' key.");
        }
        int itemIndex = getColumnIndex(category);
        if (itemIndex < 0) {
            throw new UnknownKeyException("Unknown 'category' key.");
        }
        return getValue(seriesIndex, itemIndex);
=====================================================================
Found a 43 line (51 tokens) duplication in the following files: 
Starting at line 252 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/gantt/XYTaskDataset.java
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java

        return getXValue(series, item);
    }

    /**
     * Returns the starting date/time for the specified item (task) in the
     * given series, measured in milliseconds since 1-Jan-1970 (as in
     * java.util.Date).
     *
     * @param series  the series index.
     * @param item  the item (or task) index.
     *
     * @return The start date/time.
     */
    @Override
    public Number getStartX(int series, int item) {
        return getStartXValue(series, item);
    }

    /**
     * Returns the ending date/time for the specified item (task) in the
     * given series, measured in milliseconds since 1-Jan-1970 (as in
     * java.util.Date).
     *
     * @param series  the series index.
     * @param item  the item (or task) index.
     *
     * @return The end date/time.
     */
    @Override
    public Number getEndX(int series, int item) {
        return getEndXValue(series, item);
    }

    /**
     * Returns the y-value (as a double primitive) for an item within a series.
     *
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     *
     * @return The value.
     */
    @Override
    public double getYValue(int series, int item) {
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 696 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1191 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                        maximum = Math.max(maximum, uvalue);
                    }
                }
            }
        }
        else {
            for (int series = 0; series < seriesCount; series++) {
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 1187 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1398 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

                    if (!Double.isNaN(lvalue)) {
                        minimum = Math.min(minimum, lvalue);
                    }
                    if (!Double.isNaN(uvalue)) {
                        maximum = Math.max(maximum, uvalue);
                    }
                }
            }
        }
        else {
            // standard case - plain XYDataset
            for (int series = 0; series < seriesCount; series++) {
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 1530 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1579 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            for (S seriesKey : visibleSeriesKeys) {
                int series = dataset.indexOf(seriesKey);
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    double x = dataset.getXValue(series, item);
                    double y = dataset.getYValue(series, item);
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 87 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultBoxAndWhiskerCategoryDataset.java
Starting at line 134 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/DefaultStatisticalCategoryDataset.java

    public DefaultBoxAndWhiskerCategoryDataset() {
        this.data = new KeyedObjects2D<>();
        this.minimumRangeValue = Double.NaN;
        this.minimumRangeValueRow = -1;
        this.minimumRangeValueColumn = -1;
        this.maximumRangeValue = Double.NaN;
        this.maximumRangeValueRow = -1;
        this.maximumRangeValueColumn = -1;
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 146 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java
Starting at line 190 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/statistics/Regression.java

        if (n < 2) {
            throw new IllegalArgumentException("Not enough data.");
        }

        double sumX = 0;
        double sumY = 0;
        double sumXX = 0;
        double sumXY = 0;
        for (int i = 0; i < n; i++) {
            double x = Math.log(data[i][0]);
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 325 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java
Starting at line 345 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Hour.java

    public long getFirstMillisecond(Calendar calendar) {
        int year = this.day.getYear();
        int month = this.day.getMonth() - 1;
        int dom = this.day.getDayOfMonth();
        calendar.set(year, month, dom, this.hour, 0, 0);
=====================================================================
Found a 20 line (51 tokens) duplication in the following files: 
Starting at line 320 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java
Starting at line 307 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java

        for (XIntervalSeries series : this.data) {
          series.removeChangeListener(this);
        }
        this.data.clear();
        fireDatasetChanged();
    }

    /**
     * Tests this instance for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof XIntervalSeriesCollection)) {
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 155 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 176 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java
Starting at line 243 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

    public void testAutoRange1() {
        DefaultCategoryDataset<String, String> dataset = new DefaultCategoryDataset<>();
        dataset.setValue(100.0, "Row 1", "Column 1");
        dataset.setValue(200.0, "Row 1", "Column 2");
        JFreeChart chart = ChartFactory.createBarChart("Test", "Categories",
                "Value", dataset);
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/LogAxisTest.java
Starting at line 269 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/axis/NumberAxisTest.java

        assertEquals(207.0529847682752, axis.getUpperBound(), EPSILON);

        // now replacing the dataset should update the axis range...
        DefaultCategoryDataset<String, String> dataset2 = new DefaultCategoryDataset<>();
        dataset2.setValue(900.0, "Row 1", "Column 1");
        dataset2.setValue(1000.0, "Row 1", "Column 2");
        plot.setDataset(dataset2);
        assertEquals(895.2712433374774, axis.getLowerBound(), EPSILON);
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 387 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 430 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 705 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 737 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 748 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(77.9, size.height, EPSILON);

        // TBLRC
        // 11011
        container.clear();
        container.add(new EmptyBlock(1.0, 2.0), RectangleEdge.TOP);
        container.add(new EmptyBlock(3.0, 4.0), RectangleEdge.BOTTOM);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 595 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 671 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 711 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(5.0, 6.0), RectangleEdge.LEFT);
        container.add(new EmptyBlock(7.0, 8.0), RectangleEdge.RIGHT);
        container.add(new EmptyBlock(9.0, 10.0));
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(14.0, size.height, EPSILON);
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 204 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                true, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0),
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 132 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 223 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 217 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 158 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertEquals(item1, item2);

        item1 = new LegendItem("Label2", "Description2", "ToolTip",
                "URL", false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0),
                false, Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f),
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 166 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 231 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                new BasicStroke(2.1f), Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.BLUE, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description2", "ToolTip", "URL",
                false, new Rectangle2D.Double(4.0, 3.0, 2.0, 1.0), false,
                Color.BLACK, false, Color.YELLOW, new BasicStroke(1.2f), true,
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 67 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/MeterChartTest.java
Starting at line 591 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/pie/PiePlotTest.java
Starting at line 76 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer2Test.java

        BufferedImage image = new BufferedImage(200, 100,
                BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        chart.draw(g2, new Rectangle2D.Double(0, 0, 200, 100), null, null);
        g2.dispose();
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 1136 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1229 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryItemRenderer renderer2 = new LineAndShapeRenderer();
        plot.setRenderer(20, renderer2);
        assertEquals(2, plot.getRendererCount());
        assertEquals(renderer2, plot.getRenderer(20));
        
        assertEquals(20, plot.getIndexOf(renderer2));
    }

    @Test 
    public void testGetRendererForDataset2() {
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 112 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialBackgroundTest.java
Starting at line 140 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/dial/DialBackgroundTest.java

        assertSame(b1.getClass(), b2.getClass());
        assertEquals(b1, b2);

        // test a customised instance
        b1 = new DialBackground();
        b1.setPaint(new GradientPaint(1.0f, 2.0f, Color.RED, 3.0f, 4.0f,
                Color.GREEN));
        b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(
                GradientPaintTransformType.CENTER_VERTICAL));
        b2 = (DialBackground) b1.clone();
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 555 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java
Starting at line 612 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

                new NumberAxis("Range Axis"), r1);
        XYPlot<String> p2 = CloneUtils.clone(p1);
        assertNotSame(p1, p2);
        assertSame(p1.getClass(), p2.getClass());
        assertEquals(p1, p2);

        // verify that the plot is listening to the cloned renderer
        XYLineAndShapeRenderer r2 = (XYLineAndShapeRenderer) p2.getRenderer();
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 96 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AreaRendererTest.java
Starting at line 142 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/CategoryStepRendererTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/DefaultCategoryItemRendererTest.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/IntervalBarRendererTest.java
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LayeredBarRendererTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/MinMaxCategoryRendererTest.java
Starting at line 116 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedAreaRendererTest.java
Starting at line 89 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StackedBarRendererTest.java
Starting at line 102 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 100 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRendererTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/HighLowRendererTest.java

        AreaRenderer r2 = CloneUtils.clone(r1);
        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);
        TestUtils.checkIndependence(r1, r2);
    }

    /**
     * Check that this class implements PublicCloneable.
     */
    @Test
    public void testPublicCloneable() {
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 179 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 392 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java

            dataset.add(new BoxAndWhiskerItem(1.0, 2.0, 0.0, 4.0, 0.5,
                    4.5, -0.5, 5.5, null), "S1", "C1");
            CategoryPlot<String, String> plot = new CategoryPlot<>(dataset,
                    new CategoryAxis("Category"), new NumberAxis("Value"),
                    new BoxAndWhiskerRenderer());
=====================================================================
Found a 12 line (51 tokens) duplication in the following files: 
Starting at line 324 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/BoxAndWhiskerRendererTest.java
Starting at line 250 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/LineAndShapeRendererTest.java

        /*JFreeChart chart =*/ new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("R5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }

    /**
     * Draws a chart where the dataset contains a null mean value.
     */
    @Test
    public void testDrawWithNullMean() {
=====================================================================
Found a 10 line (51 tokens) duplication in the following files: 
Starting at line 255 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalBarRendererTest.java
Starting at line 173 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRendererTest.java

        StatisticalBarRenderer r = new StatisticalBarRenderer();
        assertNull(r.findRangeBounds(null));

        // an empty dataset should return a null range
        DefaultStatisticalCategoryDataset<String, String> dataset
                = new DefaultStatisticalCategoryDataset<>();
        assertNull(r.findRangeBounds(dataset));

        dataset.add(1.0, 0.5, "R1", "C1");
        assertEquals(new Range(0.0, 1.5), r.findRangeBounds(dataset));
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 61 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        d.addSeries("S1", new double[][] {{}, {}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 0, 10.0,
                11.0));

        // check a series with one item
        d.addSeries("S2", new double[][] {{0.0}, {9.9}});
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 215 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/StandardXYItemRendererTest.java
Starting at line 353 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/xy/XYBarRendererTest.java

        plot.setDataset(1, d2);
        JFreeChart chart = new JFreeChart(plot);
        LegendItem li = r.getLegendItem(1, 2);
        assertEquals("S5", li.getLabel());
        assertEquals(1, li.getDatasetIndex());
        assertEquals(2, li.getSeriesIndex());
    }
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/category/CategoryToPieDatasetTest.java

    public void testEquals() {
        DefaultCategoryDataset<String, String> underlying = new DefaultCategoryDataset<>();
        underlying.addValue(1.1, "R1", "C1");
        underlying.addValue(2.2, "R1", "C2");
        CategoryToPieDataset d1 = new CategoryToPieDataset(underlying,
                TableOrder.BY_COLUMN, 1);
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 455 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesCollectionTest.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/TaskSeriesTest.java

        TaskSeries<String> s1 = new TaskSeries<>("S1");
        s1.add(new Task("T1", new Date(1), new Date(2)));
        s1.add(new Task("T2", new Date(11), new Date(22)));
        TaskSeries<String> s2 = new TaskSeries<>("S2");
=====================================================================
Found a 8 line (51 tokens) duplication in the following files: 
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDatasetTest.java
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/statistics/DefaultBoxAndWhiskerXYDatasetTest.java

        DefaultBoxAndWhiskerXYDataset<String> d2 = TestUtils.serialised(d1);
        assertEquals(d1, d2);

        // test independence
        d1.add(new Date(2L), new BoxAndWhiskerItem(1.0, 2.0, 3.0, 4.0, 5.0,
                6.0, 7.0, 8.0, new ArrayList<>()));
        assertNotEquals(d1, d2);
    }
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 542 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/DayTest.java
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/HourTest.java
Starting at line 481 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 568 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 591 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 452 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/SecondTest.java
Starting at line 494 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/WeekTest.java
Starting at line 501 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/YearTest.java

        assertEquals(cal.getTime(), d.getStart());
        Locale.setDefault(saved);
    }

    /**
     * Some checks for the getEnd() method.
     */
    @Test
    public void testGetEnd() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.ITALY);
        Calendar cal = Calendar.getInstance(Locale.ITALY);
        cal.set(1900, Calendar.JANUARY, 1, 23, 59, 59);
=====================================================================
Found a 13 line (51 tokens) duplication in the following files: 
Starting at line 264 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MillisecondTest.java
Starting at line 237 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MinuteTest.java
Starting at line 371 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

        Millisecond m = new Millisecond(599, 23, 45, 7, 9, 10, 2007);
        assertFalse(m instanceof Cloneable);
    }

    /**
     * Some checks for the getFirstMillisecond() method.
     */
    @Test
    public void testGetFirstMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[1], new double[1], new double[1]);
        assertEquals(d1, d2);

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
=====================================================================
Found a 6 line (51 tokens) duplication in the following files: 
Starting at line 97 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

                new double[] {3.4}, new double[1], new double[1],
                new double[1]);
        assertNotEquals(d1, d2);
        d2 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2},
                new double[] {3.4}, new double[1], new double[1],
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYZDatasetTest.java

        DefaultXYDataset<String> d2 = new DefaultXYDataset<>();
        assertEquals(d1, d2);
        assertEquals(d2, d1);

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 60 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 206 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 57 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 81 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java
Starting at line 120 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

        assertEquals(d2, d1);

        double[] x1 = new double[] {1.0, 2.0, 3.0};
        double[] y1 = new double[] {4.0, 5.0, 6.0};
        double[][] data1 = new double[][] {x1, y1};
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 210 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 62 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

        d.addSeries("S1", data1);

        double[] x2 = new double[] {1.0, 2.0, 3.0};
        double[] y2 = new double[] {4.0, 5.0, 6.0};
        double[][] data2 = new double[][] {x2, y2};
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/IntervalXYDelegateTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/IntervalXYDelegateTest.java

    public void testCloning() throws CloneNotSupportedException {
        XYSeries<String> s1 = new XYSeries<>("Series");
        s1.add(1.2, 3.4);
        XYSeriesCollection<String> c1 = new XYSeriesCollection<>();
        c1.addSeries(s1);
        IntervalXYDelegate d1 = new IntervalXYDelegate(c1);
        IntervalXYDelegate d2 = CloneUtils.clone(d1);
=====================================================================
Found a 21 line (50 tokens) duplication in the following files: 
Starting at line 268 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYDataImageAnnotation.java
Starting at line 207 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYImageAnnotation.java
Starting at line 254 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/annotations/XYLineAnnotation.java

                    (yy1 - yy0)), rendererIndex, toolTip, url);
        }
    }

    /**
     * Tests this object for equality with an arbitrary object.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A boolean.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        // now try to reject equality...
        if (!super.equals(obj)) {
            return false;
        }
        if (!(obj instanceof XYDataImageAnnotation)) {
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 1363 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

                            - insets.getRight() - labelBounds.getWidth() / 2.0;
            double labely = labelLocationY(this.labelLocation, dataArea);
            TextAnchor anchor = labelAnchorV(this.labelLocation);
            TextUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle() - Math.PI / 2.0, 
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 1460 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java
Starting at line 1476 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/Axis.java

                            - insets.getRight() - labelBounds.getWidth() / 2.0;
            double labely = labelLocationY(this.labelLocation, dataArea);
            TextAnchor anchor = labelAnchorV(this.labelLocation);
            AttrStringUtils.drawRotatedString(label, g2, (float) labelx,
                    (float) labely, anchor, getLabelAngle() - Math.PI / 2.0, 
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 912 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/CategoryAxis.java
Starting at line 1703 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 504 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/LogAxis.java
Starting at line 599 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/NumberAxis.java
Starting at line 248 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/SubCategoryAxis.java

                plotState);
        if (getAttributedLabel() != null) {
            state = drawAttributedLabel(getAttributedLabel(), g2, plotArea, 
                    dataArea, edge, state);
            
        } else {
            state = drawLabel(getLabel(), g2, plotArea, dataArea, edge, state);
        }
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 1484 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1600 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java
Starting at line 1653 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/DateAxis.java

                if (minorTickTime > 0 && getRange().contains(minorTickTime)
                        && (!isHiddenValue(minorTickTime))) {
                    result.add(new DateTick(TickType.MINOR,
                            new Date(minorTickTime), "", TextAnchor.TOP_CENTER,
                            TextAnchor.CENTER, 0.0));
                }
            }
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 1139 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxis.java
Starting at line 245 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/axis/PeriodAxisLabelInfo.java

            Constructor c = periodClass.getDeclaredConstructor(new Class[] {
                    Date.class, TimeZone.class, Locale.class});
            result = (RegularTimePeriod) c.newInstance(new Object[] {
                    millisecond, zone, locale});
        }
        catch (Exception e) {
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 649 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java
Starting at line 956 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/ChartFactory.java

    public static JFreeChart createBarChart(String title,
            String categoryAxisLabel, String valueAxisLabel,
            CategoryDataset dataset, PlotOrientation orientation,
            boolean legend, boolean tooltips, boolean urls) {

        Args.nullNotPermitted(orientation, "orientation");
        CategoryAxis categoryAxis = new CategoryAxis(categoryAxisLabel);
        ValueAxis valueAxis = new NumberAxis(valueAxisLabel);
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 490 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendGraphic.java
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/ShortTextTitle.java
Starting at line 419 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/title/TextTitle.java

                if (h == LengthConstraintType.NONE) {
                    contentSize = arrangeNN(g2);
                }
                else if (h == LengthConstraintType.RANGE) {
                    throw new RuntimeException("Not yet implemented.");
                }
                else if (h == LengthConstraintType.FIXED) {
                    throw new RuntimeException("Not yet implemented.");
                }   break;
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 500 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendGraphic.java
Starting at line 433 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

                if (h == LengthConstraintType.NONE) {
                    throw new RuntimeException("Not yet implemented.");
                }
                else if (h == LengthConstraintType.RANGE) {
                    throw new RuntimeException("Not yet implemented.");
                }
                else if (h == LengthConstraintType.FIXED) {
                    throw new RuntimeException("Not yet implemented.");
                }   break;
=====================================================================
Found a 27 line (50 tokens) duplication in the following files: 
Starting at line 526 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/LegendTitle.java
Starting at line 488 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/legend/PaintScaleLegend.java

    }

    /**
     * Draws the title on a Java 2D graphics device (such as the screen or a
     * printer).
     *
     * @param g2  the graphics device.
     * @param area  the available area for the title.
     */
    @Override
    public void draw(Graphics2D g2, Rectangle2D area) {
        draw(g2, area, null);
    }

    /**
     * Draws the block within the specified area.
     *
     * @param g2  the graphics device.
     * @param area  the area.
     * @param params  ignored ({@code null} permitted).
     *
     * @return An {@link org.jfree.chart.block.EntityBlockResult} or
     *         {@code null}.
     */
    @Override
    public Object draw(Graphics2D g2, Rectangle2D area, Object params) {
        Rectangle2D target = (Rectangle2D) area.clone();
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 3920 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java
Starting at line 3960 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CategoryPlot.java

            double yy = renderer.getItemMiddle(rowKey, columnKey, dataset, axis,
                    dataArea, RectangleEdge.LEFT);
            line = new Line2D.Double(dataArea.getMinX(), yy,
                    dataArea.getMaxX(), yy);
        }
        g2.setStroke(stroke);
        g2.setPaint(paint);
        g2.draw(line);

    }
=====================================================================
Found a 28 line (50 tokens) duplication in the following files: 
Starting at line 397 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/CombinedDomainCategoryPlot.java
Starting at line 478 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/FastScatterPlot.java

        });
        super.receive(visitor);
    }

    /**
     * Draws the plot on a Java 2D graphics device (such as the screen or a
     * printer).  Will perform all the placement calculations for each of the
     * sub-plots and then tell these to draw themselves.
     *
     * @param g2  the graphics device.
     * @param area  the area within which the plot (including axis labels)
     *              should be drawn.
     * @param anchor  the anchor point ({@code null} permitted).
     * @param parentState  the state from the parent plot, if there is one.
     * @param info  collects information about the drawing ({@code null}
     *              permitted).
     */
    @Override
     public void draw(Graphics2D g2, Rectangle2D area, Point2D anchor,
            PlotState parentState, PlotRenderingInfo info) {

        // set up info collection...
        if (info != null) {
            info.setPlotArea(area);
        }

        // adjust the drawing area for plot insets (if any)...
        RectangleInsets insets = getInsets();
=====================================================================
Found a 27 line (50 tokens) duplication in the following files: 
Starting at line 464 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialPointer.java
Starting at line 426 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/dial/DialValueIndicator.java

            notifyListeners(new DialLayerChangeEvent(this));
        }

        /**
         * Returns the outline paint.
         *
         * @return The paint (never {@code null}).
         *
         * @see #setOutlinePaint(Paint)
         */
        public Paint getOutlinePaint() {
            return this.outlinePaint;
        }

        /**
         * Sets the outline paint and sends a {@link DialLayerChangeEvent} to
         * all registered listeners.
         *
         * @param paint  the paint ({@code null} not permitted).
         *
         * @see #getOutlinePaint()
         */
        public void setOutlinePaint(Paint paint) {
            Args.nullNotPermitted(paint, "paint");
            this.outlinePaint = paint;
            notifyListeners(new DialLayerChangeEvent(this));
        }
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 607 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/PolarPlot.java
Starting at line 1403 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        PolarItemRenderer existing = getRenderer(index);
        if (existing != null) {
            existing.removeChangeListener(this);
        }
        this.renderers.put(index, renderer);
        if (renderer != null) {
            renderer.setPlot(this);
            renderer.addChangeListener(this);
        }
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 2990 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java
Starting at line 3007 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/plot/XYPlot.java

        for (int i : rendererIndices) {
            XYItemRenderer renderer = getRenderer(i);
            if (renderer != null) {
                ValueAxis domainAxis = getDomainAxisForDataset(i);
                ValueAxis rangeAxis = getRangeAxisForDataset(i);
                renderer.drawAnnotations(g2, dataArea, domainAxis, rangeAxis, 
                        Layer.BACKGROUND, info);
=====================================================================
Found a 21 line (50 tokens) duplication in the following files: 
Starting at line 778 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 818 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 937 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

        g2.setStroke(stroke);
        Object saved = g2.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, 
                RenderingHints.VALUE_STROKE_NORMALIZE);
        g2.draw(line);
        g2.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, saved);
    }

    /**
     * Draws a line perpendicular to the range axis.
     *
     * @param g2  the graphics device.
     * @param plot  the plot.
     * @param axis  the value axis.
     * @param dataArea  the area for plotting data.
     * @param value  the value at which the grid line should be drawn.
     * @param paint  the paint ({@code null} not permitted).
     * @param stroke  the stroke ({@code null} not permitted).
     */
    @Override
    public void drawRangeLine(Graphics2D g2, CategoryPlot plot, ValueAxis axis,
=====================================================================
Found a 12 line (50 tokens) duplication in the following files: 
Starting at line 1060 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/AbstractCategoryItemRenderer.java
Starting at line 1088 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java
Starting at line 1291 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/AbstractXYItemRenderer.java

                        line.setLine(end2d, y0, end2d, y1);
                        g2.draw(line);
                    }
                }
            }

            String label = marker.getLabel();
            RectangleAnchor anchor = marker.getLabelAnchor();
            if (label != null) {
                Font labelFont = marker.getLabelFont();
                g2.setFont(labelFont);
                Point2D coords = calculateRangeMarkerTextAnchorPoint(
=====================================================================
Found a 12 line (50 tokens) duplication in the following files: 
Starting at line 122 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 183 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LevelRenderer.java

    protected void calculateBarWidth(CategoryPlot plot, Rectangle2D dataArea,
            int rendererIndex, CategoryItemRendererState state) {

        // calculate the bar width - this calculation differs from the
        // BarRenderer calculation because the bars are layered on top of one
        // another, so there is effectively only one bar per category for
        // the purpose of the bar width calculation
        CategoryAxis domainAxis = getDomainAxis(plot, rendererIndex);
        CategoryDataset dataset = plot.getDataset(rendererIndex);
        if (dataset != null) {
            int columns = dataset.getColumnCount();
            int rows = dataset.getRowCount();
=====================================================================
Found a 13 line (50 tokens) duplication in the following files: 
Starting at line 203 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java
Starting at line 328 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/LayeredBarRenderer.java

    protected void drawHorizontalItem(Graphics2D g2,
            CategoryItemRendererState state, Rectangle2D dataArea,
            CategoryPlot plot, CategoryAxis domainAxis, ValueAxis rangeAxis,
            CategoryDataset dataset, int row, int column) {

        // nothing is drawn for null values...
        Number dataValue = dataset.getValue(row, column);
        if (dataValue == null) {
            return;
        }

        // X
        double value = dataValue.doubleValue();
=====================================================================
Found a 26 line (50 tokens) duplication in the following files: 
Starting at line 150 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedAreaRenderer.java
Starting at line 213 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StackedBarRenderer.java

        }
    }

    /**
     * Draw a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the data plot area.
     * @param plot  the plot.
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the data.
     * @param row  the row index (zero-based).
     * @param column  the column index (zero-based).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, CategoryItemRendererState state,
            Rectangle2D dataArea, CategoryPlot plot, CategoryAxis domainAxis,
            ValueAxis rangeAxis, CategoryDataset dataset, int row, int column,
            int pass) {

        if (!isSeriesVisible(row)) {
            return;
        }
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 525 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalBarRenderer.java
Starting at line 412 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/category/StatisticalLineAndShapeRenderer.java

        StatisticalBarRenderer that = (StatisticalBarRenderer) obj;
        if (!PaintUtils.equal(this.errorIndicatorPaint,
                that.errorIndicatorPaint)) {
            return false;
        }
        if (!Objects.equals(this.errorIndicatorStroke, that.errorIndicatorStroke)) {
            return false;
        }
        return super.equals(obj);
    }
=====================================================================
Found a 29 line (50 tokens) duplication in the following files: 
Starting at line 257 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/HighLowRenderer.java
Starting at line 335 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
Starting at line 186 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/StackedXYBarRenderer.java
Starting at line 373 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/renderer/xy/XYBlockRenderer.java

        }
        else {
            return null;
        }
    }

    /**
     * Draws the visual representation of a single data item.
     *
     * @param g2  the graphics device.
     * @param state  the renderer state.
     * @param dataArea  the area within which the plot is being drawn.
     * @param info  collects information about the drawing.
     * @param plot  the plot (can be used to obtain standard color
     *              information etc).
     * @param domainAxis  the domain axis.
     * @param rangeAxis  the range axis.
     * @param dataset  the dataset.
     * @param series  the series index (zero-based).
     * @param item  the item index (zero-based).
     * @param crosshairState  crosshair information for the plot
     *                        ({@code null} permitted).
     * @param pass  the pass index.
     */
    @Override
    public void drawItem(Graphics2D g2, XYItemRendererState state,
            Rectangle2D dataArea, PlotRenderingInfo info, XYPlot plot,
            ValueAxis domainAxis, ValueAxis rangeAxis, XYDataset dataset,
            int series, int item, CrosshairState crosshairState, int pass) {
=====================================================================
Found a 13 line (50 tokens) duplication in the following files: 
Starting at line 175 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultAxisEditor.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/chart/swing/editor/DefaultTitleEditor.java

        this.labelInsets = axis.getLabelInsets();

        setLayout(new BorderLayout());

        JPanel general = new JPanel(new BorderLayout());
        general.setBorder(
            BorderFactory.createTitledBorder(
                BorderFactory.createEtchedBorder(),
                localizationResources.getString("General")
            )
        );

        JPanel interior = new JPanel(new LCBLayout(5));
=====================================================================
Found a 22 line (50 tokens) duplication in the following files: 
Starting at line 119 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/flow/FlowKey.java
Starting at line 105 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/flow/NodeKey.java

        return "[FlowKey: " + this.stage + ", " + this.source + " -> " + this.destination + "]";
    }
    
    /**
     * Tests this instance for equality with an arbitrary object.
     * 
     * @param obj  the object ({@code null} permitted).
     * 
     * @return A boolean. 
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final FlowKey<?> other = (FlowKey<?>) obj;
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 1408 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java
Starting at line 1579 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/general/DatasetUtils.java

            for (S seriesKey : visibleSeriesKeys) {
                int series = dataset.indexOf(seriesKey);
                int itemCount = dataset.getItemCount(series);
                for (int item = 0; item < itemCount; item++) {
                    double x = dataset.getXValue(series, item);
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 315 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/KeyedObjects2D.java
Starting at line 326 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/KeyedObjects2D.java

        for (int item = 0, itemCount = this.rows.size(); item < itemCount;
             item++) {
            row = (KeyedObjects) this.rows.get(item);
            int colIndex = row.getIndex(columnKey);
            if (colIndex >= 0 && row.getObject(colIndex) != null) {
=====================================================================
Found a 21 line (50 tokens) duplication in the following files: 
Starting at line 358 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Day.java
Starting at line 280 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Year.java

        calendar.set(year, month - 1, day, 23, 59, 59);
        calendar.set(Calendar.MILLISECOND, 999);
        return calendar.getTimeInMillis();
    }

    /**
     * Tests the equality of this Day object to an arbitrary object.  Returns
     * true if the target is a Day instance or a SerialDate instance
     * representing the same day as this object. In all other cases,
     * returns false.
     *
     * @param obj  the object ({@code null} permitted).
     *
     * @return A flag indicating whether or not an object is equal to this day.
     */
    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof Day)) {
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 128 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 147 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java

        Calendar calendar = Calendar.getInstance(zone, locale);
        calendar.setTime(time);
        int min = calendar.get(Calendar.MINUTE);
        this.minute = (byte) min;
        this.hour = (byte) calendar.get(Calendar.HOUR_OF_DAY);
        this.day = new Day(time, zone, locale);
=====================================================================
Found a 23 line (50 tokens) duplication in the following files: 
Starting at line 407 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Minute.java
Starting at line 368 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/time/Second.java

        result = 37 * result + this.minute;
        result = 37 * result + this.hour;
        result = 37 * result + this.day.hashCode();
        return result;
    }

    /**
     * Returns an integer indicating the order of this Minute object relative
     * to the specified object:
     *
     * negative == before, zero == same, positive == after.
     *
     * @param o1  object to compare.
     *
     * @return negative == before, zero == same, positive == after.
     */
    @Override
    public int compareTo(Object o1) {
        int result;

        // CASE 1 : Comparing to another Minute object
        // -------------------------------------------
        if (o1 instanceof Minute) {
=====================================================================
Found a 28 line (50 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XIntervalSeriesCollection.java
Starting at line 79 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/XYIntervalSeriesCollection.java
Starting at line 77 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/main/java/org/jfree/data/xy/YIntervalSeriesCollection.java

    public void addSeries(XIntervalSeries<S> series) {
        Args.nullNotPermitted(series, "series");
        this.data.add(series);
        series.addChangeListener(this);
        fireDatasetChanged();
    }

    /**
     * Returns the number of series in the collection.
     *
     * @return The series count.
     */
    @Override
    public int getSeriesCount() {
        return this.data.size();
    }

    /**
     * Returns a series from the collection.
     *
     * @param series  the series index (zero-based).
     *
     * @return The series.
     *
     * @throws IllegalArgumentException if {@code series} is not in the
     *     range {@code 0} to {@code getSeriesCount() - 1}.
     */
    public XIntervalSeries<S> getSeries(int series) {
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/AbstractBlockTest.java
Starting at line 92 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/ColorBlockTest.java

            b2 = (EmptyBlock) b1.clone();
        }
        catch (CloneNotSupportedException e) {
            fail(e.toString());
        }
        assertNotSame(b1, b2);
        assertSame(b1.getClass(), b2.getClass());
        assertEquals(b1, b2);

        bounds1.setFrame(2.0, 4.0, 6.0, 8.0);
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 167 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 195 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 495 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 513 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        assertEquals(12.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00101 - left and center items
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 173 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 192 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(10.0, 20.0));
        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.LEFT);
        size = container.arrange(g2);
        assertEquals(22.3, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // try case where left item is shorter than center item
        container.clear();
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 476 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 485 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.RIGHT);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(45.6, size.height, EPSILON);

        // TBLRC
        // 00011 - right and center items
        container.clear();
        container.add(new EmptyBlock(7.0, 20.0));
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 538 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 633 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01010 - bottom and right only
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.RIGHT);
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 557 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java
Starting at line 614 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/block/BorderArrangementTest.java

        container.add(new EmptyBlock(12.3, 45.6), RectangleEdge.BOTTOM);
        size = container.arrange(g2, constraint);
        assertEquals(10.0, size.width, EPSILON);
        assertEquals(65.6, size.height, EPSILON);

        // TBLRC
        // 01100
        container.clear();
        container.add(new EmptyBlock(10.0, 20.0), RectangleEdge.LEFT);
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 58 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 107 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java
Starting at line 121 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/entity/PieSectionEntityTest.java

    public void testEquals() {
        PieSectionEntity<String> e1 = new PieSectionEntity<>(
                new Rectangle2D.Double(1.0, 2.0, 3.0, 4.0), 
                new DefaultPieDataset<String>(), 1, 2, "Key", "ToolTip", "URL");
        PieSectionEntity<String> e2 = new PieSectionEntity<>(
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java
Starting at line 164 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/LegendItemTest.java

                Color.RED, true, Color.BLUE, new BasicStroke(1.2f), true,
                new Line2D.Double(1.0, 2.0, 3.0, 4.0), new BasicStroke(2.1f),
                Color.GREEN);
        assertNotEquals(item1, item2);
        item2 = new LegendItem("Label2", "Description", "ToolTip", "URL",
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 98 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java

                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f));
        assertEquals(m1, m2);

        //outlinePaint
        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,
                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,
                new BasicStroke(1.0f), 1.0f);
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java
Starting at line 114 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java

                new BasicStroke(1.0f), 1.0f);
        assertNotEquals(m1, m2);
        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,
                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,
                new BasicStroke(1.0f), 1.0f);
=====================================================================
Found a 5 line (50 tokens) duplication in the following files: 
Starting at line 104 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java
Starting at line 124 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java

                new BasicStroke(1.0f), 1.0f);
        assertNotEquals(m1, m2);
        m2 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,
                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,
                new BasicStroke(1.0f), 1.0f);
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java
Starting at line 118 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryMarkerTest.java

                new BasicStroke(1.0f), 1.0f);
        assertEquals(m1, m2);

        //outlineStroke
        m1 = new CategoryMarker("A", new GradientPaint(1.0f, 2.0f, Color.WHITE,
                3.0f, 4.0f, Color.YELLOW), new BasicStroke(2.2f), Color.RED,
                new BasicStroke(3.3f), 1.0f);
=====================================================================
Found a 13 line (50 tokens) duplication in the following files: 
Starting at line 976 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/CategoryPlotTest.java
Starting at line 1081 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/plot/XYPlotTest.java

        CategoryPlot<String, String> plot = new CategoryPlot<>(dataset, xAxis, 
                yAxis, renderer);
        assertEquals(xAxis, plot.getDomainAxisForDataset(0));

        // should get IllegalArgumentException for negative index
        boolean pass = false;
        try {
            plot.getDomainAxisForDataset(-1);
        }
        catch (IllegalArgumentException e) {
            pass = true;
        }
        assertTrue(pass);
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 189 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java
Starting at line 221 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/category/AbstractCategoryItemRendererTest.java

                new StandardCategoryItemLabelGenerator());
        r2 = (BarRenderer) r1.clone();

        assertNotSame(r1, r2);
        assertSame(r1.getClass(), r2.getClass());
        assertEquals(r1, r2);

        r1 = new BarRenderer();
        r1.setDefaultItemLabelGenerator(new StandardCategoryItemLabelGenerator());
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 84 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 238 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4));

        // check a series with four items
        d.addSeries("S5", new double[][] {{1.0, 2.0, 1.5, 1.8}, {9.9, 9.9,
                9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1));
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 131 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 285 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(2, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.4));

        // check a series with four items
        d.addSeries("S5", new double[][] {{1.0, 2.0, 3.0, 4.0}, {9.9, 9.9,
                9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 0.0, 1.1));
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 188 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 342 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 3, 3.0, 4.0));

        // check a series with four items
        d.addSeries("S5", new double[][] {{4.0, 3.0, 2.0, 1.0}, {9.9, 9.9,
                9.9, 9.9}});
        assertEquals(3, RendererUtils.findLiveItemsLowerBound(d, 4, 0.1, 0.5));
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 198 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java
Starting at line 352 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/chart/renderer/RendererUtilsTest.java

        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 4, 4.4, 5.0));

        // check a series with repeating items
        d.addSeries("S6", new double[][] {{3.0, 2.0, 2.0, 2.0, 1.0}, {9.9, 9.9,
                9.9, 9.9, 9.9}});
        assertEquals(0, RendererUtils.findLiveItemsLowerBound(d, 5, 0.0, 3.0));
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 129 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/SlidingGanttCategoryDatasetTest.java
Starting at line 123 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/gantt/XYTaskDatasetTest.java

        SlidingGanttCategoryDataset d2 = TestUtils.serialised(d1);
        assertEquals(d1, d2);

        // basic check for independence
        s1.add(new Task("Task 2", new Date(10L), new Date(11L)));
        assertNotEquals(d1, d2);
        TaskSeriesCollection<String, String> u2
                = (TaskSeriesCollection) d2.getUnderlyingDataset();
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 301 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java
Starting at line 476 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/general/DatasetUtilsTest.java

        r = DatasetUtils.findRangeBounds(dataset);
        assertEquals(1.4, r.getLowerBound(), EPSILON);
        assertEquals(2.5, r.getUpperBound(), EPSILON);

        // another empty series
        YIntervalSeries<String> s2 = new YIntervalSeries<>("S2");
        dataset.addSeries(s2);
        r = DatasetUtils.findRangeBounds(dataset);
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 379 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java
Starting at line 436 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/MonthTest.java

    public void testGetFirstMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
        Month m = new Month(3, 1970);
        assertEquals(5094000000L, m.getFirstMillisecond());
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 402 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java
Starting at line 459 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/time/QuarterTest.java

    public void testGetFirstMillisecond() {
        Locale saved = Locale.getDefault();
        Locale.setDefault(Locale.UK);
        TimeZone savedZone = TimeZone.getDefault();
        TimeZone.setDefault(TimeZone.getTimeZone("Europe/London"));
        Quarter q = new Quarter(3, 1970);
        assertEquals(15634800000L, q.getFirstMillisecond());
=====================================================================
Found a 3 line (50 tokens) duplication in the following files: 
Starting at line 86 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java
Starting at line 90 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultHighLowDatasetTest.java

        d1 = new DefaultHighLowDataset("Series 2",
                new Date[] {new Date(123L)}, new double[] {1.2}, new double[1],
                new double[1], new double[1], new double[1]);
=====================================================================
Found a 3 line (50 tokens) duplication in the following files: 
Starting at line 65 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 212 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/DefaultXYDatasetTest.java
Starting at line 63 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYBarDatasetTest.java

        double[] x2 = new double[] {1.0, 2.0, 3.0};
        double[] y2 = new double[] {4.0, 5.0, 6.0};
        double[][] data2 = new double[][] {x2, y2};
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 54 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/IntervalXYDelegateTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/IntervalXYDelegateTest.java

    public void testEquals() {
       XYSeries<String> s1 = new XYSeries<>("Series");
       s1.add(1.2, 3.4);
       XYSeriesCollection<String> c1 = new XYSeriesCollection<>();
       c1.addSeries(s1);
       IntervalXYDelegate d1 = new IntervalXYDelegate(c1);
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 80 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesCollectionTest.java
Starting at line 108 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/VectorSeriesCollectionTest.java

    public void testCloning() throws CloneNotSupportedException {
        VectorSeries<String> s1 = new VectorSeries<>("Series");
        s1.add(1.0, 1.1, 1.2, 1.3);
        VectorSeriesCollection<String> c1 = new VectorSeriesCollection<>();
        c1.addSeries(s1);
        VectorSeriesCollection<String> c2 = CloneUtils.clone(c1);
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 83 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java
Starting at line 111 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesCollectionTest.java

    public void testCloning() throws CloneNotSupportedException {
        XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>();
        XIntervalSeries<String> s1 = new XIntervalSeries<>("Series");
        s1.add(1.0, 1.1, 1.2, 1.3);
        c1.addSeries(s1);
        XIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1);
=====================================================================
Found a 10 line (50 tokens) duplication in the following files: 
Starting at line 234 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XIntervalSeriesTest.java
Starting at line 234 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/XYIntervalSeriesTest.java
Starting at line 235 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesTest.java

        s1.add(3.0, 3.3, 3.3, 3.3);
        assertEquals(2.0, s1.getX(0).doubleValue(), EPSILON);
        assertEquals(3.0, s1.getX(1).doubleValue(), EPSILON);
    }

    /**
     * Check that the maximum item count can be applied retrospectively.
     */
    @Test
    public void testSetMaximumItemCount2() {
=====================================================================
Found a 6 line (50 tokens) duplication in the following files: 
Starting at line 82 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java
Starting at line 106 of /home/selrhilani/Documents/UDEM/IFT3913-TP2/src/python/metrics/duplicate_metrics/../../../../jfreechart/src/test/java/org/jfree/data/xy/YIntervalSeriesCollectionTest.java

    public void testCloning() throws CloneNotSupportedException {
        YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>();
        YIntervalSeries<String> s1 = new YIntervalSeries<>("Series");
        s1.add(1.0, 1.1, 1.2, 1.3);
        c1.addSeries(s1);
        YIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1);
